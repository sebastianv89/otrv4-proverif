Linear part:
dh(dh(dh_generator,x),y) = dh(dh(dh_generator,y),x)
ec_mul(x_7,ec_mul(y_8,ec_base)) = ec_mul(y_8,ec_mul(x_7,ec_base))
Completing equations...
Completed equations:
ec_mul(x_7,ec_mul(y_8,ec_base)) = ec_mul(y_8,ec_mul(x_7,ec_base))
dh(dh(dh_generator,x),y) = dh(dh(dh_generator,y),x)
Convergent part:
Completing equations...
Completed equations:
Process:
{1}new h: eddsa_private_key;
{2}new f: ec_scalar;
{3}let v_124: ec_point = catch-fail(ec_mul(eddsa_scalar(h),ec_base)) in
{4}let v_125: ec_point = catch-fail(ec_mul(f,ec_base)) in
{5}let v_126: eddsa_signature = catch-fail(eddsa_sign(h,(v_124,v_125))) in
{6}let (cp1: eddsa_signature,h1: eddsa_private_key,f1: ec_scalar) = (if not-caught-fail(v_124) then (if not-caught-fail(v_125) then (if not-caught-fail(v_126) then (v_126,h,f) else fail-bitstring) else fail-bitstring) else fail-bitstring) in
{7}new d: ec_scalar;
{8}let v_127: ec_point = catch-fail(ec_mul(d,ec_base)) in
{9}let v_128: eddsa_signature = catch-fail(eddsa_sign(h1,ec_point_as_bits(v_127))) in
{10}let (pkp1: eddsa_signature,d1: ec_scalar) = (if not-caught-fail(v_127) then (if not-caught-fail(v_128) then (v_128,d) else fail-bitstring) else fail-bitstring) in
{11}new h_129: eddsa_private_key;
{12}new f_130: ec_scalar;
{13}let v_131: ec_point = catch-fail(ec_mul(eddsa_scalar(h_129),ec_base)) in
{14}let v_132: ec_point = catch-fail(ec_mul(f_130,ec_base)) in
{15}let v_133: eddsa_signature = catch-fail(eddsa_sign(h_129,(v_131,v_132))) in
{16}let (cp2: eddsa_signature,h2: eddsa_private_key,f2: ec_scalar) = (if not-caught-fail(v_131) then (if not-caught-fail(v_132) then (if not-caught-fail(v_133) then (v_133,h_129,f_130) else fail-bitstring) else fail-bitstring) else fail-bitstring) in
{17}new d_134: ec_scalar;
{18}let v_135: ec_point = catch-fail(ec_mul(d_134,ec_base)) in
{19}let v_136: eddsa_signature = catch-fail(eddsa_sign(h2,ec_point_as_bits(v_135))) in
{20}let (pkp2: eddsa_signature,d2: ec_scalar) = (if not-caught-fail(v_135) then (if not-caught-fail(v_136) then (v_136,d_134) else fail-bitstring) else fail-bitstring) in
{21}out(c, (cp1,cp2,pkp1,pkp2));
(
    {22}!
    {23}new x_i: ec_scalar;
    {24}out(ec_leak, x_i);
    {25}new a_i: dh_exponent;
    {26}in(c, (id_alice: identity,id_bob: identity));
    {27}if ((id_alice = id1) || (id_alice = id2)) then
    {28}let v_137: bool = (id_alice = id1) in
    (
        {29}if v_137 then
        (
            {30}let alice: bitstring = (cp1,h1,f1) in
            {31}let (cpa: eddsa_signature,ha: eddsa_private_key,fa: ec_scalar) = alice in
            {32}let (Ha: ec_point,Fa: ec_point) = eddsa_get_msg(cpa) in
            {33}in(c, (cpb: eddsa_signature,Y: ec_point,B: dh_group_element));
            {34}let (Hb: ec_point,Fb: ec_point) = eddsa_get_msg(cpb) in
            {35}let (=Hb,=Fb) = eddsa_verify(cpb,Hb) in
            {36}let X: ec_point = ec_mul(x_i,ec_base) in
            {37}let A: dh_group_element = dh(dh_generator,a_i) in
            {38}let ta: bitstring = (zero,cpb,cpa,Y,X,B,A,id_bob,id_alice) in
            {39}let k_138: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y),dh(B,a_i))) in
            {40}let ssid: bitstring = kdf(usageSSID,k_138) in
            {41}out(c, ssid);
            {42}let sigma_a: ring_signature = ring_sign(eddsa_scalar(ha),Fb,Y,ta) in
            {43}event accept_idake_alice(id_alice,id_bob,ssid,k_138);
            {44}out(c, sigma_a);
            {45}in(c, (sigma_b: ring_signature,Z: ec_point,Z_mac: bitstring));
            {46}let kmac: bitstring = kdf(usageMACKey,k_138) in
            {47}let (=one,=cpb,=cpa,=Y,=X,=B,=A,=id_bob,=id_alice) = ring_verify(sigma_b,Hb,Fa,X) in
            {48}let v_139: bool = false in
            (
                {49}if v_139 then
                (
                    {50}if (Z_mac = kdf(usageAuthMAC,(kmac,ec_point_as_bits(Z)))) then
                    {51}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                    {52}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                    {53}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                    {54}if ((id_bob = id1) || (id_bob = id2)) then
                    {55}out(c, idake_alice_correct);
                    {56}let k_ia: bitstring = k_138 in
                    0
                )
                else
                    {57}if (Z_mac = kdf(usageAuthenticator,(kmac,ec_point_as_bits(Z)))) then
                    {58}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                    {59}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                    {60}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                    {61}if ((id_bob = id1) || (id_bob = id2)) then
                    {62}out(c, idake_alice_correct);
                    {63}let k_ia_140: bitstring = k_138 in
                    0
            )
            else
                {64}if (Z_mac = fail-bitstring) then
                {65}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                {66}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                {67}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                {68}if ((id_bob = id1) || (id_bob = id2)) then
                {69}out(c, idake_alice_correct);
                {70}let k_ia_141: bitstring = k_138 in
                0
        )
        else
            {71}let alice_142: bitstring = (cp2,h2,f2) in
            {72}let (cpa_143: eddsa_signature,ha_144: eddsa_private_key,fa_145: ec_scalar) = alice_142 in
            {73}let (Ha_146: ec_point,Fa_147: ec_point) = eddsa_get_msg(cpa_143) in
            {74}in(c, (cpb_148: eddsa_signature,Y_149: ec_point,B_150: dh_group_element));
            {75}let (Hb_151: ec_point,Fb_152: ec_point) = eddsa_get_msg(cpb_148) in
            {76}let (=Hb_151,=Fb_152) = eddsa_verify(cpb_148,Hb_151) in
            {77}let X_153: ec_point = ec_mul(x_i,ec_base) in
            {78}let A_154: dh_group_element = dh(dh_generator,a_i) in
            {79}let ta_155: bitstring = (zero,cpb_148,cpa_143,Y_149,X_153,B_150,A_154,id_bob,id_alice) in
            {80}let k_156: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y_149),dh(B_150,a_i))) in
            {81}let ssid_157: bitstring = kdf(usageSSID,k_156) in
            {82}out(c, ssid_157);
            {83}let sigma_a_158: ring_signature = ring_sign(eddsa_scalar(ha_144),Fb_152,Y_149,ta_155) in
            {84}event accept_idake_alice(id_alice,id_bob,ssid_157,k_156);
            {85}out(c, sigma_a_158);
            {86}in(c, (sigma_b_159: ring_signature,Z_160: ec_point,Z_mac_161: bitstring));
            {87}let kmac_162: bitstring = kdf(usageMACKey,k_156) in
            {88}let (=one,=cpb_148,=cpa_143,=Y_149,=X_153,=B_150,=A_154,=id_bob,=id_alice) = ring_verify(sigma_b_159,Hb_151,Fa_147,X_153) in
            {89}let v_163: bool = false in
            (
                {90}if v_163 then
                (
                    {91}if (Z_mac_161 = kdf(usageAuthMAC,(kmac_162,ec_point_as_bits(Z_160)))) then
                    {92}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                    {93}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                    {94}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                    {95}if ((id_bob = id1) || (id_bob = id2)) then
                    {96}out(c, idake_alice_correct);
                    {97}let k_ia_164: bitstring = k_156 in
                    0
                )
                else
                    {98}if (Z_mac_161 = kdf(usageAuthenticator,(kmac_162,ec_point_as_bits(Z_160)))) then
                    {99}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                    {100}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                    {101}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                    {102}if ((id_bob = id1) || (id_bob = id2)) then
                    {103}out(c, idake_alice_correct);
                    {104}let k_ia_165: bitstring = k_156 in
                    0
            )
            else
                {105}if (Z_mac_161 = fail-bitstring) then
                {106}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                {107}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                {108}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                {109}if ((id_bob = id1) || (id_bob = id2)) then
                {110}out(c, idake_alice_correct);
                {111}let k_ia_166: bitstring = k_156 in
                0
    )
    else
        {112}let alice_167: bitstring = fail-bitstring in
        {113}let (cpa_168: eddsa_signature,ha_169: eddsa_private_key,fa_170: ec_scalar) = alice_167 in
        {114}let (Ha_171: ec_point,Fa_172: ec_point) = eddsa_get_msg(cpa_168) in
        {115}in(c, (cpb_173: eddsa_signature,Y_174: ec_point,B_175: dh_group_element));
        {116}let (Hb_176: ec_point,Fb_177: ec_point) = eddsa_get_msg(cpb_173) in
        {117}let (=Hb_176,=Fb_177) = eddsa_verify(cpb_173,Hb_176) in
        {118}let X_178: ec_point = ec_mul(x_i,ec_base) in
        {119}let A_179: dh_group_element = dh(dh_generator,a_i) in
        {120}let ta_180: bitstring = (zero,cpb_173,cpa_168,Y_174,X_178,B_175,A_179,id_bob,id_alice) in
        {121}let k_181: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y_174),dh(B_175,a_i))) in
        {122}let ssid_182: bitstring = kdf(usageSSID,k_181) in
        {123}out(c, ssid_182);
        {124}let sigma_a_183: ring_signature = ring_sign(eddsa_scalar(ha_169),Fb_177,Y_174,ta_180) in
        {125}event accept_idake_alice(id_alice,id_bob,ssid_182,k_181);
        {126}out(c, sigma_a_183);
        {127}in(c, (sigma_b_184: ring_signature,Z_185: ec_point,Z_mac_186: bitstring));
        {128}let kmac_187: bitstring = kdf(usageMACKey,k_181) in
        {129}let (=one,=cpb_173,=cpa_168,=Y_174,=X_178,=B_175,=A_179,=id_bob,=id_alice) = ring_verify(sigma_b_184,Hb_176,Fa_172,X_178) in
        {130}let v_188: bool = false in
        (
            {131}if v_188 then
            (
                {132}if (Z_mac_186 = kdf(usageAuthMAC,(kmac_187,ec_point_as_bits(Z_185)))) then
                {133}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
                {134}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
                {135}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
                {136}if ((id_bob = id1) || (id_bob = id2)) then
                {137}out(c, idake_alice_correct);
                {138}let k_ia_189: bitstring = k_181 in
                0
            )
            else
                {139}if (Z_mac_186 = kdf(usageAuthenticator,(kmac_187,ec_point_as_bits(Z_185)))) then
                {140}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
                {141}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
                {142}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
                {143}if ((id_bob = id1) || (id_bob = id2)) then
                {144}out(c, idake_alice_correct);
                {145}let k_ia_190: bitstring = k_181 in
                0
        )
        else
            {146}if (Z_mac_186 = fail-bitstring) then
            {147}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
            {148}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
            {149}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
            {150}if ((id_bob = id1) || (id_bob = id2)) then
            {151}out(c, idake_alice_correct);
            {152}let k_ia_191: bitstring = k_181 in
            0
) | (
    {153}!
    {154}new y_i: ec_scalar;
    {155}new z_i: ec_scalar;
    {156}out(ec_leak, y_i);
    {157}out(ec_leak, z_i);
    {158}new b_i: dh_exponent;
    {159}in(c, (id_alice_192: identity,id_bob_193: identity));
    {160}if ((id_bob_193 = id1) || (id_bob_193 = id2)) then
    {161}let v_194: bool = (id_bob_193 = id1) in
    (
        {162}if v_194 then
        (
            {163}let bob: bitstring = (cp1,h1,f1) in
            {164}let (cpb_195: eddsa_signature,hb: eddsa_private_key,fb: ec_scalar) = bob in
            {165}let (Hb_196: ec_point,Fb_197: ec_point) = eddsa_get_msg(cpb_195) in
            {166}let Y_198: ec_point = ec_mul(y_i,ec_base) in
            {167}let B_199: dh_group_element = dh(dh_generator,b_i) in
            {168}out(c, (Y_198,B_199));
            {169}in(c, sigma_a_200: ring_signature);
            {170}let (=zero,=cpb_195,cpa_201: eddsa_signature,=Y_198,X_202: ec_point,=B_199,A_203: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_200) in
            {171}let (Ha_204: ec_point,Fa_205: ec_point) = eddsa_get_msg(cpa_201) in
            {172}let (=Ha_204,=Fa_205) = eddsa_verify(cpa_201,Ha_204) in
            {173}let (=zero,=cpb_195,=cpa_201,=Y_198,=X_202,=B_199,=A_203,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_200,Ha_204,Fb_197,Y_198) in
            {174}let tb: bitstring = (one,cpb_195,cpa_201,Y_198,X_202,B_199,A_203,id_bob_193,id_alice_192) in
            {175}let k_206: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_202),dh(A_203,b_i))) in
            {176}let ssid_207: bitstring = kdf(usageSSID,k_206) in
            {177}out(c, ssid_207);
            {178}event term_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206);
            {179}let sigma_b_208: ring_signature = ring_sign(eddsa_scalar(hb),Fa_205,X_202,tb) in
            {180}let Z_209: ec_point = ec_mul(z_i,ec_base) in
            {181}let kmac_210: bitstring = kdf(usageMACKey,k_206) in
            {182}let v_211: bool = false in
            (
                {183}if v_211 then
                (
                    {184}let Z_mac_212: bitstring = kdf(usageAuthMAC,(kmac_210,ec_point_as_bits(Z_209))) in
                    {185}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                    {186}out(c, (sigma_b_208,Z_209,Z_mac_212));
                    {187}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                    {188}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                    {189}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {190}out(c, idake_bob_correct);
                    {191}let k_ib: bitstring = k_206 in
                    0
                )
                else
                    {192}let Z_mac_213: bitstring = kdf(usageAuthenticator,(kmac_210,ec_point_as_bits(Z_209))) in
                    {193}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                    {194}out(c, (sigma_b_208,Z_209,Z_mac_213));
                    {195}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                    {196}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                    {197}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {198}out(c, idake_bob_correct);
                    {199}let k_ib_214: bitstring = k_206 in
                    0
            )
            else
                {200}let Z_mac_215: bitstring = fail-bitstring in
                {201}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                {202}out(c, (sigma_b_208,Z_209,Z_mac_215));
                {203}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                {204}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                {205}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {206}out(c, idake_bob_correct);
                {207}let k_ib_216: bitstring = k_206 in
                0
        )
        else
            {208}let bob_217: bitstring = (cp2,h2,f2) in
            {209}let (cpb_218: eddsa_signature,hb_219: eddsa_private_key,fb_220: ec_scalar) = bob_217 in
            {210}let (Hb_221: ec_point,Fb_222: ec_point) = eddsa_get_msg(cpb_218) in
            {211}let Y_223: ec_point = ec_mul(y_i,ec_base) in
            {212}let B_224: dh_group_element = dh(dh_generator,b_i) in
            {213}out(c, (Y_223,B_224));
            {214}in(c, sigma_a_225: ring_signature);
            {215}let (=zero,=cpb_218,cpa_226: eddsa_signature,=Y_223,X_227: ec_point,=B_224,A_228: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_225) in
            {216}let (Ha_229: ec_point,Fa_230: ec_point) = eddsa_get_msg(cpa_226) in
            {217}let (=Ha_229,=Fa_230) = eddsa_verify(cpa_226,Ha_229) in
            {218}let (=zero,=cpb_218,=cpa_226,=Y_223,=X_227,=B_224,=A_228,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_225,Ha_229,Fb_222,Y_223) in
            {219}let tb_231: bitstring = (one,cpb_218,cpa_226,Y_223,X_227,B_224,A_228,id_bob_193,id_alice_192) in
            {220}let k_232: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_227),dh(A_228,b_i))) in
            {221}let ssid_233: bitstring = kdf(usageSSID,k_232) in
            {222}out(c, ssid_233);
            {223}event term_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232);
            {224}let sigma_b_234: ring_signature = ring_sign(eddsa_scalar(hb_219),Fa_230,X_227,tb_231) in
            {225}let Z_235: ec_point = ec_mul(z_i,ec_base) in
            {226}let kmac_236: bitstring = kdf(usageMACKey,k_232) in
            {227}let v_237: bool = false in
            (
                {228}if v_237 then
                (
                    {229}let Z_mac_238: bitstring = kdf(usageAuthMAC,(kmac_236,ec_point_as_bits(Z_235))) in
                    {230}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                    {231}out(c, (sigma_b_234,Z_235,Z_mac_238));
                    {232}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                    {233}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                    {234}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {235}out(c, idake_bob_correct);
                    {236}let k_ib_239: bitstring = k_232 in
                    0
                )
                else
                    {237}let Z_mac_240: bitstring = kdf(usageAuthenticator,(kmac_236,ec_point_as_bits(Z_235))) in
                    {238}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                    {239}out(c, (sigma_b_234,Z_235,Z_mac_240));
                    {240}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                    {241}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                    {242}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {243}out(c, idake_bob_correct);
                    {244}let k_ib_241: bitstring = k_232 in
                    0
            )
            else
                {245}let Z_mac_242: bitstring = fail-bitstring in
                {246}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                {247}out(c, (sigma_b_234,Z_235,Z_mac_242));
                {248}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                {249}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                {250}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {251}out(c, idake_bob_correct);
                {252}let k_ib_243: bitstring = k_232 in
                0
    )
    else
        {253}let bob_244: bitstring = fail-bitstring in
        {254}let (cpb_245: eddsa_signature,hb_246: eddsa_private_key,fb_247: ec_scalar) = bob_244 in
        {255}let (Hb_248: ec_point,Fb_249: ec_point) = eddsa_get_msg(cpb_245) in
        {256}let Y_250: ec_point = ec_mul(y_i,ec_base) in
        {257}let B_251: dh_group_element = dh(dh_generator,b_i) in
        {258}out(c, (Y_250,B_251));
        {259}in(c, sigma_a_252: ring_signature);
        {260}let (=zero,=cpb_245,cpa_253: eddsa_signature,=Y_250,X_254: ec_point,=B_251,A_255: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_252) in
        {261}let (Ha_256: ec_point,Fa_257: ec_point) = eddsa_get_msg(cpa_253) in
        {262}let (=Ha_256,=Fa_257) = eddsa_verify(cpa_253,Ha_256) in
        {263}let (=zero,=cpb_245,=cpa_253,=Y_250,=X_254,=B_251,=A_255,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_252,Ha_256,Fb_249,Y_250) in
        {264}let tb_258: bitstring = (one,cpb_245,cpa_253,Y_250,X_254,B_251,A_255,id_bob_193,id_alice_192) in
        {265}let k_259: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_254),dh(A_255,b_i))) in
        {266}let ssid_260: bitstring = kdf(usageSSID,k_259) in
        {267}out(c, ssid_260);
        {268}event term_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259);
        {269}let sigma_b_261: ring_signature = ring_sign(eddsa_scalar(hb_246),Fa_257,X_254,tb_258) in
        {270}let Z_262: ec_point = ec_mul(z_i,ec_base) in
        {271}let kmac_263: bitstring = kdf(usageMACKey,k_259) in
        {272}let v_264: bool = false in
        (
            {273}if v_264 then
            (
                {274}let Z_mac_265: bitstring = kdf(usageAuthMAC,(kmac_263,ec_point_as_bits(Z_262))) in
                {275}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
                {276}out(c, (sigma_b_261,Z_262,Z_mac_265));
                {277}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
                {278}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
                {279}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {280}out(c, idake_bob_correct);
                {281}let k_ib_266: bitstring = k_259 in
                0
            )
            else
                {282}let Z_mac_267: bitstring = kdf(usageAuthenticator,(kmac_263,ec_point_as_bits(Z_262))) in
                {283}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
                {284}out(c, (sigma_b_261,Z_262,Z_mac_267));
                {285}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
                {286}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
                {287}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {288}out(c, idake_bob_correct);
                {289}let k_ib_268: bitstring = k_259 in
                0
        )
        else
            {290}let Z_mac_269: bitstring = fail-bitstring in
            {291}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
            {292}out(c, (sigma_b_261,Z_262,Z_mac_269));
            {293}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
            {294}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
            {295}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
            {296}out(c, idake_bob_correct);
            {297}let k_ib_270: bitstring = k_259 in
            0
) | (
    {298}!
    {299}new x_ni: ec_scalar;
    {300}new z_ni: ec_scalar;
    {301}out(ec_leak, x_ni);
    {302}out(ec_leak, z_ni);
    {303}new a_ni: dh_exponent;
    {304}in(c, (id_alice_271: identity,id_bob_272: identity));
    {305}if ((id_alice_271 = id1) || (id_alice_271 = id2)) then
    {306}let v_273: bool = (id_alice_271 = id1) in
    (
        {307}if v_273 then
        (
            {308}let alice_274: bitstring = (cp1,h1,f1) in
            {309}let (cpa_275: eddsa_signature,ha_276: eddsa_private_key,fa_277: ec_scalar) = alice_274 in
            {310}in(c, (cpb_278: eddsa_signature,pkp: eddsa_signature,Y_279: ec_point,B_280: dh_group_element));
            {311}let (Hb_281: ec_point,Fb_282: ec_point) = eddsa_get_msg(cpb_278) in
            {312}let (=Hb_281,=Fb_282) = eddsa_verify(cpb_278,Hb_281) in
            {313}let ec_point_as_bits(D: ec_point) = eddsa_verify(pkp,Hb_281) in
            {314}let X_283: ec_point = ec_mul(x_ni,ec_base) in
            {315}let A_284: dh_group_element = dh(dh_generator,a_ni) in
            {316}let tmpk: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_279),ec_mul(x_ni,D),ec_mul(x_ni,Hb_281),dh(B_280,a_ni))) in
            {317}let t: bitstring = (cpb_278,cpa_275,Y_279,X_283,B_280,A_284,D,id_bob_272,id_alice_271) in
            {318}let k_285: bitstring = kdf(usageSharedSecret,tmpk) in
            {319}let ssid_286: bitstring = kdf(usageSSID,k_285) in
            {320}out(c, ssid_286);
            {321}let sigma: ring_signature = ring_sign(eddsa_scalar(ha_276),Fb_282,Y_279,t) in
            {322}let xzdh_mac_key: bitstring = kdf(usageAuthMACKey,tmpk) in
            {323}let v_287: bool = true in
            (
                {324}if v_287 then
                (
                    {325}let xzdh_mac: bitstring = kdf(usageAuthMAC,(xzdh_mac_key,t)) in
                    {326}let msg_mac_key: bitstring = kdf(usageMACKey,k_285) in
                    {327}let Z_288: ec_point = ec_mul(z_ni,ec_base) in
                    {328}let v_289: bool = false in
                    (
                        {329}if v_289 then
                        (
                            {330}let Z_mac_290: bitstring = kdf(usageAuthMAC,(msg_mac_key,ec_point_as_bits(Z_288))) in
                            {331}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                            {332}out(c, (sigma,xzdh_mac,Z_288,Z_mac_290));
                            {333}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {334}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {335}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {336}out(c, nidake_alice_correct);
                            {337}let k_nia: bitstring = k_285 in
                            0
                        )
                        else
                            {338}let Z_mac_291: bitstring = kdf(usageAuthenticator,(msg_mac_key,ec_point_as_bits(Z_288))) in
                            {339}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                            {340}out(c, (sigma,xzdh_mac,Z_288,Z_mac_291));
                            {341}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {342}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {343}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {344}out(c, nidake_alice_correct);
                            {345}let k_nia_292: bitstring = k_285 in
                            0
                    )
                    else
                        {346}let Z_mac_293: bitstring = fail-bitstring in
                        {347}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                        {348}out(c, (sigma,xzdh_mac,Z_288,Z_mac_293));
                        {349}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {350}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {351}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {352}out(c, nidake_alice_correct);
                        {353}let k_nia_294: bitstring = k_285 in
                        0
                )
                else
                    {354}let xzdh_mac_295: bitstring = kdf(usageAuthenticator,(xzdh_mac_key,t)) in
                    {355}let msg_mac_key_296: bitstring = kdf(usageMACKey,k_285) in
                    {356}let Z_297: ec_point = ec_mul(z_ni,ec_base) in
                    {357}let v_298: bool = false in
                    (
                        {358}if v_298 then
                        (
                            {359}let Z_mac_299: bitstring = kdf(usageAuthMAC,(msg_mac_key_296,ec_point_as_bits(Z_297))) in
                            {360}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                            {361}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_299));
                            {362}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {363}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {364}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {365}out(c, nidake_alice_correct);
                            {366}let k_nia_300: bitstring = k_285 in
                            0
                        )
                        else
                            {367}let Z_mac_301: bitstring = kdf(usageAuthenticator,(msg_mac_key_296,ec_point_as_bits(Z_297))) in
                            {368}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                            {369}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_301));
                            {370}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {371}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {372}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {373}out(c, nidake_alice_correct);
                            {374}let k_nia_302: bitstring = k_285 in
                            0
                    )
                    else
                        {375}let Z_mac_303: bitstring = fail-bitstring in
                        {376}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                        {377}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_303));
                        {378}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {379}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {380}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {381}out(c, nidake_alice_correct);
                        {382}let k_nia_304: bitstring = k_285 in
                        0
            )
            else
                {383}let xzdh_mac_305: bitstring = fail-bitstring in
                {384}let msg_mac_key_306: bitstring = kdf(usageMACKey,k_285) in
                {385}let Z_307: ec_point = ec_mul(z_ni,ec_base) in
                {386}let v_308: bool = false in
                (
                    {387}if v_308 then
                    (
                        {388}let Z_mac_309: bitstring = kdf(usageAuthMAC,(msg_mac_key_306,ec_point_as_bits(Z_307))) in
                        {389}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                        {390}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_309));
                        {391}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {392}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {393}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {394}out(c, nidake_alice_correct);
                        {395}let k_nia_310: bitstring = k_285 in
                        0
                    )
                    else
                        {396}let Z_mac_311: bitstring = kdf(usageAuthenticator,(msg_mac_key_306,ec_point_as_bits(Z_307))) in
                        {397}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                        {398}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_311));
                        {399}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {400}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {401}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {402}out(c, nidake_alice_correct);
                        {403}let k_nia_312: bitstring = k_285 in
                        0
                )
                else
                    {404}let Z_mac_313: bitstring = fail-bitstring in
                    {405}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                    {406}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_313));
                    {407}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                    {408}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                    {409}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {410}out(c, nidake_alice_correct);
                    {411}let k_nia_314: bitstring = k_285 in
                    0
        )
        else
            {412}let alice_315: bitstring = (cp2,h2,f2) in
            {413}let (cpa_316: eddsa_signature,ha_317: eddsa_private_key,fa_318: ec_scalar) = alice_315 in
            {414}in(c, (cpb_319: eddsa_signature,pkp_320: eddsa_signature,Y_321: ec_point,B_322: dh_group_element));
            {415}let (Hb_323: ec_point,Fb_324: ec_point) = eddsa_get_msg(cpb_319) in
            {416}let (=Hb_323,=Fb_324) = eddsa_verify(cpb_319,Hb_323) in
            {417}let ec_point_as_bits(D_325: ec_point) = eddsa_verify(pkp_320,Hb_323) in
            {418}let X_326: ec_point = ec_mul(x_ni,ec_base) in
            {419}let A_327: dh_group_element = dh(dh_generator,a_ni) in
            {420}let tmpk_328: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_321),ec_mul(x_ni,D_325),ec_mul(x_ni,Hb_323),dh(B_322,a_ni))) in
            {421}let t_329: bitstring = (cpb_319,cpa_316,Y_321,X_326,B_322,A_327,D_325,id_bob_272,id_alice_271) in
            {422}let k_330: bitstring = kdf(usageSharedSecret,tmpk_328) in
            {423}let ssid_331: bitstring = kdf(usageSSID,k_330) in
            {424}out(c, ssid_331);
            {425}let sigma_332: ring_signature = ring_sign(eddsa_scalar(ha_317),Fb_324,Y_321,t_329) in
            {426}let xzdh_mac_key_333: bitstring = kdf(usageAuthMACKey,tmpk_328) in
            {427}let v_334: bool = true in
            (
                {428}if v_334 then
                (
                    {429}let xzdh_mac_335: bitstring = kdf(usageAuthMAC,(xzdh_mac_key_333,t_329)) in
                    {430}let msg_mac_key_336: bitstring = kdf(usageMACKey,k_330) in
                    {431}let Z_337: ec_point = ec_mul(z_ni,ec_base) in
                    {432}let v_338: bool = false in
                    (
                        {433}if v_338 then
                        (
                            {434}let Z_mac_339: bitstring = kdf(usageAuthMAC,(msg_mac_key_336,ec_point_as_bits(Z_337))) in
                            {435}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                            {436}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_339));
                            {437}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {438}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {439}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {440}out(c, nidake_alice_correct);
                            {441}let k_nia_340: bitstring = k_330 in
                            0
                        )
                        else
                            {442}let Z_mac_341: bitstring = kdf(usageAuthenticator,(msg_mac_key_336,ec_point_as_bits(Z_337))) in
                            {443}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                            {444}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_341));
                            {445}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {446}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {447}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {448}out(c, nidake_alice_correct);
                            {449}let k_nia_342: bitstring = k_330 in
                            0
                    )
                    else
                        {450}let Z_mac_343: bitstring = fail-bitstring in
                        {451}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                        {452}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_343));
                        {453}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {454}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {455}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {456}out(c, nidake_alice_correct);
                        {457}let k_nia_344: bitstring = k_330 in
                        0
                )
                else
                    {458}let xzdh_mac_345: bitstring = kdf(usageAuthenticator,(xzdh_mac_key_333,t_329)) in
                    {459}let msg_mac_key_346: bitstring = kdf(usageMACKey,k_330) in
                    {460}let Z_347: ec_point = ec_mul(z_ni,ec_base) in
                    {461}let v_348: bool = false in
                    (
                        {462}if v_348 then
                        (
                            {463}let Z_mac_349: bitstring = kdf(usageAuthMAC,(msg_mac_key_346,ec_point_as_bits(Z_347))) in
                            {464}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                            {465}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_349));
                            {466}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {467}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {468}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {469}out(c, nidake_alice_correct);
                            {470}let k_nia_350: bitstring = k_330 in
                            0
                        )
                        else
                            {471}let Z_mac_351: bitstring = kdf(usageAuthenticator,(msg_mac_key_346,ec_point_as_bits(Z_347))) in
                            {472}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                            {473}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_351));
                            {474}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {475}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {476}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {477}out(c, nidake_alice_correct);
                            {478}let k_nia_352: bitstring = k_330 in
                            0
                    )
                    else
                        {479}let Z_mac_353: bitstring = fail-bitstring in
                        {480}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                        {481}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_353));
                        {482}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {483}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {484}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {485}out(c, nidake_alice_correct);
                        {486}let k_nia_354: bitstring = k_330 in
                        0
            )
            else
                {487}let xzdh_mac_355: bitstring = fail-bitstring in
                {488}let msg_mac_key_356: bitstring = kdf(usageMACKey,k_330) in
                {489}let Z_357: ec_point = ec_mul(z_ni,ec_base) in
                {490}let v_358: bool = false in
                (
                    {491}if v_358 then
                    (
                        {492}let Z_mac_359: bitstring = kdf(usageAuthMAC,(msg_mac_key_356,ec_point_as_bits(Z_357))) in
                        {493}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                        {494}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_359));
                        {495}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {496}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {497}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {498}out(c, nidake_alice_correct);
                        {499}let k_nia_360: bitstring = k_330 in
                        0
                    )
                    else
                        {500}let Z_mac_361: bitstring = kdf(usageAuthenticator,(msg_mac_key_356,ec_point_as_bits(Z_357))) in
                        {501}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                        {502}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_361));
                        {503}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {504}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {505}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {506}out(c, nidake_alice_correct);
                        {507}let k_nia_362: bitstring = k_330 in
                        0
                )
                else
                    {508}let Z_mac_363: bitstring = fail-bitstring in
                    {509}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                    {510}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_363));
                    {511}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                    {512}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                    {513}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {514}out(c, nidake_alice_correct);
                    {515}let k_nia_364: bitstring = k_330 in
                    0
    )
    else
        {516}let alice_365: bitstring = fail-bitstring in
        {517}let (cpa_366: eddsa_signature,ha_367: eddsa_private_key,fa_368: ec_scalar) = alice_365 in
        {518}in(c, (cpb_369: eddsa_signature,pkp_370: eddsa_signature,Y_371: ec_point,B_372: dh_group_element));
        {519}let (Hb_373: ec_point,Fb_374: ec_point) = eddsa_get_msg(cpb_369) in
        {520}let (=Hb_373,=Fb_374) = eddsa_verify(cpb_369,Hb_373) in
        {521}let ec_point_as_bits(D_375: ec_point) = eddsa_verify(pkp_370,Hb_373) in
        {522}let X_376: ec_point = ec_mul(x_ni,ec_base) in
        {523}let A_377: dh_group_element = dh(dh_generator,a_ni) in
        {524}let tmpk_378: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_371),ec_mul(x_ni,D_375),ec_mul(x_ni,Hb_373),dh(B_372,a_ni))) in
        {525}let t_379: bitstring = (cpb_369,cpa_366,Y_371,X_376,B_372,A_377,D_375,id_bob_272,id_alice_271) in
        {526}let k_380: bitstring = kdf(usageSharedSecret,tmpk_378) in
        {527}let ssid_381: bitstring = kdf(usageSSID,k_380) in
        {528}out(c, ssid_381);
        {529}let sigma_382: ring_signature = ring_sign(eddsa_scalar(ha_367),Fb_374,Y_371,t_379) in
        {530}let xzdh_mac_key_383: bitstring = kdf(usageAuthMACKey,tmpk_378) in
        {531}let v_384: bool = true in
        (
            {532}if v_384 then
            (
                {533}let xzdh_mac_385: bitstring = kdf(usageAuthMAC,(xzdh_mac_key_383,t_379)) in
                {534}let msg_mac_key_386: bitstring = kdf(usageMACKey,k_380) in
                {535}let Z_387: ec_point = ec_mul(z_ni,ec_base) in
                {536}let v_388: bool = false in
                (
                    {537}if v_388 then
                    (
                        {538}let Z_mac_389: bitstring = kdf(usageAuthMAC,(msg_mac_key_386,ec_point_as_bits(Z_387))) in
                        {539}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                        {540}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_389));
                        {541}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {542}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {543}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {544}out(c, nidake_alice_correct);
                        {545}let k_nia_390: bitstring = k_380 in
                        0
                    )
                    else
                        {546}let Z_mac_391: bitstring = kdf(usageAuthenticator,(msg_mac_key_386,ec_point_as_bits(Z_387))) in
                        {547}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                        {548}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_391));
                        {549}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {550}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {551}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {552}out(c, nidake_alice_correct);
                        {553}let k_nia_392: bitstring = k_380 in
                        0
                )
                else
                    {554}let Z_mac_393: bitstring = fail-bitstring in
                    {555}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                    {556}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_393));
                    {557}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {558}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {559}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {560}out(c, nidake_alice_correct);
                    {561}let k_nia_394: bitstring = k_380 in
                    0
            )
            else
                {562}let xzdh_mac_395: bitstring = kdf(usageAuthenticator,(xzdh_mac_key_383,t_379)) in
                {563}let msg_mac_key_396: bitstring = kdf(usageMACKey,k_380) in
                {564}let Z_397: ec_point = ec_mul(z_ni,ec_base) in
                {565}let v_398: bool = false in
                (
                    {566}if v_398 then
                    (
                        {567}let Z_mac_399: bitstring = kdf(usageAuthMAC,(msg_mac_key_396,ec_point_as_bits(Z_397))) in
                        {568}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                        {569}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_399));
                        {570}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {571}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {572}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {573}out(c, nidake_alice_correct);
                        {574}let k_nia_400: bitstring = k_380 in
                        0
                    )
                    else
                        {575}let Z_mac_401: bitstring = kdf(usageAuthenticator,(msg_mac_key_396,ec_point_as_bits(Z_397))) in
                        {576}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                        {577}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_401));
                        {578}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {579}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {580}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {581}out(c, nidake_alice_correct);
                        {582}let k_nia_402: bitstring = k_380 in
                        0
                )
                else
                    {583}let Z_mac_403: bitstring = fail-bitstring in
                    {584}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                    {585}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_403));
                    {586}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {587}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {588}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {589}out(c, nidake_alice_correct);
                    {590}let k_nia_404: bitstring = k_380 in
                    0
        )
        else
            {591}let xzdh_mac_405: bitstring = fail-bitstring in
            {592}let msg_mac_key_406: bitstring = kdf(usageMACKey,k_380) in
            {593}let Z_407: ec_point = ec_mul(z_ni,ec_base) in
            {594}let v_408: bool = false in
            (
                {595}if v_408 then
                (
                    {596}let Z_mac_409: bitstring = kdf(usageAuthMAC,(msg_mac_key_406,ec_point_as_bits(Z_407))) in
                    {597}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                    {598}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_409));
                    {599}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {600}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {601}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {602}out(c, nidake_alice_correct);
                    {603}let k_nia_410: bitstring = k_380 in
                    0
                )
                else
                    {604}let Z_mac_411: bitstring = kdf(usageAuthenticator,(msg_mac_key_406,ec_point_as_bits(Z_407))) in
                    {605}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                    {606}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_411));
                    {607}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {608}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {609}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {610}out(c, nidake_alice_correct);
                    {611}let k_nia_412: bitstring = k_380 in
                    0
            )
            else
                {612}let Z_mac_413: bitstring = fail-bitstring in
                {613}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                {614}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_413));
                {615}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                {616}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                {617}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                {618}out(c, nidake_alice_correct);
                {619}let k_nia_414: bitstring = k_380 in
                0
) | (
    {620}!
    {621}new y_ni: ec_scalar;
    {622}out(ec_leak, y_ni);
    {623}new b_ni: dh_exponent;
    {624}in(c, (id_alice_415: identity,id_bob_416: identity));
    {625}if ((id_bob_416 = id1) || (id_bob_416 = id2)) then
    {626}let v_417: bool = (id_bob_416 = id1) in
    (
        {627}if v_417 then
        (
            {628}let bob_418: bitstring = (cp1,h1,f1,d1) in
            {629}let (cpb_419: eddsa_signature,hb_420: eddsa_private_key,fb_421: ec_scalar,d_422: ec_scalar) = bob_418 in
            {630}let (Hb_423: ec_point,Fb_424: ec_point) = eddsa_get_msg(cpb_419) in
            {631}let Y_425: ec_point = ec_mul(y_ni,ec_base) in
            {632}let B_426: dh_group_element = dh(dh_generator,b_ni) in
            {633}out(c, (Y_425,B_426));
            {634}in(c, (sigma_427: ring_signature,xzdh_mac_428: bitstring,Z_429: ec_point,Z_mac_430: bitstring));
            {635}let t_431: bitstring = ring_get_msg(sigma_427) in
            {636}let (=cpb_419,cpa_432: eddsa_signature,=Y_425,X_433: ec_point,=B_426,A_434: dh_group_element,=ec_mul(d_422,ec_base),=id_bob_416,=id_alice_415) = t_431 in
            {637}let (Ha_435: ec_point,Fa_436: ec_point) = eddsa_get_msg(cpa_432) in
            {638}let (=Ha_435,=Fa_436) = eddsa_verify(cpa_432,Ha_435) in
            {639}let (=cpb_419,=cpa_432,=Y_425,=X_433,=B_426,=A_434,=ec_mul(d_422,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_427,Ha_435,Fb_424,Y_425) in
            {640}let tmpk_437: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_433),ec_mul(d_422,X_433),ec_mul(eddsa_scalar(hb_420),X_433),dh(A_434,b_ni))) in
            {641}let xzdh_mac_key_438: bitstring = kdf(usageAuthMACKey,tmpk_437) in
            {642}let v_439: bool = true in
            (
                {643}if v_439 then
                (
                    {644}if (xzdh_mac_428 = kdf(usageAuthMAC,(xzdh_mac_key_438,t_431))) then
                    {645}let k_440: bitstring = kdf(usageSharedSecret,tmpk_437) in
                    {646}let ssid_441: bitstring = kdf(usageSSID,k_440) in
                    {647}out(c, ssid_441);
                    {648}let msg_mac_key_442: bitstring = kdf(usageMACKey,k_440) in
                    {649}let v_443: bool = false in
                    (
                        {650}if v_443 then
                        (
                            {651}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_442,ec_point_as_bits(Z_429)))) then
                            {652}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                            {653}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {654}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {655}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {656}out(c, nidake_bob_correct);
                            {657}let k_nib: bitstring = k_440 in
                            0
                        )
                        else
                            {658}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_442,ec_point_as_bits(Z_429)))) then
                            {659}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                            {660}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {661}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {662}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {663}out(c, nidake_bob_correct);
                            {664}let k_nib_444: bitstring = k_440 in
                            0
                    )
                    else
                        {665}if (Z_mac_430 = fail-bitstring) then
                        {666}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                        {667}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {668}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {669}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {670}out(c, nidake_bob_correct);
                        {671}let k_nib_445: bitstring = k_440 in
                        0
                )
                else
                    {672}if (xzdh_mac_428 = kdf(usageAuthenticator,(xzdh_mac_key_438,t_431))) then
                    {673}let k_446: bitstring = kdf(usageSharedSecret,tmpk_437) in
                    {674}let ssid_447: bitstring = kdf(usageSSID,k_446) in
                    {675}out(c, ssid_447);
                    {676}let msg_mac_key_448: bitstring = kdf(usageMACKey,k_446) in
                    {677}let v_449: bool = false in
                    (
                        {678}if v_449 then
                        (
                            {679}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_448,ec_point_as_bits(Z_429)))) then
                            {680}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                            {681}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {682}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {683}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {684}out(c, nidake_bob_correct);
                            {685}let k_nib_450: bitstring = k_446 in
                            0
                        )
                        else
                            {686}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_448,ec_point_as_bits(Z_429)))) then
                            {687}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                            {688}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {689}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {690}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {691}out(c, nidake_bob_correct);
                            {692}let k_nib_451: bitstring = k_446 in
                            0
                    )
                    else
                        {693}if (Z_mac_430 = fail-bitstring) then
                        {694}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                        {695}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {696}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {697}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {698}out(c, nidake_bob_correct);
                        {699}let k_nib_452: bitstring = k_446 in
                        0
            )
            else
                {700}if (xzdh_mac_428 = fail-bitstring) then
                {701}let k_453: bitstring = kdf(usageSharedSecret,tmpk_437) in
                {702}let ssid_454: bitstring = kdf(usageSSID,k_453) in
                {703}out(c, ssid_454);
                {704}let msg_mac_key_455: bitstring = kdf(usageMACKey,k_453) in
                {705}let v_456: bool = false in
                (
                    {706}if v_456 then
                    (
                        {707}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_455,ec_point_as_bits(Z_429)))) then
                        {708}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                        {709}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {710}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {711}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {712}out(c, nidake_bob_correct);
                        {713}let k_nib_457: bitstring = k_453 in
                        0
                    )
                    else
                        {714}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_455,ec_point_as_bits(Z_429)))) then
                        {715}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                        {716}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {717}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {718}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {719}out(c, nidake_bob_correct);
                        {720}let k_nib_458: bitstring = k_453 in
                        0
                )
                else
                    {721}if (Z_mac_430 = fail-bitstring) then
                    {722}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                    {723}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                    {724}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                    {725}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {726}out(c, nidake_bob_correct);
                    {727}let k_nib_459: bitstring = k_453 in
                    0
        )
        else
            {728}let bob_460: bitstring = (cp2,h2,f2,d2) in
            {729}let (cpb_461: eddsa_signature,hb_462: eddsa_private_key,fb_463: ec_scalar,d_464: ec_scalar) = bob_460 in
            {730}let (Hb_465: ec_point,Fb_466: ec_point) = eddsa_get_msg(cpb_461) in
            {731}let Y_467: ec_point = ec_mul(y_ni,ec_base) in
            {732}let B_468: dh_group_element = dh(dh_generator,b_ni) in
            {733}out(c, (Y_467,B_468));
            {734}in(c, (sigma_469: ring_signature,xzdh_mac_470: bitstring,Z_471: ec_point,Z_mac_472: bitstring));
            {735}let t_473: bitstring = ring_get_msg(sigma_469) in
            {736}let (=cpb_461,cpa_474: eddsa_signature,=Y_467,X_475: ec_point,=B_468,A_476: dh_group_element,=ec_mul(d_464,ec_base),=id_bob_416,=id_alice_415) = t_473 in
            {737}let (Ha_477: ec_point,Fa_478: ec_point) = eddsa_get_msg(cpa_474) in
            {738}let (=Ha_477,=Fa_478) = eddsa_verify(cpa_474,Ha_477) in
            {739}let (=cpb_461,=cpa_474,=Y_467,=X_475,=B_468,=A_476,=ec_mul(d_464,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_469,Ha_477,Fb_466,Y_467) in
            {740}let tmpk_479: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_475),ec_mul(d_464,X_475),ec_mul(eddsa_scalar(hb_462),X_475),dh(A_476,b_ni))) in
            {741}let xzdh_mac_key_480: bitstring = kdf(usageAuthMACKey,tmpk_479) in
            {742}let v_481: bool = true in
            (
                {743}if v_481 then
                (
                    {744}if (xzdh_mac_470 = kdf(usageAuthMAC,(xzdh_mac_key_480,t_473))) then
                    {745}let k_482: bitstring = kdf(usageSharedSecret,tmpk_479) in
                    {746}let ssid_483: bitstring = kdf(usageSSID,k_482) in
                    {747}out(c, ssid_483);
                    {748}let msg_mac_key_484: bitstring = kdf(usageMACKey,k_482) in
                    {749}let v_485: bool = false in
                    (
                        {750}if v_485 then
                        (
                            {751}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_484,ec_point_as_bits(Z_471)))) then
                            {752}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                            {753}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {754}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {755}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {756}out(c, nidake_bob_correct);
                            {757}let k_nib_486: bitstring = k_482 in
                            0
                        )
                        else
                            {758}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_484,ec_point_as_bits(Z_471)))) then
                            {759}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                            {760}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {761}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {762}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {763}out(c, nidake_bob_correct);
                            {764}let k_nib_487: bitstring = k_482 in
                            0
                    )
                    else
                        {765}if (Z_mac_472 = fail-bitstring) then
                        {766}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                        {767}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {768}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {769}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {770}out(c, nidake_bob_correct);
                        {771}let k_nib_488: bitstring = k_482 in
                        0
                )
                else
                    {772}if (xzdh_mac_470 = kdf(usageAuthenticator,(xzdh_mac_key_480,t_473))) then
                    {773}let k_489: bitstring = kdf(usageSharedSecret,tmpk_479) in
                    {774}let ssid_490: bitstring = kdf(usageSSID,k_489) in
                    {775}out(c, ssid_490);
                    {776}let msg_mac_key_491: bitstring = kdf(usageMACKey,k_489) in
                    {777}let v_492: bool = false in
                    (
                        {778}if v_492 then
                        (
                            {779}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_491,ec_point_as_bits(Z_471)))) then
                            {780}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                            {781}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {782}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {783}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {784}out(c, nidake_bob_correct);
                            {785}let k_nib_493: bitstring = k_489 in
                            0
                        )
                        else
                            {786}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_491,ec_point_as_bits(Z_471)))) then
                            {787}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                            {788}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {789}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {790}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {791}out(c, nidake_bob_correct);
                            {792}let k_nib_494: bitstring = k_489 in
                            0
                    )
                    else
                        {793}if (Z_mac_472 = fail-bitstring) then
                        {794}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                        {795}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {796}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {797}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {798}out(c, nidake_bob_correct);
                        {799}let k_nib_495: bitstring = k_489 in
                        0
            )
            else
                {800}if (xzdh_mac_470 = fail-bitstring) then
                {801}let k_496: bitstring = kdf(usageSharedSecret,tmpk_479) in
                {802}let ssid_497: bitstring = kdf(usageSSID,k_496) in
                {803}out(c, ssid_497);
                {804}let msg_mac_key_498: bitstring = kdf(usageMACKey,k_496) in
                {805}let v_499: bool = false in
                (
                    {806}if v_499 then
                    (
                        {807}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_498,ec_point_as_bits(Z_471)))) then
                        {808}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                        {809}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {810}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {811}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {812}out(c, nidake_bob_correct);
                        {813}let k_nib_500: bitstring = k_496 in
                        0
                    )
                    else
                        {814}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_498,ec_point_as_bits(Z_471)))) then
                        {815}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                        {816}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {817}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {818}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {819}out(c, nidake_bob_correct);
                        {820}let k_nib_501: bitstring = k_496 in
                        0
                )
                else
                    {821}if (Z_mac_472 = fail-bitstring) then
                    {822}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                    {823}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                    {824}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                    {825}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {826}out(c, nidake_bob_correct);
                    {827}let k_nib_502: bitstring = k_496 in
                    0
    )
    else
        {828}let bob_503: bitstring = fail-bitstring in
        {829}let (cpb_504: eddsa_signature,hb_505: eddsa_private_key,fb_506: ec_scalar,d_507: ec_scalar) = bob_503 in
        {830}let (Hb_508: ec_point,Fb_509: ec_point) = eddsa_get_msg(cpb_504) in
        {831}let Y_510: ec_point = ec_mul(y_ni,ec_base) in
        {832}let B_511: dh_group_element = dh(dh_generator,b_ni) in
        {833}out(c, (Y_510,B_511));
        {834}in(c, (sigma_512: ring_signature,xzdh_mac_513: bitstring,Z_514: ec_point,Z_mac_515: bitstring));
        {835}let t_516: bitstring = ring_get_msg(sigma_512) in
        {836}let (=cpb_504,cpa_517: eddsa_signature,=Y_510,X_518: ec_point,=B_511,A_519: dh_group_element,=ec_mul(d_507,ec_base),=id_bob_416,=id_alice_415) = t_516 in
        {837}let (Ha_520: ec_point,Fa_521: ec_point) = eddsa_get_msg(cpa_517) in
        {838}let (=Ha_520,=Fa_521) = eddsa_verify(cpa_517,Ha_520) in
        {839}let (=cpb_504,=cpa_517,=Y_510,=X_518,=B_511,=A_519,=ec_mul(d_507,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_512,Ha_520,Fb_509,Y_510) in
        {840}let tmpk_522: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_518),ec_mul(d_507,X_518),ec_mul(eddsa_scalar(hb_505),X_518),dh(A_519,b_ni))) in
        {841}let xzdh_mac_key_523: bitstring = kdf(usageAuthMACKey,tmpk_522) in
        {842}let v_524: bool = true in
        (
            {843}if v_524 then
            (
                {844}if (xzdh_mac_513 = kdf(usageAuthMAC,(xzdh_mac_key_523,t_516))) then
                {845}let k_525: bitstring = kdf(usageSharedSecret,tmpk_522) in
                {846}let ssid_526: bitstring = kdf(usageSSID,k_525) in
                {847}out(c, ssid_526);
                {848}let msg_mac_key_527: bitstring = kdf(usageMACKey,k_525) in
                {849}let v_528: bool = false in
                (
                    {850}if v_528 then
                    (
                        {851}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_527,ec_point_as_bits(Z_514)))) then
                        {852}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                        {853}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {854}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {855}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {856}out(c, nidake_bob_correct);
                        {857}let k_nib_529: bitstring = k_525 in
                        0
                    )
                    else
                        {858}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_527,ec_point_as_bits(Z_514)))) then
                        {859}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                        {860}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {861}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {862}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {863}out(c, nidake_bob_correct);
                        {864}let k_nib_530: bitstring = k_525 in
                        0
                )
                else
                    {865}if (Z_mac_515 = fail-bitstring) then
                    {866}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                    {867}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {868}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {869}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {870}out(c, nidake_bob_correct);
                    {871}let k_nib_531: bitstring = k_525 in
                    0
            )
            else
                {872}if (xzdh_mac_513 = kdf(usageAuthenticator,(xzdh_mac_key_523,t_516))) then
                {873}let k_532: bitstring = kdf(usageSharedSecret,tmpk_522) in
                {874}let ssid_533: bitstring = kdf(usageSSID,k_532) in
                {875}out(c, ssid_533);
                {876}let msg_mac_key_534: bitstring = kdf(usageMACKey,k_532) in
                {877}let v_535: bool = false in
                (
                    {878}if v_535 then
                    (
                        {879}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_534,ec_point_as_bits(Z_514)))) then
                        {880}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                        {881}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {882}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {883}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {884}out(c, nidake_bob_correct);
                        {885}let k_nib_536: bitstring = k_532 in
                        0
                    )
                    else
                        {886}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_534,ec_point_as_bits(Z_514)))) then
                        {887}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                        {888}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {889}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {890}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {891}out(c, nidake_bob_correct);
                        {892}let k_nib_537: bitstring = k_532 in
                        0
                )
                else
                    {893}if (Z_mac_515 = fail-bitstring) then
                    {894}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                    {895}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {896}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {897}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {898}out(c, nidake_bob_correct);
                    {899}let k_nib_538: bitstring = k_532 in
                    0
        )
        else
            {900}if (xzdh_mac_513 = fail-bitstring) then
            {901}let k_539: bitstring = kdf(usageSharedSecret,tmpk_522) in
            {902}let ssid_540: bitstring = kdf(usageSSID,k_539) in
            {903}out(c, ssid_540);
            {904}let msg_mac_key_541: bitstring = kdf(usageMACKey,k_539) in
            {905}let v_542: bool = false in
            (
                {906}if v_542 then
                (
                    {907}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_541,ec_point_as_bits(Z_514)))) then
                    {908}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                    {909}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {910}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {911}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {912}out(c, nidake_bob_correct);
                    {913}let k_nib_543: bitstring = k_539 in
                    0
                )
                else
                    {914}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_541,ec_point_as_bits(Z_514)))) then
                    {915}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                    {916}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {917}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {918}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {919}out(c, nidake_bob_correct);
                    {920}let k_nib_544: bitstring = k_539 in
                    0
            )
            else
                {921}if (Z_mac_515 = fail-bitstring) then
                {922}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                {923}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                {924}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                {925}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                {926}out(c, nidake_bob_correct);
                {927}let k_nib_545: bitstring = k_539 in
                0
) | (
    {928}!
    {929}in(ac, x_546: bitstring);
    {930}out(c, x_546)
) | (
    {931}phase 1;
    {932}out(c, (h1,f1,d1,h2,f2,d2))
) | (
    {933}!
    {934}in(ec_leak, x_547: ec_scalar);
    {935}phase 1;
    {936}out(c, x_547)
)

-- Encoded process for Query not attacker_bitstring_p1(idake_alice_correct[]); not attacker_bitstring_p1(idake_bob_correct[]); not attacker_bitstring_p1(nidake_alice_correct[]); not attacker_bitstring_p1(nidake_bob_correct[]); Query secret k_ia_191,k_ia_190,k_ia_189,k_ia_166,k_ia_165,k_ia_164,k_ia_141,k_ia_140,k_ia; secret k_ib_270,k_ib_268,k_ib_266,k_ib_243,k_ib_241,k_ib_239,k_ib_216,k_ib_214,k_ib; secret k_nia_414,k_nia_412,k_nia_410,k_nia_404,k_nia_402,k_nia_400,k_nia_394,k_nia_392,k_nia_390,k_nia_364,k_nia_362,k_nia_360,k_nia_354,k_nia_352,k_nia_350,k_nia_344,k_nia_342,k_nia_340,k_nia_314,k_nia_312,k_nia_310,k_nia_304,k_nia_302,k_nia_300,k_nia_294,k_nia_292,k_nia; secret k_nib_545,k_nib_544,k_nib_543,k_nib_538,k_nib_537,k_nib_536,k_nib_531,k_nib_530,k_nib_529,k_nib_502,k_nib_501,k_nib_500,k_nib_495,k_nib_494,k_nib_493,k_nib_488,k_nib_487,k_nib_486,k_nib_459,k_nib_458,k_nib_457,k_nib_452,k_nib_451,k_nib_450,k_nib_445,k_nib_444,k_nib
Process 1:
{1}new h: eddsa_private_key;
{2}new f: ec_scalar;
{3}let v_124: ec_point = catch-fail(ec_mul(eddsa_scalar(h),ec_base)) in
{4}let v_125: ec_point = catch-fail(ec_mul(f,ec_base)) in
{5}let v_126: eddsa_signature = catch-fail(eddsa_sign(h,(v_124,v_125))) in
{6}let (cp1: eddsa_signature,h1: eddsa_private_key,f1: ec_scalar) = (if not-caught-fail(v_124) then (if not-caught-fail(v_125) then (if not-caught-fail(v_126) then (v_126,h,f) else fail-bitstring) else fail-bitstring) else fail-bitstring) in
{7}new d: ec_scalar;
{8}let v_127: ec_point = catch-fail(ec_mul(d,ec_base)) in
{9}let v_128: eddsa_signature = catch-fail(eddsa_sign(h1,ec_point_as_bits(v_127))) in
{10}let (pkp1: eddsa_signature,d1: ec_scalar) = (if not-caught-fail(v_127) then (if not-caught-fail(v_128) then (v_128,d) else fail-bitstring) else fail-bitstring) in
{11}new h_129: eddsa_private_key;
{12}new f_130: ec_scalar;
{13}let v_131: ec_point = catch-fail(ec_mul(eddsa_scalar(h_129),ec_base)) in
{14}let v_132: ec_point = catch-fail(ec_mul(f_130,ec_base)) in
{15}let v_133: eddsa_signature = catch-fail(eddsa_sign(h_129,(v_131,v_132))) in
{16}let (cp2: eddsa_signature,h2: eddsa_private_key,f2: ec_scalar) = (if not-caught-fail(v_131) then (if not-caught-fail(v_132) then (if not-caught-fail(v_133) then (v_133,h_129,f_130) else fail-bitstring) else fail-bitstring) else fail-bitstring) in
{17}new d_134: ec_scalar;
{18}let v_135: ec_point = catch-fail(ec_mul(d_134,ec_base)) in
{19}let v_136: eddsa_signature = catch-fail(eddsa_sign(h2,ec_point_as_bits(v_135))) in
{20}let (pkp2: eddsa_signature,d2: ec_scalar) = (if not-caught-fail(v_135) then (if not-caught-fail(v_136) then (v_136,d_134) else fail-bitstring) else fail-bitstring) in
{21}out(c, (cp1,cp2,pkp1,pkp2));
(
    {22}!
    {23}new x_i: ec_scalar;
    {24}out(ec_leak, x_i);
    {25}new a_i: dh_exponent;
    {26}in(c, (id_alice: identity,id_bob: identity));
    {27}if ((id_alice = id1) || (id_alice = id2)) then
    {28}let v_137: bool = (id_alice = id1) in
    (
        {29}if v_137 then
        (
            {30}let alice: bitstring = (cp1,h1,f1) in
            {31}let (cpa: eddsa_signature,ha: eddsa_private_key,fa: ec_scalar) = alice in
            {32}let (Ha: ec_point,Fa: ec_point) = eddsa_get_msg(cpa) in
            {33}in(c, (cpb: eddsa_signature,Y: ec_point,B: dh_group_element));
            {34}let (Hb: ec_point,Fb: ec_point) = eddsa_get_msg(cpb) in
            {35}let (=Hb,=Fb) = eddsa_verify(cpb,Hb) in
            {36}let X: ec_point = ec_mul(x_i,ec_base) in
            {37}let A: dh_group_element = dh(dh_generator,a_i) in
            {38}let ta: bitstring = (zero,cpb,cpa,Y,X,B,A,id_bob,id_alice) in
            {39}let k_138: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y),dh(B,a_i))) in
            {40}let ssid: bitstring = kdf(usageSSID,k_138) in
            {41}out(c, ssid);
            {42}let sigma_a: ring_signature = ring_sign(eddsa_scalar(ha),Fb,Y,ta) in
            {43}event accept_idake_alice(id_alice,id_bob,ssid,k_138);
            {44}out(c, sigma_a);
            {45}in(c, (sigma_b: ring_signature,Z: ec_point,Z_mac: bitstring));
            {46}let kmac: bitstring = kdf(usageMACKey,k_138) in
            {47}let (=one,=cpb,=cpa,=Y,=X,=B,=A,=id_bob,=id_alice) = ring_verify(sigma_b,Hb,Fa,X) in
            {48}let v_139: bool = false in
            (
                {49}if v_139 then
                (
                    {50}if (Z_mac = kdf(usageAuthMAC,(kmac,ec_point_as_bits(Z)))) then
                    {51}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                    {52}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                    {53}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                    {54}if ((id_bob = id1) || (id_bob = id2)) then
                    {55}out(c, idake_alice_correct);
                    {56}let k_ia: bitstring = k_138 in
                    {57}event k_ia_contains(k_ia)
                )
                else
                    {58}if (Z_mac = kdf(usageAuthenticator,(kmac,ec_point_as_bits(Z)))) then
                    {59}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                    {60}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                    {61}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                    {62}if ((id_bob = id1) || (id_bob = id2)) then
                    {63}out(c, idake_alice_correct);
                    {64}let k_ia_140: bitstring = k_138 in
                    {65}event k_ia_contains(k_ia_140)
            )
            else
                {66}if (Z_mac = fail-bitstring) then
                {67}event term_idake_alice(id_alice,id_bob,ssid,k_138,Z);
                {68}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa))));
                {69}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb))));
                {70}if ((id_bob = id1) || (id_bob = id2)) then
                {71}out(c, idake_alice_correct);
                {72}let k_ia_141: bitstring = k_138 in
                {73}event k_ia_contains(k_ia_141)
        )
        else
            {74}let alice_142: bitstring = (cp2,h2,f2) in
            {75}let (cpa_143: eddsa_signature,ha_144: eddsa_private_key,fa_145: ec_scalar) = alice_142 in
            {76}let (Ha_146: ec_point,Fa_147: ec_point) = eddsa_get_msg(cpa_143) in
            {77}in(c, (cpb_148: eddsa_signature,Y_149: ec_point,B_150: dh_group_element));
            {78}let (Hb_151: ec_point,Fb_152: ec_point) = eddsa_get_msg(cpb_148) in
            {79}let (=Hb_151,=Fb_152) = eddsa_verify(cpb_148,Hb_151) in
            {80}let X_153: ec_point = ec_mul(x_i,ec_base) in
            {81}let A_154: dh_group_element = dh(dh_generator,a_i) in
            {82}let ta_155: bitstring = (zero,cpb_148,cpa_143,Y_149,X_153,B_150,A_154,id_bob,id_alice) in
            {83}let k_156: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y_149),dh(B_150,a_i))) in
            {84}let ssid_157: bitstring = kdf(usageSSID,k_156) in
            {85}out(c, ssid_157);
            {86}let sigma_a_158: ring_signature = ring_sign(eddsa_scalar(ha_144),Fb_152,Y_149,ta_155) in
            {87}event accept_idake_alice(id_alice,id_bob,ssid_157,k_156);
            {88}out(c, sigma_a_158);
            {89}in(c, (sigma_b_159: ring_signature,Z_160: ec_point,Z_mac_161: bitstring));
            {90}let kmac_162: bitstring = kdf(usageMACKey,k_156) in
            {91}let (=one,=cpb_148,=cpa_143,=Y_149,=X_153,=B_150,=A_154,=id_bob,=id_alice) = ring_verify(sigma_b_159,Hb_151,Fa_147,X_153) in
            {92}let v_163: bool = false in
            (
                {93}if v_163 then
                (
                    {94}if (Z_mac_161 = kdf(usageAuthMAC,(kmac_162,ec_point_as_bits(Z_160)))) then
                    {95}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                    {96}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                    {97}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                    {98}if ((id_bob = id1) || (id_bob = id2)) then
                    {99}out(c, idake_alice_correct);
                    {100}let k_ia_164: bitstring = k_156 in
                    {101}event k_ia_contains(k_ia_164)
                )
                else
                    {102}if (Z_mac_161 = kdf(usageAuthenticator,(kmac_162,ec_point_as_bits(Z_160)))) then
                    {103}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                    {104}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                    {105}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                    {106}if ((id_bob = id1) || (id_bob = id2)) then
                    {107}out(c, idake_alice_correct);
                    {108}let k_ia_165: bitstring = k_156 in
                    {109}event k_ia_contains(k_ia_165)
            )
            else
                {110}if (Z_mac_161 = fail-bitstring) then
                {111}event term_idake_alice(id_alice,id_bob,ssid_157,k_156,Z_160);
                {112}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_143))));
                {113}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_148))));
                {114}if ((id_bob = id1) || (id_bob = id2)) then
                {115}out(c, idake_alice_correct);
                {116}let k_ia_166: bitstring = k_156 in
                {117}event k_ia_contains(k_ia_166)
    )
    else
        {118}let alice_167: bitstring = fail-bitstring in
        {119}let (cpa_168: eddsa_signature,ha_169: eddsa_private_key,fa_170: ec_scalar) = alice_167 in
        {120}let (Ha_171: ec_point,Fa_172: ec_point) = eddsa_get_msg(cpa_168) in
        {121}in(c, (cpb_173: eddsa_signature,Y_174: ec_point,B_175: dh_group_element));
        {122}let (Hb_176: ec_point,Fb_177: ec_point) = eddsa_get_msg(cpb_173) in
        {123}let (=Hb_176,=Fb_177) = eddsa_verify(cpb_173,Hb_176) in
        {124}let X_178: ec_point = ec_mul(x_i,ec_base) in
        {125}let A_179: dh_group_element = dh(dh_generator,a_i) in
        {126}let ta_180: bitstring = (zero,cpb_173,cpa_168,Y_174,X_178,B_175,A_179,id_bob,id_alice) in
        {127}let k_181: bitstring = kdf(usageSharedSecret,(ec_mul(x_i,Y_174),dh(B_175,a_i))) in
        {128}let ssid_182: bitstring = kdf(usageSSID,k_181) in
        {129}out(c, ssid_182);
        {130}let sigma_a_183: ring_signature = ring_sign(eddsa_scalar(ha_169),Fb_177,Y_174,ta_180) in
        {131}event accept_idake_alice(id_alice,id_bob,ssid_182,k_181);
        {132}out(c, sigma_a_183);
        {133}in(c, (sigma_b_184: ring_signature,Z_185: ec_point,Z_mac_186: bitstring));
        {134}let kmac_187: bitstring = kdf(usageMACKey,k_181) in
        {135}let (=one,=cpb_173,=cpa_168,=Y_174,=X_178,=B_175,=A_179,=id_bob,=id_alice) = ring_verify(sigma_b_184,Hb_176,Fa_172,X_178) in
        {136}let v_188: bool = false in
        (
            {137}if v_188 then
            (
                {138}if (Z_mac_186 = kdf(usageAuthMAC,(kmac_187,ec_point_as_bits(Z_185)))) then
                {139}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
                {140}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
                {141}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
                {142}if ((id_bob = id1) || (id_bob = id2)) then
                {143}out(c, idake_alice_correct);
                {144}let k_ia_189: bitstring = k_181 in
                {145}event k_ia_contains(k_ia_189)
            )
            else
                {146}if (Z_mac_186 = kdf(usageAuthenticator,(kmac_187,ec_point_as_bits(Z_185)))) then
                {147}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
                {148}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
                {149}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
                {150}if ((id_bob = id1) || (id_bob = id2)) then
                {151}out(c, idake_alice_correct);
                {152}let k_ia_190: bitstring = k_181 in
                {153}event k_ia_contains(k_ia_190)
        )
        else
            {154}if (Z_mac_186 = fail-bitstring) then
            {155}event term_idake_alice(id_alice,id_bob,ssid_182,k_181,Z_185);
            {156}out(ac, (fp_idake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_168))));
            {157}in(ac, (=fp_idake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_173))));
            {158}if ((id_bob = id1) || (id_bob = id2)) then
            {159}out(c, idake_alice_correct);
            {160}let k_ia_191: bitstring = k_181 in
            {161}event k_ia_contains(k_ia_191)
) | (
    {162}!
    {163}new y_i: ec_scalar;
    {164}new z_i: ec_scalar;
    {165}out(ec_leak, y_i);
    {166}out(ec_leak, z_i);
    {167}new b_i: dh_exponent;
    {168}in(c, (id_alice_192: identity,id_bob_193: identity));
    {169}if ((id_bob_193 = id1) || (id_bob_193 = id2)) then
    {170}let v_194: bool = (id_bob_193 = id1) in
    (
        {171}if v_194 then
        (
            {172}let bob: bitstring = (cp1,h1,f1) in
            {173}let (cpb_195: eddsa_signature,hb: eddsa_private_key,fb: ec_scalar) = bob in
            {174}let (Hb_196: ec_point,Fb_197: ec_point) = eddsa_get_msg(cpb_195) in
            {175}let Y_198: ec_point = ec_mul(y_i,ec_base) in
            {176}let B_199: dh_group_element = dh(dh_generator,b_i) in
            {177}out(c, (Y_198,B_199));
            {178}in(c, sigma_a_200: ring_signature);
            {179}let (=zero,=cpb_195,cpa_201: eddsa_signature,=Y_198,X_202: ec_point,=B_199,A_203: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_200) in
            {180}let (Ha_204: ec_point,Fa_205: ec_point) = eddsa_get_msg(cpa_201) in
            {181}let (=Ha_204,=Fa_205) = eddsa_verify(cpa_201,Ha_204) in
            {182}let (=zero,=cpb_195,=cpa_201,=Y_198,=X_202,=B_199,=A_203,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_200,Ha_204,Fb_197,Y_198) in
            {183}let tb: bitstring = (one,cpb_195,cpa_201,Y_198,X_202,B_199,A_203,id_bob_193,id_alice_192) in
            {184}let k_206: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_202),dh(A_203,b_i))) in
            {185}let ssid_207: bitstring = kdf(usageSSID,k_206) in
            {186}out(c, ssid_207);
            {187}event term_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206);
            {188}let sigma_b_208: ring_signature = ring_sign(eddsa_scalar(hb),Fa_205,X_202,tb) in
            {189}let Z_209: ec_point = ec_mul(z_i,ec_base) in
            {190}let kmac_210: bitstring = kdf(usageMACKey,k_206) in
            {191}let v_211: bool = false in
            (
                {192}if v_211 then
                (
                    {193}let Z_mac_212: bitstring = kdf(usageAuthMAC,(kmac_210,ec_point_as_bits(Z_209))) in
                    {194}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                    {195}out(c, (sigma_b_208,Z_209,Z_mac_212));
                    {196}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                    {197}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                    {198}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {199}out(c, idake_bob_correct);
                    {200}let k_ib: bitstring = k_206 in
                    {201}event k_ib_contains(k_ib)
                )
                else
                    {202}let Z_mac_213: bitstring = kdf(usageAuthenticator,(kmac_210,ec_point_as_bits(Z_209))) in
                    {203}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                    {204}out(c, (sigma_b_208,Z_209,Z_mac_213));
                    {205}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                    {206}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                    {207}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {208}out(c, idake_bob_correct);
                    {209}let k_ib_214: bitstring = k_206 in
                    {210}event k_ib_contains(k_ib_214)
            )
            else
                {211}let Z_mac_215: bitstring = fail-bitstring in
                {212}event accept_idake_bob(id_alice_192,id_bob_193,ssid_207,k_206,Z_209);
                {213}out(c, (sigma_b_208,Z_209,Z_mac_215));
                {214}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_201))));
                {215}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_195))));
                {216}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {217}out(c, idake_bob_correct);
                {218}let k_ib_216: bitstring = k_206 in
                {219}event k_ib_contains(k_ib_216)
        )
        else
            {220}let bob_217: bitstring = (cp2,h2,f2) in
            {221}let (cpb_218: eddsa_signature,hb_219: eddsa_private_key,fb_220: ec_scalar) = bob_217 in
            {222}let (Hb_221: ec_point,Fb_222: ec_point) = eddsa_get_msg(cpb_218) in
            {223}let Y_223: ec_point = ec_mul(y_i,ec_base) in
            {224}let B_224: dh_group_element = dh(dh_generator,b_i) in
            {225}out(c, (Y_223,B_224));
            {226}in(c, sigma_a_225: ring_signature);
            {227}let (=zero,=cpb_218,cpa_226: eddsa_signature,=Y_223,X_227: ec_point,=B_224,A_228: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_225) in
            {228}let (Ha_229: ec_point,Fa_230: ec_point) = eddsa_get_msg(cpa_226) in
            {229}let (=Ha_229,=Fa_230) = eddsa_verify(cpa_226,Ha_229) in
            {230}let (=zero,=cpb_218,=cpa_226,=Y_223,=X_227,=B_224,=A_228,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_225,Ha_229,Fb_222,Y_223) in
            {231}let tb_231: bitstring = (one,cpb_218,cpa_226,Y_223,X_227,B_224,A_228,id_bob_193,id_alice_192) in
            {232}let k_232: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_227),dh(A_228,b_i))) in
            {233}let ssid_233: bitstring = kdf(usageSSID,k_232) in
            {234}out(c, ssid_233);
            {235}event term_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232);
            {236}let sigma_b_234: ring_signature = ring_sign(eddsa_scalar(hb_219),Fa_230,X_227,tb_231) in
            {237}let Z_235: ec_point = ec_mul(z_i,ec_base) in
            {238}let kmac_236: bitstring = kdf(usageMACKey,k_232) in
            {239}let v_237: bool = false in
            (
                {240}if v_237 then
                (
                    {241}let Z_mac_238: bitstring = kdf(usageAuthMAC,(kmac_236,ec_point_as_bits(Z_235))) in
                    {242}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                    {243}out(c, (sigma_b_234,Z_235,Z_mac_238));
                    {244}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                    {245}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                    {246}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {247}out(c, idake_bob_correct);
                    {248}let k_ib_239: bitstring = k_232 in
                    {249}event k_ib_contains(k_ib_239)
                )
                else
                    {250}let Z_mac_240: bitstring = kdf(usageAuthenticator,(kmac_236,ec_point_as_bits(Z_235))) in
                    {251}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                    {252}out(c, (sigma_b_234,Z_235,Z_mac_240));
                    {253}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                    {254}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                    {255}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                    {256}out(c, idake_bob_correct);
                    {257}let k_ib_241: bitstring = k_232 in
                    {258}event k_ib_contains(k_ib_241)
            )
            else
                {259}let Z_mac_242: bitstring = fail-bitstring in
                {260}event accept_idake_bob(id_alice_192,id_bob_193,ssid_233,k_232,Z_235);
                {261}out(c, (sigma_b_234,Z_235,Z_mac_242));
                {262}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_226))));
                {263}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_218))));
                {264}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {265}out(c, idake_bob_correct);
                {266}let k_ib_243: bitstring = k_232 in
                {267}event k_ib_contains(k_ib_243)
    )
    else
        {268}let bob_244: bitstring = fail-bitstring in
        {269}let (cpb_245: eddsa_signature,hb_246: eddsa_private_key,fb_247: ec_scalar) = bob_244 in
        {270}let (Hb_248: ec_point,Fb_249: ec_point) = eddsa_get_msg(cpb_245) in
        {271}let Y_250: ec_point = ec_mul(y_i,ec_base) in
        {272}let B_251: dh_group_element = dh(dh_generator,b_i) in
        {273}out(c, (Y_250,B_251));
        {274}in(c, sigma_a_252: ring_signature);
        {275}let (=zero,=cpb_245,cpa_253: eddsa_signature,=Y_250,X_254: ec_point,=B_251,A_255: dh_group_element,=id_bob_193,=id_alice_192) = ring_get_msg(sigma_a_252) in
        {276}let (Ha_256: ec_point,Fa_257: ec_point) = eddsa_get_msg(cpa_253) in
        {277}let (=Ha_256,=Fa_257) = eddsa_verify(cpa_253,Ha_256) in
        {278}let (=zero,=cpb_245,=cpa_253,=Y_250,=X_254,=B_251,=A_255,=id_bob_193,=id_alice_192) = ring_verify(sigma_a_252,Ha_256,Fb_249,Y_250) in
        {279}let tb_258: bitstring = (one,cpb_245,cpa_253,Y_250,X_254,B_251,A_255,id_bob_193,id_alice_192) in
        {280}let k_259: bitstring = kdf(usageSharedSecret,(ec_mul(y_i,X_254),dh(A_255,b_i))) in
        {281}let ssid_260: bitstring = kdf(usageSSID,k_259) in
        {282}out(c, ssid_260);
        {283}event term_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259);
        {284}let sigma_b_261: ring_signature = ring_sign(eddsa_scalar(hb_246),Fa_257,X_254,tb_258) in
        {285}let Z_262: ec_point = ec_mul(z_i,ec_base) in
        {286}let kmac_263: bitstring = kdf(usageMACKey,k_259) in
        {287}let v_264: bool = false in
        (
            {288}if v_264 then
            (
                {289}let Z_mac_265: bitstring = kdf(usageAuthMAC,(kmac_263,ec_point_as_bits(Z_262))) in
                {290}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
                {291}out(c, (sigma_b_261,Z_262,Z_mac_265));
                {292}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
                {293}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
                {294}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {295}out(c, idake_bob_correct);
                {296}let k_ib_266: bitstring = k_259 in
                {297}event k_ib_contains(k_ib_266)
            )
            else
                {298}let Z_mac_267: bitstring = kdf(usageAuthenticator,(kmac_263,ec_point_as_bits(Z_262))) in
                {299}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
                {300}out(c, (sigma_b_261,Z_262,Z_mac_267));
                {301}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
                {302}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
                {303}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
                {304}out(c, idake_bob_correct);
                {305}let k_ib_268: bitstring = k_259 in
                {306}event k_ib_contains(k_ib_268)
        )
        else
            {307}let Z_mac_269: bitstring = fail-bitstring in
            {308}event accept_idake_bob(id_alice_192,id_bob_193,ssid_260,k_259,Z_262);
            {309}out(c, (sigma_b_261,Z_262,Z_mac_269));
            {310}in(ac, (=fp_idake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_253))));
            {311}out(ac, (fp_idake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_245))));
            {312}if ((id_alice_192 = id1) || (id_alice_192 = id2)) then
            {313}out(c, idake_bob_correct);
            {314}let k_ib_270: bitstring = k_259 in
            {315}event k_ib_contains(k_ib_270)
) | (
    {316}!
    {317}new x_ni: ec_scalar;
    {318}new z_ni: ec_scalar;
    {319}out(ec_leak, x_ni);
    {320}out(ec_leak, z_ni);
    {321}new a_ni: dh_exponent;
    {322}in(c, (id_alice_271: identity,id_bob_272: identity));
    {323}if ((id_alice_271 = id1) || (id_alice_271 = id2)) then
    {324}let v_273: bool = (id_alice_271 = id1) in
    (
        {325}if v_273 then
        (
            {326}let alice_274: bitstring = (cp1,h1,f1) in
            {327}let (cpa_275: eddsa_signature,ha_276: eddsa_private_key,fa_277: ec_scalar) = alice_274 in
            {328}in(c, (cpb_278: eddsa_signature,pkp: eddsa_signature,Y_279: ec_point,B_280: dh_group_element));
            {329}let (Hb_281: ec_point,Fb_282: ec_point) = eddsa_get_msg(cpb_278) in
            {330}let (=Hb_281,=Fb_282) = eddsa_verify(cpb_278,Hb_281) in
            {331}let ec_point_as_bits(D: ec_point) = eddsa_verify(pkp,Hb_281) in
            {332}let X_283: ec_point = ec_mul(x_ni,ec_base) in
            {333}let A_284: dh_group_element = dh(dh_generator,a_ni) in
            {334}let tmpk: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_279),ec_mul(x_ni,D),ec_mul(x_ni,Hb_281),dh(B_280,a_ni))) in
            {335}let t: bitstring = (cpb_278,cpa_275,Y_279,X_283,B_280,A_284,D,id_bob_272,id_alice_271) in
            {336}let k_285: bitstring = kdf(usageSharedSecret,tmpk) in
            {337}let ssid_286: bitstring = kdf(usageSSID,k_285) in
            {338}out(c, ssid_286);
            {339}let sigma: ring_signature = ring_sign(eddsa_scalar(ha_276),Fb_282,Y_279,t) in
            {340}let xzdh_mac_key: bitstring = kdf(usageAuthMACKey,tmpk) in
            {341}let v_287: bool = true in
            (
                {342}if v_287 then
                (
                    {343}let xzdh_mac: bitstring = kdf(usageAuthMAC,(xzdh_mac_key,t)) in
                    {344}let msg_mac_key: bitstring = kdf(usageMACKey,k_285) in
                    {345}let Z_288: ec_point = ec_mul(z_ni,ec_base) in
                    {346}let v_289: bool = false in
                    (
                        {347}if v_289 then
                        (
                            {348}let Z_mac_290: bitstring = kdf(usageAuthMAC,(msg_mac_key,ec_point_as_bits(Z_288))) in
                            {349}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                            {350}out(c, (sigma,xzdh_mac,Z_288,Z_mac_290));
                            {351}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {352}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {353}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {354}out(c, nidake_alice_correct);
                            {355}let k_nia: bitstring = k_285 in
                            {356}event k_nia_contains(k_nia)
                        )
                        else
                            {357}let Z_mac_291: bitstring = kdf(usageAuthenticator,(msg_mac_key,ec_point_as_bits(Z_288))) in
                            {358}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                            {359}out(c, (sigma,xzdh_mac,Z_288,Z_mac_291));
                            {360}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {361}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {362}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {363}out(c, nidake_alice_correct);
                            {364}let k_nia_292: bitstring = k_285 in
                            {365}event k_nia_contains(k_nia_292)
                    )
                    else
                        {366}let Z_mac_293: bitstring = fail-bitstring in
                        {367}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_288);
                        {368}out(c, (sigma,xzdh_mac,Z_288,Z_mac_293));
                        {369}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {370}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {371}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {372}out(c, nidake_alice_correct);
                        {373}let k_nia_294: bitstring = k_285 in
                        {374}event k_nia_contains(k_nia_294)
                )
                else
                    {375}let xzdh_mac_295: bitstring = kdf(usageAuthenticator,(xzdh_mac_key,t)) in
                    {376}let msg_mac_key_296: bitstring = kdf(usageMACKey,k_285) in
                    {377}let Z_297: ec_point = ec_mul(z_ni,ec_base) in
                    {378}let v_298: bool = false in
                    (
                        {379}if v_298 then
                        (
                            {380}let Z_mac_299: bitstring = kdf(usageAuthMAC,(msg_mac_key_296,ec_point_as_bits(Z_297))) in
                            {381}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                            {382}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_299));
                            {383}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {384}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {385}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {386}out(c, nidake_alice_correct);
                            {387}let k_nia_300: bitstring = k_285 in
                            {388}event k_nia_contains(k_nia_300)
                        )
                        else
                            {389}let Z_mac_301: bitstring = kdf(usageAuthenticator,(msg_mac_key_296,ec_point_as_bits(Z_297))) in
                            {390}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                            {391}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_301));
                            {392}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                            {393}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                            {394}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {395}out(c, nidake_alice_correct);
                            {396}let k_nia_302: bitstring = k_285 in
                            {397}event k_nia_contains(k_nia_302)
                    )
                    else
                        {398}let Z_mac_303: bitstring = fail-bitstring in
                        {399}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_297);
                        {400}out(c, (sigma,xzdh_mac_295,Z_297,Z_mac_303));
                        {401}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {402}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {403}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {404}out(c, nidake_alice_correct);
                        {405}let k_nia_304: bitstring = k_285 in
                        {406}event k_nia_contains(k_nia_304)
            )
            else
                {407}let xzdh_mac_305: bitstring = fail-bitstring in
                {408}let msg_mac_key_306: bitstring = kdf(usageMACKey,k_285) in
                {409}let Z_307: ec_point = ec_mul(z_ni,ec_base) in
                {410}let v_308: bool = false in
                (
                    {411}if v_308 then
                    (
                        {412}let Z_mac_309: bitstring = kdf(usageAuthMAC,(msg_mac_key_306,ec_point_as_bits(Z_307))) in
                        {413}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                        {414}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_309));
                        {415}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {416}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {417}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {418}out(c, nidake_alice_correct);
                        {419}let k_nia_310: bitstring = k_285 in
                        {420}event k_nia_contains(k_nia_310)
                    )
                    else
                        {421}let Z_mac_311: bitstring = kdf(usageAuthenticator,(msg_mac_key_306,ec_point_as_bits(Z_307))) in
                        {422}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                        {423}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_311));
                        {424}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                        {425}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                        {426}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {427}out(c, nidake_alice_correct);
                        {428}let k_nia_312: bitstring = k_285 in
                        {429}event k_nia_contains(k_nia_312)
                )
                else
                    {430}let Z_mac_313: bitstring = fail-bitstring in
                    {431}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_286,k_285,Z_307);
                    {432}out(c, (sigma,xzdh_mac_305,Z_307,Z_mac_313));
                    {433}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_275))));
                    {434}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_278))));
                    {435}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {436}out(c, nidake_alice_correct);
                    {437}let k_nia_314: bitstring = k_285 in
                    {438}event k_nia_contains(k_nia_314)
        )
        else
            {439}let alice_315: bitstring = (cp2,h2,f2) in
            {440}let (cpa_316: eddsa_signature,ha_317: eddsa_private_key,fa_318: ec_scalar) = alice_315 in
            {441}in(c, (cpb_319: eddsa_signature,pkp_320: eddsa_signature,Y_321: ec_point,B_322: dh_group_element));
            {442}let (Hb_323: ec_point,Fb_324: ec_point) = eddsa_get_msg(cpb_319) in
            {443}let (=Hb_323,=Fb_324) = eddsa_verify(cpb_319,Hb_323) in
            {444}let ec_point_as_bits(D_325: ec_point) = eddsa_verify(pkp_320,Hb_323) in
            {445}let X_326: ec_point = ec_mul(x_ni,ec_base) in
            {446}let A_327: dh_group_element = dh(dh_generator,a_ni) in
            {447}let tmpk_328: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_321),ec_mul(x_ni,D_325),ec_mul(x_ni,Hb_323),dh(B_322,a_ni))) in
            {448}let t_329: bitstring = (cpb_319,cpa_316,Y_321,X_326,B_322,A_327,D_325,id_bob_272,id_alice_271) in
            {449}let k_330: bitstring = kdf(usageSharedSecret,tmpk_328) in
            {450}let ssid_331: bitstring = kdf(usageSSID,k_330) in
            {451}out(c, ssid_331);
            {452}let sigma_332: ring_signature = ring_sign(eddsa_scalar(ha_317),Fb_324,Y_321,t_329) in
            {453}let xzdh_mac_key_333: bitstring = kdf(usageAuthMACKey,tmpk_328) in
            {454}let v_334: bool = true in
            (
                {455}if v_334 then
                (
                    {456}let xzdh_mac_335: bitstring = kdf(usageAuthMAC,(xzdh_mac_key_333,t_329)) in
                    {457}let msg_mac_key_336: bitstring = kdf(usageMACKey,k_330) in
                    {458}let Z_337: ec_point = ec_mul(z_ni,ec_base) in
                    {459}let v_338: bool = false in
                    (
                        {460}if v_338 then
                        (
                            {461}let Z_mac_339: bitstring = kdf(usageAuthMAC,(msg_mac_key_336,ec_point_as_bits(Z_337))) in
                            {462}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                            {463}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_339));
                            {464}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {465}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {466}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {467}out(c, nidake_alice_correct);
                            {468}let k_nia_340: bitstring = k_330 in
                            {469}event k_nia_contains(k_nia_340)
                        )
                        else
                            {470}let Z_mac_341: bitstring = kdf(usageAuthenticator,(msg_mac_key_336,ec_point_as_bits(Z_337))) in
                            {471}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                            {472}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_341));
                            {473}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {474}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {475}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {476}out(c, nidake_alice_correct);
                            {477}let k_nia_342: bitstring = k_330 in
                            {478}event k_nia_contains(k_nia_342)
                    )
                    else
                        {479}let Z_mac_343: bitstring = fail-bitstring in
                        {480}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_337);
                        {481}out(c, (sigma_332,xzdh_mac_335,Z_337,Z_mac_343));
                        {482}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {483}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {484}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {485}out(c, nidake_alice_correct);
                        {486}let k_nia_344: bitstring = k_330 in
                        {487}event k_nia_contains(k_nia_344)
                )
                else
                    {488}let xzdh_mac_345: bitstring = kdf(usageAuthenticator,(xzdh_mac_key_333,t_329)) in
                    {489}let msg_mac_key_346: bitstring = kdf(usageMACKey,k_330) in
                    {490}let Z_347: ec_point = ec_mul(z_ni,ec_base) in
                    {491}let v_348: bool = false in
                    (
                        {492}if v_348 then
                        (
                            {493}let Z_mac_349: bitstring = kdf(usageAuthMAC,(msg_mac_key_346,ec_point_as_bits(Z_347))) in
                            {494}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                            {495}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_349));
                            {496}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {497}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {498}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {499}out(c, nidake_alice_correct);
                            {500}let k_nia_350: bitstring = k_330 in
                            {501}event k_nia_contains(k_nia_350)
                        )
                        else
                            {502}let Z_mac_351: bitstring = kdf(usageAuthenticator,(msg_mac_key_346,ec_point_as_bits(Z_347))) in
                            {503}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                            {504}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_351));
                            {505}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                            {506}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                            {507}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                            {508}out(c, nidake_alice_correct);
                            {509}let k_nia_352: bitstring = k_330 in
                            {510}event k_nia_contains(k_nia_352)
                    )
                    else
                        {511}let Z_mac_353: bitstring = fail-bitstring in
                        {512}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_347);
                        {513}out(c, (sigma_332,xzdh_mac_345,Z_347,Z_mac_353));
                        {514}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {515}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {516}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {517}out(c, nidake_alice_correct);
                        {518}let k_nia_354: bitstring = k_330 in
                        {519}event k_nia_contains(k_nia_354)
            )
            else
                {520}let xzdh_mac_355: bitstring = fail-bitstring in
                {521}let msg_mac_key_356: bitstring = kdf(usageMACKey,k_330) in
                {522}let Z_357: ec_point = ec_mul(z_ni,ec_base) in
                {523}let v_358: bool = false in
                (
                    {524}if v_358 then
                    (
                        {525}let Z_mac_359: bitstring = kdf(usageAuthMAC,(msg_mac_key_356,ec_point_as_bits(Z_357))) in
                        {526}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                        {527}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_359));
                        {528}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {529}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {530}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {531}out(c, nidake_alice_correct);
                        {532}let k_nia_360: bitstring = k_330 in
                        {533}event k_nia_contains(k_nia_360)
                    )
                    else
                        {534}let Z_mac_361: bitstring = kdf(usageAuthenticator,(msg_mac_key_356,ec_point_as_bits(Z_357))) in
                        {535}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                        {536}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_361));
                        {537}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                        {538}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                        {539}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {540}out(c, nidake_alice_correct);
                        {541}let k_nia_362: bitstring = k_330 in
                        {542}event k_nia_contains(k_nia_362)
                )
                else
                    {543}let Z_mac_363: bitstring = fail-bitstring in
                    {544}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_331,k_330,Z_357);
                    {545}out(c, (sigma_332,xzdh_mac_355,Z_357,Z_mac_363));
                    {546}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_316))));
                    {547}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_319))));
                    {548}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {549}out(c, nidake_alice_correct);
                    {550}let k_nia_364: bitstring = k_330 in
                    {551}event k_nia_contains(k_nia_364)
    )
    else
        {552}let alice_365: bitstring = fail-bitstring in
        {553}let (cpa_366: eddsa_signature,ha_367: eddsa_private_key,fa_368: ec_scalar) = alice_365 in
        {554}in(c, (cpb_369: eddsa_signature,pkp_370: eddsa_signature,Y_371: ec_point,B_372: dh_group_element));
        {555}let (Hb_373: ec_point,Fb_374: ec_point) = eddsa_get_msg(cpb_369) in
        {556}let (=Hb_373,=Fb_374) = eddsa_verify(cpb_369,Hb_373) in
        {557}let ec_point_as_bits(D_375: ec_point) = eddsa_verify(pkp_370,Hb_373) in
        {558}let X_376: ec_point = ec_mul(x_ni,ec_base) in
        {559}let A_377: dh_group_element = dh(dh_generator,a_ni) in
        {560}let tmpk_378: bitstring = kdf(usageTmpKey,(ec_mul(x_ni,Y_371),ec_mul(x_ni,D_375),ec_mul(x_ni,Hb_373),dh(B_372,a_ni))) in
        {561}let t_379: bitstring = (cpb_369,cpa_366,Y_371,X_376,B_372,A_377,D_375,id_bob_272,id_alice_271) in
        {562}let k_380: bitstring = kdf(usageSharedSecret,tmpk_378) in
        {563}let ssid_381: bitstring = kdf(usageSSID,k_380) in
        {564}out(c, ssid_381);
        {565}let sigma_382: ring_signature = ring_sign(eddsa_scalar(ha_367),Fb_374,Y_371,t_379) in
        {566}let xzdh_mac_key_383: bitstring = kdf(usageAuthMACKey,tmpk_378) in
        {567}let v_384: bool = true in
        (
            {568}if v_384 then
            (
                {569}let xzdh_mac_385: bitstring = kdf(usageAuthMAC,(xzdh_mac_key_383,t_379)) in
                {570}let msg_mac_key_386: bitstring = kdf(usageMACKey,k_380) in
                {571}let Z_387: ec_point = ec_mul(z_ni,ec_base) in
                {572}let v_388: bool = false in
                (
                    {573}if v_388 then
                    (
                        {574}let Z_mac_389: bitstring = kdf(usageAuthMAC,(msg_mac_key_386,ec_point_as_bits(Z_387))) in
                        {575}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                        {576}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_389));
                        {577}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {578}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {579}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {580}out(c, nidake_alice_correct);
                        {581}let k_nia_390: bitstring = k_380 in
                        {582}event k_nia_contains(k_nia_390)
                    )
                    else
                        {583}let Z_mac_391: bitstring = kdf(usageAuthenticator,(msg_mac_key_386,ec_point_as_bits(Z_387))) in
                        {584}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                        {585}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_391));
                        {586}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {587}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {588}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {589}out(c, nidake_alice_correct);
                        {590}let k_nia_392: bitstring = k_380 in
                        {591}event k_nia_contains(k_nia_392)
                )
                else
                    {592}let Z_mac_393: bitstring = fail-bitstring in
                    {593}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_387);
                    {594}out(c, (sigma_382,xzdh_mac_385,Z_387,Z_mac_393));
                    {595}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {596}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {597}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {598}out(c, nidake_alice_correct);
                    {599}let k_nia_394: bitstring = k_380 in
                    {600}event k_nia_contains(k_nia_394)
            )
            else
                {601}let xzdh_mac_395: bitstring = kdf(usageAuthenticator,(xzdh_mac_key_383,t_379)) in
                {602}let msg_mac_key_396: bitstring = kdf(usageMACKey,k_380) in
                {603}let Z_397: ec_point = ec_mul(z_ni,ec_base) in
                {604}let v_398: bool = false in
                (
                    {605}if v_398 then
                    (
                        {606}let Z_mac_399: bitstring = kdf(usageAuthMAC,(msg_mac_key_396,ec_point_as_bits(Z_397))) in
                        {607}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                        {608}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_399));
                        {609}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {610}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {611}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {612}out(c, nidake_alice_correct);
                        {613}let k_nia_400: bitstring = k_380 in
                        {614}event k_nia_contains(k_nia_400)
                    )
                    else
                        {615}let Z_mac_401: bitstring = kdf(usageAuthenticator,(msg_mac_key_396,ec_point_as_bits(Z_397))) in
                        {616}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                        {617}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_401));
                        {618}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                        {619}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                        {620}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                        {621}out(c, nidake_alice_correct);
                        {622}let k_nia_402: bitstring = k_380 in
                        {623}event k_nia_contains(k_nia_402)
                )
                else
                    {624}let Z_mac_403: bitstring = fail-bitstring in
                    {625}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_397);
                    {626}out(c, (sigma_382,xzdh_mac_395,Z_397,Z_mac_403));
                    {627}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {628}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {629}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {630}out(c, nidake_alice_correct);
                    {631}let k_nia_404: bitstring = k_380 in
                    {632}event k_nia_contains(k_nia_404)
        )
        else
            {633}let xzdh_mac_405: bitstring = fail-bitstring in
            {634}let msg_mac_key_406: bitstring = kdf(usageMACKey,k_380) in
            {635}let Z_407: ec_point = ec_mul(z_ni,ec_base) in
            {636}let v_408: bool = false in
            (
                {637}if v_408 then
                (
                    {638}let Z_mac_409: bitstring = kdf(usageAuthMAC,(msg_mac_key_406,ec_point_as_bits(Z_407))) in
                    {639}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                    {640}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_409));
                    {641}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {642}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {643}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {644}out(c, nidake_alice_correct);
                    {645}let k_nia_410: bitstring = k_380 in
                    {646}event k_nia_contains(k_nia_410)
                )
                else
                    {647}let Z_mac_411: bitstring = kdf(usageAuthenticator,(msg_mac_key_406,ec_point_as_bits(Z_407))) in
                    {648}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                    {649}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_411));
                    {650}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                    {651}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                    {652}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                    {653}out(c, nidake_alice_correct);
                    {654}let k_nia_412: bitstring = k_380 in
                    {655}event k_nia_contains(k_nia_412)
            )
            else
                {656}let Z_mac_413: bitstring = fail-bitstring in
                {657}event accept_nidake_alice(id_alice_271,id_bob_272,ssid_381,k_380,Z_407);
                {658}out(c, (sigma_382,xzdh_mac_405,Z_407,Z_mac_413));
                {659}out(ac, (fp_nidake_alice,kdf(usageFingerprint,eddsa_get_msg(cpa_366))));
                {660}in(ac, (=fp_nidake_bob,=kdf(usageFingerprint,eddsa_get_msg(cpb_369))));
                {661}if ((id_bob_272 = id1) || (id_bob_272 = id2)) then
                {662}out(c, nidake_alice_correct);
                {663}let k_nia_414: bitstring = k_380 in
                {664}event k_nia_contains(k_nia_414)
) | (
    {665}!
    {666}new y_ni: ec_scalar;
    {667}out(ec_leak, y_ni);
    {668}new b_ni: dh_exponent;
    {669}in(c, (id_alice_415: identity,id_bob_416: identity));
    {670}if ((id_bob_416 = id1) || (id_bob_416 = id2)) then
    {671}let v_417: bool = (id_bob_416 = id1) in
    (
        {672}if v_417 then
        (
            {673}let bob_418: bitstring = (cp1,h1,f1,d1) in
            {674}let (cpb_419: eddsa_signature,hb_420: eddsa_private_key,fb_421: ec_scalar,d_422: ec_scalar) = bob_418 in
            {675}let (Hb_423: ec_point,Fb_424: ec_point) = eddsa_get_msg(cpb_419) in
            {676}let Y_425: ec_point = ec_mul(y_ni,ec_base) in
            {677}let B_426: dh_group_element = dh(dh_generator,b_ni) in
            {678}out(c, (Y_425,B_426));
            {679}in(c, (sigma_427: ring_signature,xzdh_mac_428: bitstring,Z_429: ec_point,Z_mac_430: bitstring));
            {680}let t_431: bitstring = ring_get_msg(sigma_427) in
            {681}let (=cpb_419,cpa_432: eddsa_signature,=Y_425,X_433: ec_point,=B_426,A_434: dh_group_element,=ec_mul(d_422,ec_base),=id_bob_416,=id_alice_415) = t_431 in
            {682}let (Ha_435: ec_point,Fa_436: ec_point) = eddsa_get_msg(cpa_432) in
            {683}let (=Ha_435,=Fa_436) = eddsa_verify(cpa_432,Ha_435) in
            {684}let (=cpb_419,=cpa_432,=Y_425,=X_433,=B_426,=A_434,=ec_mul(d_422,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_427,Ha_435,Fb_424,Y_425) in
            {685}let tmpk_437: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_433),ec_mul(d_422,X_433),ec_mul(eddsa_scalar(hb_420),X_433),dh(A_434,b_ni))) in
            {686}let xzdh_mac_key_438: bitstring = kdf(usageAuthMACKey,tmpk_437) in
            {687}let v_439: bool = true in
            (
                {688}if v_439 then
                (
                    {689}if (xzdh_mac_428 = kdf(usageAuthMAC,(xzdh_mac_key_438,t_431))) then
                    {690}let k_440: bitstring = kdf(usageSharedSecret,tmpk_437) in
                    {691}let ssid_441: bitstring = kdf(usageSSID,k_440) in
                    {692}out(c, ssid_441);
                    {693}let msg_mac_key_442: bitstring = kdf(usageMACKey,k_440) in
                    {694}let v_443: bool = false in
                    (
                        {695}if v_443 then
                        (
                            {696}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_442,ec_point_as_bits(Z_429)))) then
                            {697}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                            {698}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {699}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {700}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {701}out(c, nidake_bob_correct);
                            {702}let k_nib: bitstring = k_440 in
                            {703}event k_nib_contains(k_nib)
                        )
                        else
                            {704}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_442,ec_point_as_bits(Z_429)))) then
                            {705}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                            {706}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {707}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {708}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {709}out(c, nidake_bob_correct);
                            {710}let k_nib_444: bitstring = k_440 in
                            {711}event k_nib_contains(k_nib_444)
                    )
                    else
                        {712}if (Z_mac_430 = fail-bitstring) then
                        {713}event term_nidake_bob(id_alice_415,id_bob_416,ssid_441,k_440,Z_429);
                        {714}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {715}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {716}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {717}out(c, nidake_bob_correct);
                        {718}let k_nib_445: bitstring = k_440 in
                        {719}event k_nib_contains(k_nib_445)
                )
                else
                    {720}if (xzdh_mac_428 = kdf(usageAuthenticator,(xzdh_mac_key_438,t_431))) then
                    {721}let k_446: bitstring = kdf(usageSharedSecret,tmpk_437) in
                    {722}let ssid_447: bitstring = kdf(usageSSID,k_446) in
                    {723}out(c, ssid_447);
                    {724}let msg_mac_key_448: bitstring = kdf(usageMACKey,k_446) in
                    {725}let v_449: bool = false in
                    (
                        {726}if v_449 then
                        (
                            {727}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_448,ec_point_as_bits(Z_429)))) then
                            {728}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                            {729}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {730}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {731}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {732}out(c, nidake_bob_correct);
                            {733}let k_nib_450: bitstring = k_446 in
                            {734}event k_nib_contains(k_nib_450)
                        )
                        else
                            {735}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_448,ec_point_as_bits(Z_429)))) then
                            {736}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                            {737}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                            {738}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                            {739}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {740}out(c, nidake_bob_correct);
                            {741}let k_nib_451: bitstring = k_446 in
                            {742}event k_nib_contains(k_nib_451)
                    )
                    else
                        {743}if (Z_mac_430 = fail-bitstring) then
                        {744}event term_nidake_bob(id_alice_415,id_bob_416,ssid_447,k_446,Z_429);
                        {745}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {746}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {747}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {748}out(c, nidake_bob_correct);
                        {749}let k_nib_452: bitstring = k_446 in
                        {750}event k_nib_contains(k_nib_452)
            )
            else
                {751}if (xzdh_mac_428 = fail-bitstring) then
                {752}let k_453: bitstring = kdf(usageSharedSecret,tmpk_437) in
                {753}let ssid_454: bitstring = kdf(usageSSID,k_453) in
                {754}out(c, ssid_454);
                {755}let msg_mac_key_455: bitstring = kdf(usageMACKey,k_453) in
                {756}let v_456: bool = false in
                (
                    {757}if v_456 then
                    (
                        {758}if (Z_mac_430 = kdf(usageAuthMAC,(msg_mac_key_455,ec_point_as_bits(Z_429)))) then
                        {759}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                        {760}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {761}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {762}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {763}out(c, nidake_bob_correct);
                        {764}let k_nib_457: bitstring = k_453 in
                        {765}event k_nib_contains(k_nib_457)
                    )
                    else
                        {766}if (Z_mac_430 = kdf(usageAuthenticator,(msg_mac_key_455,ec_point_as_bits(Z_429)))) then
                        {767}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                        {768}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                        {769}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                        {770}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {771}out(c, nidake_bob_correct);
                        {772}let k_nib_458: bitstring = k_453 in
                        {773}event k_nib_contains(k_nib_458)
                )
                else
                    {774}if (Z_mac_430 = fail-bitstring) then
                    {775}event term_nidake_bob(id_alice_415,id_bob_416,ssid_454,k_453,Z_429);
                    {776}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_432))));
                    {777}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_419))));
                    {778}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {779}out(c, nidake_bob_correct);
                    {780}let k_nib_459: bitstring = k_453 in
                    {781}event k_nib_contains(k_nib_459)
        )
        else
            {782}let bob_460: bitstring = (cp2,h2,f2,d2) in
            {783}let (cpb_461: eddsa_signature,hb_462: eddsa_private_key,fb_463: ec_scalar,d_464: ec_scalar) = bob_460 in
            {784}let (Hb_465: ec_point,Fb_466: ec_point) = eddsa_get_msg(cpb_461) in
            {785}let Y_467: ec_point = ec_mul(y_ni,ec_base) in
            {786}let B_468: dh_group_element = dh(dh_generator,b_ni) in
            {787}out(c, (Y_467,B_468));
            {788}in(c, (sigma_469: ring_signature,xzdh_mac_470: bitstring,Z_471: ec_point,Z_mac_472: bitstring));
            {789}let t_473: bitstring = ring_get_msg(sigma_469) in
            {790}let (=cpb_461,cpa_474: eddsa_signature,=Y_467,X_475: ec_point,=B_468,A_476: dh_group_element,=ec_mul(d_464,ec_base),=id_bob_416,=id_alice_415) = t_473 in
            {791}let (Ha_477: ec_point,Fa_478: ec_point) = eddsa_get_msg(cpa_474) in
            {792}let (=Ha_477,=Fa_478) = eddsa_verify(cpa_474,Ha_477) in
            {793}let (=cpb_461,=cpa_474,=Y_467,=X_475,=B_468,=A_476,=ec_mul(d_464,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_469,Ha_477,Fb_466,Y_467) in
            {794}let tmpk_479: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_475),ec_mul(d_464,X_475),ec_mul(eddsa_scalar(hb_462),X_475),dh(A_476,b_ni))) in
            {795}let xzdh_mac_key_480: bitstring = kdf(usageAuthMACKey,tmpk_479) in
            {796}let v_481: bool = true in
            (
                {797}if v_481 then
                (
                    {798}if (xzdh_mac_470 = kdf(usageAuthMAC,(xzdh_mac_key_480,t_473))) then
                    {799}let k_482: bitstring = kdf(usageSharedSecret,tmpk_479) in
                    {800}let ssid_483: bitstring = kdf(usageSSID,k_482) in
                    {801}out(c, ssid_483);
                    {802}let msg_mac_key_484: bitstring = kdf(usageMACKey,k_482) in
                    {803}let v_485: bool = false in
                    (
                        {804}if v_485 then
                        (
                            {805}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_484,ec_point_as_bits(Z_471)))) then
                            {806}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                            {807}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {808}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {809}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {810}out(c, nidake_bob_correct);
                            {811}let k_nib_486: bitstring = k_482 in
                            {812}event k_nib_contains(k_nib_486)
                        )
                        else
                            {813}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_484,ec_point_as_bits(Z_471)))) then
                            {814}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                            {815}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {816}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {817}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {818}out(c, nidake_bob_correct);
                            {819}let k_nib_487: bitstring = k_482 in
                            {820}event k_nib_contains(k_nib_487)
                    )
                    else
                        {821}if (Z_mac_472 = fail-bitstring) then
                        {822}event term_nidake_bob(id_alice_415,id_bob_416,ssid_483,k_482,Z_471);
                        {823}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {824}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {825}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {826}out(c, nidake_bob_correct);
                        {827}let k_nib_488: bitstring = k_482 in
                        {828}event k_nib_contains(k_nib_488)
                )
                else
                    {829}if (xzdh_mac_470 = kdf(usageAuthenticator,(xzdh_mac_key_480,t_473))) then
                    {830}let k_489: bitstring = kdf(usageSharedSecret,tmpk_479) in
                    {831}let ssid_490: bitstring = kdf(usageSSID,k_489) in
                    {832}out(c, ssid_490);
                    {833}let msg_mac_key_491: bitstring = kdf(usageMACKey,k_489) in
                    {834}let v_492: bool = false in
                    (
                        {835}if v_492 then
                        (
                            {836}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_491,ec_point_as_bits(Z_471)))) then
                            {837}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                            {838}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {839}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {840}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {841}out(c, nidake_bob_correct);
                            {842}let k_nib_493: bitstring = k_489 in
                            {843}event k_nib_contains(k_nib_493)
                        )
                        else
                            {844}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_491,ec_point_as_bits(Z_471)))) then
                            {845}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                            {846}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                            {847}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                            {848}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                            {849}out(c, nidake_bob_correct);
                            {850}let k_nib_494: bitstring = k_489 in
                            {851}event k_nib_contains(k_nib_494)
                    )
                    else
                        {852}if (Z_mac_472 = fail-bitstring) then
                        {853}event term_nidake_bob(id_alice_415,id_bob_416,ssid_490,k_489,Z_471);
                        {854}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {855}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {856}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {857}out(c, nidake_bob_correct);
                        {858}let k_nib_495: bitstring = k_489 in
                        {859}event k_nib_contains(k_nib_495)
            )
            else
                {860}if (xzdh_mac_470 = fail-bitstring) then
                {861}let k_496: bitstring = kdf(usageSharedSecret,tmpk_479) in
                {862}let ssid_497: bitstring = kdf(usageSSID,k_496) in
                {863}out(c, ssid_497);
                {864}let msg_mac_key_498: bitstring = kdf(usageMACKey,k_496) in
                {865}let v_499: bool = false in
                (
                    {866}if v_499 then
                    (
                        {867}if (Z_mac_472 = kdf(usageAuthMAC,(msg_mac_key_498,ec_point_as_bits(Z_471)))) then
                        {868}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                        {869}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {870}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {871}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {872}out(c, nidake_bob_correct);
                        {873}let k_nib_500: bitstring = k_496 in
                        {874}event k_nib_contains(k_nib_500)
                    )
                    else
                        {875}if (Z_mac_472 = kdf(usageAuthenticator,(msg_mac_key_498,ec_point_as_bits(Z_471)))) then
                        {876}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                        {877}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                        {878}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                        {879}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {880}out(c, nidake_bob_correct);
                        {881}let k_nib_501: bitstring = k_496 in
                        {882}event k_nib_contains(k_nib_501)
                )
                else
                    {883}if (Z_mac_472 = fail-bitstring) then
                    {884}event term_nidake_bob(id_alice_415,id_bob_416,ssid_497,k_496,Z_471);
                    {885}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_474))));
                    {886}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_461))));
                    {887}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {888}out(c, nidake_bob_correct);
                    {889}let k_nib_502: bitstring = k_496 in
                    {890}event k_nib_contains(k_nib_502)
    )
    else
        {891}let bob_503: bitstring = fail-bitstring in
        {892}let (cpb_504: eddsa_signature,hb_505: eddsa_private_key,fb_506: ec_scalar,d_507: ec_scalar) = bob_503 in
        {893}let (Hb_508: ec_point,Fb_509: ec_point) = eddsa_get_msg(cpb_504) in
        {894}let Y_510: ec_point = ec_mul(y_ni,ec_base) in
        {895}let B_511: dh_group_element = dh(dh_generator,b_ni) in
        {896}out(c, (Y_510,B_511));
        {897}in(c, (sigma_512: ring_signature,xzdh_mac_513: bitstring,Z_514: ec_point,Z_mac_515: bitstring));
        {898}let t_516: bitstring = ring_get_msg(sigma_512) in
        {899}let (=cpb_504,cpa_517: eddsa_signature,=Y_510,X_518: ec_point,=B_511,A_519: dh_group_element,=ec_mul(d_507,ec_base),=id_bob_416,=id_alice_415) = t_516 in
        {900}let (Ha_520: ec_point,Fa_521: ec_point) = eddsa_get_msg(cpa_517) in
        {901}let (=Ha_520,=Fa_521) = eddsa_verify(cpa_517,Ha_520) in
        {902}let (=cpb_504,=cpa_517,=Y_510,=X_518,=B_511,=A_519,=ec_mul(d_507,ec_base),=id_bob_416,=id_alice_415) = ring_verify(sigma_512,Ha_520,Fb_509,Y_510) in
        {903}let tmpk_522: bitstring = kdf(usageTmpKey,(ec_mul(y_ni,X_518),ec_mul(d_507,X_518),ec_mul(eddsa_scalar(hb_505),X_518),dh(A_519,b_ni))) in
        {904}let xzdh_mac_key_523: bitstring = kdf(usageAuthMACKey,tmpk_522) in
        {905}let v_524: bool = true in
        (
            {906}if v_524 then
            (
                {907}if (xzdh_mac_513 = kdf(usageAuthMAC,(xzdh_mac_key_523,t_516))) then
                {908}let k_525: bitstring = kdf(usageSharedSecret,tmpk_522) in
                {909}let ssid_526: bitstring = kdf(usageSSID,k_525) in
                {910}out(c, ssid_526);
                {911}let msg_mac_key_527: bitstring = kdf(usageMACKey,k_525) in
                {912}let v_528: bool = false in
                (
                    {913}if v_528 then
                    (
                        {914}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_527,ec_point_as_bits(Z_514)))) then
                        {915}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                        {916}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {917}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {918}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {919}out(c, nidake_bob_correct);
                        {920}let k_nib_529: bitstring = k_525 in
                        {921}event k_nib_contains(k_nib_529)
                    )
                    else
                        {922}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_527,ec_point_as_bits(Z_514)))) then
                        {923}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                        {924}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {925}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {926}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {927}out(c, nidake_bob_correct);
                        {928}let k_nib_530: bitstring = k_525 in
                        {929}event k_nib_contains(k_nib_530)
                )
                else
                    {930}if (Z_mac_515 = fail-bitstring) then
                    {931}event term_nidake_bob(id_alice_415,id_bob_416,ssid_526,k_525,Z_514);
                    {932}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {933}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {934}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {935}out(c, nidake_bob_correct);
                    {936}let k_nib_531: bitstring = k_525 in
                    {937}event k_nib_contains(k_nib_531)
            )
            else
                {938}if (xzdh_mac_513 = kdf(usageAuthenticator,(xzdh_mac_key_523,t_516))) then
                {939}let k_532: bitstring = kdf(usageSharedSecret,tmpk_522) in
                {940}let ssid_533: bitstring = kdf(usageSSID,k_532) in
                {941}out(c, ssid_533);
                {942}let msg_mac_key_534: bitstring = kdf(usageMACKey,k_532) in
                {943}let v_535: bool = false in
                (
                    {944}if v_535 then
                    (
                        {945}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_534,ec_point_as_bits(Z_514)))) then
                        {946}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                        {947}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {948}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {949}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {950}out(c, nidake_bob_correct);
                        {951}let k_nib_536: bitstring = k_532 in
                        {952}event k_nib_contains(k_nib_536)
                    )
                    else
                        {953}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_534,ec_point_as_bits(Z_514)))) then
                        {954}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                        {955}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                        {956}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                        {957}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                        {958}out(c, nidake_bob_correct);
                        {959}let k_nib_537: bitstring = k_532 in
                        {960}event k_nib_contains(k_nib_537)
                )
                else
                    {961}if (Z_mac_515 = fail-bitstring) then
                    {962}event term_nidake_bob(id_alice_415,id_bob_416,ssid_533,k_532,Z_514);
                    {963}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {964}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {965}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {966}out(c, nidake_bob_correct);
                    {967}let k_nib_538: bitstring = k_532 in
                    {968}event k_nib_contains(k_nib_538)
        )
        else
            {969}if (xzdh_mac_513 = fail-bitstring) then
            {970}let k_539: bitstring = kdf(usageSharedSecret,tmpk_522) in
            {971}let ssid_540: bitstring = kdf(usageSSID,k_539) in
            {972}out(c, ssid_540);
            {973}let msg_mac_key_541: bitstring = kdf(usageMACKey,k_539) in
            {974}let v_542: bool = false in
            (
                {975}if v_542 then
                (
                    {976}if (Z_mac_515 = kdf(usageAuthMAC,(msg_mac_key_541,ec_point_as_bits(Z_514)))) then
                    {977}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                    {978}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {979}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {980}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {981}out(c, nidake_bob_correct);
                    {982}let k_nib_543: bitstring = k_539 in
                    {983}event k_nib_contains(k_nib_543)
                )
                else
                    {984}if (Z_mac_515 = kdf(usageAuthenticator,(msg_mac_key_541,ec_point_as_bits(Z_514)))) then
                    {985}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                    {986}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                    {987}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                    {988}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                    {989}out(c, nidake_bob_correct);
                    {990}let k_nib_544: bitstring = k_539 in
                    {991}event k_nib_contains(k_nib_544)
            )
            else
                {992}if (Z_mac_515 = fail-bitstring) then
                {993}event term_nidake_bob(id_alice_415,id_bob_416,ssid_540,k_539,Z_514);
                {994}in(ac, (=fp_nidake_alice,=kdf(usageFingerprint,eddsa_get_msg(cpa_517))));
                {995}out(ac, (fp_nidake_bob,kdf(usageFingerprint,eddsa_get_msg(cpb_504))));
                {996}if ((id_alice_415 = id1) || (id_alice_415 = id2)) then
                {997}out(c, nidake_bob_correct);
                {998}let k_nib_545: bitstring = k_539 in
                {999}event k_nib_contains(k_nib_545)
) | (
    {1000}!
    {1001}in(ac, x_546: bitstring);
    {1002}out(c, x_546)
) | (
    {1003}phase 1;
    {1004}out(c, (h1,f1,d1,h2,f2,d2))
) | (
    {1005}!
    {1006}in(ec_leak, x_547: ec_scalar);
    {1007}phase 1;
    {1008}out(c, x_547)
)

-- Query not attacker_bitstring_p1(idake_alice_correct[]); not attacker_bitstring_p1(idake_bob_correct[]); not attacker_bitstring_p1(nidake_alice_correct[]); not attacker_bitstring_p1(nidake_bob_correct[])
Completing...
200 rules inserted. The rule base contains 200 rules. 1386 rules in the queue.
400 rules inserted. The rule base contains 398 rules. 1206 rules in the queue.
600 rules inserted. The rule base contains 590 rules. 1067 rules in the queue.
800 rules inserted. The rule base contains 790 rules. 1204 rules in the queue.
1000 rules inserted. The rule base contains 988 rules. 1202 rules in the queue.
1200 rules inserted. The rule base contains 1188 rules. 1202 rules in the queue.
1400 rules inserted. The rule base contains 1388 rules. 1202 rules in the queue.
1600 rules inserted. The rule base contains 1581 rules. 1206 rules in the queue.
1800 rules inserted. The rule base contains 1727 rules. 1326 rules in the queue.
2000 rules inserted. The rule base contains 1923 rules. 1494 rules in the queue.
2200 rules inserted. The rule base contains 2123 rules. 1342 rules in the queue.
2400 rules inserted. The rule base contains 2323 rules. 1190 rules in the queue.
2600 rules inserted. The rule base contains 2523 rules. 1038 rules in the queue.
2800 rules inserted. The rule base contains 2702 rules. 906 rules in the queue.
3000 rules inserted. The rule base contains 2860 rules. 1079 rules in the queue.
3200 rules inserted. The rule base contains 3037 rules. 1988 rules in the queue.
3400 rules inserted. The rule base contains 3219 rules. 2714 rules in the queue.
3600 rules inserted. The rule base contains 3410 rules. 2995 rules in the queue.
3800 rules inserted. The rule base contains 3494 rules. 3273 rules in the queue.
4000 rules inserted. The rule base contains 3600 rules. 3632 rules in the queue.
4200 rules inserted. The rule base contains 3770 rules. 3954 rules in the queue.
4400 rules inserted. The rule base contains 3910 rules. 4192 rules in the queue.
4600 rules inserted. The rule base contains 4056 rules. 4469 rules in the queue.
4800 rules inserted. The rule base contains 4202 rules. 5303 rules in the queue.
5000 rules inserted. The rule base contains 4351 rules. 6420 rules in the queue.
5200 rules inserted. The rule base contains 4513 rules. 7308 rules in the queue.
5400 rules inserted. The rule base contains 4707 rules. 7597 rules in the queue.
5600 rules inserted. The rule base contains 4883 rules. 7998 rules in the queue.
5800 rules inserted. The rule base contains 5065 rules. 8461 rules in the queue.
6000 rules inserted. The rule base contains 5247 rules. 9717 rules in the queue.
6200 rules inserted. The rule base contains 5429 rules. 11092 rules in the queue.
6400 rules inserted. The rule base contains 5625 rules. 11086 rules in the queue.
6600 rules inserted. The rule base contains 5793 rules. 11766 rules in the queue.
6800 rules inserted. The rule base contains 5891 rules. 11723 rules in the queue.
7000 rules inserted. The rule base contains 6006 rules. 13963 rules in the queue.
7200 rules inserted. The rule base contains 6167 rules. 14470 rules in the queue.
7400 rules inserted. The rule base contains 6193 rules. 14356 rules in the queue.
7600 rules inserted. The rule base contains 6393 rules. 14402 rules in the queue.
7800 rules inserted. The rule base contains 6490 rules. 14349 rules in the queue.
8000 rules inserted. The rule base contains 6657 rules. 14418 rules in the queue.
8200 rules inserted. The rule base contains 6719 rules. 14252 rules in the queue.
8400 rules inserted. The rule base contains 6847 rules. 14224 rules in the queue.
8600 rules inserted. The rule base contains 6975 rules. 14304 rules in the queue.
8800 rules inserted. The rule base contains 7040 rules. 14178 rules in the queue.
9000 rules inserted. The rule base contains 7132 rules. 14105 rules in the queue.
9200 rules inserted. The rule base contains 7260 rules. 14180 rules in the queue.
9400 rules inserted. The rule base contains 7460 rules. 14035 rules in the queue.
9600 rules inserted. The rule base contains 7660 rules. 13991 rules in the queue.
9800 rules inserted. The rule base contains 7860 rules. 14175 rules in the queue.
10000 rules inserted. The rule base contains 8024 rules. 14437 rules in the queue.
10200 rules inserted. The rule base contains 8152 rules. 14990 rules in the queue.
10400 rules inserted. The rule base contains 8316 rules. 15646 rules in the queue.
10600 rules inserted. The rule base contains 8462 rules. 16393 rules in the queue.
10800 rules inserted. The rule base contains 8644 rules. 16765 rules in the queue.
11000 rules inserted. The rule base contains 8844 rules. 16709 rules in the queue.
11200 rules inserted. The rule base contains 9044 rules. 16899 rules in the queue.
11400 rules inserted. The rule base contains 9218 rules. 16837 rules in the queue.
11600 rules inserted. The rule base contains 9372 rules. 17407 rules in the queue.
11800 rules inserted. The rule base contains 9500 rules. 17996 rules in the queue.
12000 rules inserted. The rule base contains 9664 rules. 18833 rules in the queue.
12200 rules inserted. The rule base contains 9828 rules. 19509 rules in the queue.
12400 rules inserted. The rule base contains 9829 rules. 19468 rules in the queue.
12600 rules inserted. The rule base contains 10029 rules. 19502 rules in the queue.
12800 rules inserted. The rule base contains 10126 rules. 19441 rules in the queue.
13000 rules inserted. The rule base contains 10293 rules. 19498 rules in the queue.
13200 rules inserted. The rule base contains 10391 rules. 19411 rules in the queue.
13400 rules inserted. The rule base contains 10555 rules. 19522 rules in the queue.
13600 rules inserted. The rule base contains 10656 rules. 19434 rules in the queue.
13800 rules inserted. The rule base contains 10784 rules. 19586 rules in the queue.
14000 rules inserted. The rule base contains 10984 rules. 19491 rules in the queue.
14200 rules inserted. The rule base contains 11184 rules. 19447 rules in the queue.
14400 rules inserted. The rule base contains 11384 rules. 19619 rules in the queue.
14600 rules inserted. The rule base contains 11584 rules. 19981 rules in the queue.
14800 rules inserted. The rule base contains 11748 rules. 20714 rules in the queue.
15000 rules inserted. The rule base contains 11912 rules. 21573 rules in the queue.
15200 rules inserted. The rule base contains 12112 rules. 22409 rules in the queue.
15400 rules inserted. The rule base contains 12312 rules. 22353 rules in the queue.
15600 rules inserted. The rule base contains 12512 rules. 22261 rules in the queue.
15800 rules inserted. The rule base contains 12712 rules. 22349 rules in the queue.
16000 rules inserted. The rule base contains 12909 rules. 23284 rules in the queue.
16200 rules inserted. The rule base contains 13040 rules. 23808 rules in the queue.
16400 rules inserted. The rule base contains 13240 rules. 24825 rules in the queue.
16600 rules inserted. The rule base contains 13402 rules. 25239 rules in the queue.
16800 rules inserted. The rule base contains 13550 rules. 25459 rules in the queue.
17000 rules inserted. The rule base contains 13726 rules. 25597 rules in the queue.
17200 rules inserted. The rule base contains 13874 rules. 25587 rules in the queue.
17400 rules inserted. The rule base contains 14062 rules. 25889 rules in the queue.
17600 rules inserted. The rule base contains 14242 rules. 25705 rules in the queue.
17800 rules inserted. The rule base contains 14334 rules. 25735 rules in the queue.
18000 rules inserted. The rule base contains 14534 rules. 26305 rules in the queue.
18200 rules inserted. The rule base contains 14722 rules. 26643 rules in the queue.
18400 rules inserted. The rule base contains 14900 rules. 27261 rules in the queue.
18600 rules inserted. The rule base contains 15052 rules. 27811 rules in the queue.
18800 rules inserted. The rule base contains 15108 rules. 27664 rules in the queue.
19000 rules inserted. The rule base contains 15227 rules. 27491 rules in the queue.
19200 rules inserted. The rule base contains 15367 rules. 27339 rules in the queue.
19400 rules inserted. The rule base contains 15508 rules. 27167 rules in the queue.
19600 rules inserted. The rule base contains 15651 rules. 27341 rules in the queue.
19800 rules inserted. The rule base contains 15821 rules. 27511 rules in the queue.
20000 rules inserted. The rule base contains 15961 rules. 27331 rules in the queue.
20200 rules inserted. The rule base contains 16149 rules. 27683 rules in the queue.
20400 rules inserted. The rule base contains 16321 rules. 27691 rules in the queue.
20600 rules inserted. The rule base contains 16457 rules. 27550 rules in the queue.
20800 rules inserted. The rule base contains 16480 rules. 27424 rules in the queue.
21000 rules inserted. The rule base contains 16237 rules. 27397 rules in the queue.
21200 rules inserted. The rule base contains 16205 rules. 27277 rules in the queue.
21400 rules inserted. The rule base contains 16207 rules. 27165 rules in the queue.
21600 rules inserted. The rule base contains 16242 rules. 27044 rules in the queue.
21800 rules inserted. The rule base contains 16289 rules. 26895 rules in the queue.
22000 rules inserted. The rule base contains 16275 rules. 26789 rules in the queue.
22200 rules inserted. The rule base contains 16310 rules. 26668 rules in the queue.
22400 rules inserted. The rule base contains 16510 rules. 26468 rules in the queue.
22600 rules inserted. The rule base contains 16371 rules. 26393 rules in the queue.
22800 rules inserted. The rule base contains 16204 rules. 26326 rules in the queue.
23000 rules inserted. The rule base contains 16383 rules. 26133 rules in the queue.
23200 rules inserted. The rule base contains 16026 rules. 26133 rules in the queue.
23400 rules inserted. The rule base contains 16036 rules. 25998 rules in the queue.
23600 rules inserted. The rule base contains 16236 rules. 25798 rules in the queue.
23800 rules inserted. The rule base contains 16436 rules. 25598 rules in the queue.
24000 rules inserted. The rule base contains 16636 rules. 25398 rules in the queue.
24200 rules inserted. The rule base contains 16836 rules. 25198 rules in the queue.
24400 rules inserted. The rule base contains 17036 rules. 25670 rules in the queue.
24600 rules inserted. The rule base contains 17236 rules. 25470 rules in the queue.
24800 rules inserted. The rule base contains 17436 rules. 25270 rules in the queue.
25000 rules inserted. The rule base contains 17636 rules. 25082 rules in the queue.
25200 rules inserted. The rule base contains 17836 rules. 24882 rules in the queue.
25400 rules inserted. The rule base contains 18036 rules. 24682 rules in the queue.
25600 rules inserted. The rule base contains 18236 rules. 25427 rules in the queue.
25800 rules inserted. The rule base contains 18436 rules. 26148 rules in the queue.
26000 rules inserted. The rule base contains 18636 rules. 25948 rules in the queue.
26200 rules inserted. The rule base contains 18836 rules. 25748 rules in the queue.
26400 rules inserted. The rule base contains 19036 rules. 25554 rules in the queue.
26600 rules inserted. The rule base contains 19236 rules. 25354 rules in the queue.
26800 rules inserted. The rule base contains 19436 rules. 25479 rules in the queue.
27000 rules inserted. The rule base contains 19263 rules. 25747 rules in the queue.
27200 rules inserted. The rule base contains 19460 rules. 25550 rules in the queue.
27400 rules inserted. The rule base contains 19264 rules. 25487 rules in the queue.
27600 rules inserted. The rule base contains 19092 rules. 25422 rules in the queue.
27800 rules inserted. The rule base contains 19292 rules. 25222 rules in the queue.
28000 rules inserted. The rule base contains 19492 rules. 25022 rules in the queue.
28200 rules inserted. The rule base contains 19692 rules. 24822 rules in the queue.
28400 rules inserted. The rule base contains 19892 rules. 24622 rules in the queue.
28600 rules inserted. The rule base contains 20092 rules. 24987 rules in the queue.
28800 rules inserted. The rule base contains 20292 rules. 24894 rules in the queue.
29000 rules inserted. The rule base contains 20492 rules. 24694 rules in the queue.
29200 rules inserted. The rule base contains 20692 rules. 24506 rules in the queue.
29400 rules inserted. The rule base contains 20892 rules. 24306 rules in the queue.
29600 rules inserted. The rule base contains 21092 rules. 24106 rules in the queue.
29800 rules inserted. The rule base contains 21292 rules. 24501 rules in the queue.
30000 rules inserted. The rule base contains 21492 rules. 25301 rules in the queue.
30200 rules inserted. The rule base contains 21692 rules. 25372 rules in the queue.
30400 rules inserted. The rule base contains 21892 rules. 25172 rules in the queue.
30600 rules inserted. The rule base contains 22092 rules. 24978 rules in the queue.
30800 rules inserted. The rule base contains 22292 rules. 24778 rules in the queue.
31000 rules inserted. The rule base contains 22492 rules. 24578 rules in the queue.
31200 rules inserted. The rule base contains 22692 rules. 25101 rules in the queue.
31400 rules inserted. The rule base contains 22643 rules. 24987 rules in the queue.
31600 rules inserted. The rule base contains 22585 rules. 24877 rules in the queue.
31800 rules inserted. The rule base contains 22548 rules. 24772 rules in the queue.
32000 rules inserted. The rule base contains 22293 rules. 24737 rules in the queue.
32200 rules inserted. The rule base contains 22448 rules. 24576 rules in the queue.
32400 rules inserted. The rule base contains 22369 rules. 24469 rules in the queue.
32600 rules inserted. The rule base contains 22338 rules. 24380 rules in the queue.
32800 rules inserted. The rule base contains 22535 rules. 24181 rules in the queue.
33000 rules inserted. The rule base contains 22159 rules. 24181 rules in the queue.
33200 rules inserted. The rule base contains 22232 rules. 24026 rules in the queue.
33400 rules inserted. The rule base contains 22147 rules. 23921 rules in the queue.
33600 rules inserted. The rule base contains 21864 rules. 23890 rules in the queue.
33800 rules inserted. The rule base contains 22064 rules. 23690 rules in the queue.
34000 rules inserted. The rule base contains 22264 rules. 23490 rules in the queue.
34200 rules inserted. The rule base contains 22464 rules. 23290 rules in the queue.
34400 rules inserted. The rule base contains 22664 rules. 23090 rules in the queue.
34600 rules inserted. The rule base contains 22864 rules. 23562 rules in the queue.
34800 rules inserted. The rule base contains 23064 rules. 23362 rules in the queue.
35000 rules inserted. The rule base contains 23264 rules. 23162 rules in the queue.
35200 rules inserted. The rule base contains 23464 rules. 22974 rules in the queue.
35400 rules inserted. The rule base contains 23664 rules. 22774 rules in the queue.
35600 rules inserted. The rule base contains 23864 rules. 22574 rules in the queue.
35800 rules inserted. The rule base contains 24064 rules. 23159 rules in the queue.
36000 rules inserted. The rule base contains 24264 rules. 23959 rules in the queue.
36200 rules inserted. The rule base contains 24464 rules. 23834 rules in the queue.
36400 rules inserted. The rule base contains 24664 rules. 23634 rules in the queue.
36600 rules inserted. The rule base contains 24864 rules. 23434 rules in the queue.
36800 rules inserted. The rule base contains 25064 rules. 23234 rules in the queue.
37000 rules inserted. The rule base contains 25264 rules. 23559 rules in the queue.
37200 rules inserted. The rule base contains 25088 rules. 23630 rules in the queue.
37400 rules inserted. The rule base contains 25288 rules. 23430 rules in the queue.
37600 rules inserted. The rule base contains 24957 rules. 23407 rules in the queue.
37800 rules inserted. The rule base contains 24920 rules. 23294 rules in the queue.
38000 rules inserted. The rule base contains 25120 rules. 23094 rules in the queue.
38200 rules inserted. The rule base contains 25320 rules. 22894 rules in the queue.
38400 rules inserted. The rule base contains 25520 rules. 22694 rules in the queue.
38600 rules inserted. The rule base contains 25720 rules. 22659 rules in the queue.
38800 rules inserted. The rule base contains 25920 rules. 22966 rules in the queue.
39000 rules inserted. The rule base contains 26120 rules. 22766 rules in the queue.
39200 rules inserted. The rule base contains 26320 rules. 22578 rules in the queue.
39400 rules inserted. The rule base contains 26520 rules. 22378 rules in the queue.
39600 rules inserted. The rule base contains 26720 rules. 22178 rules in the queue.
39800 rules inserted. The rule base contains 26920 rules. 22173 rules in the queue.
40000 rules inserted. The rule base contains 27120 rules. 22973 rules in the queue.
40200 rules inserted. The rule base contains 27320 rules. 23438 rules in the queue.
40400 rules inserted. The rule base contains 27520 rules. 23238 rules in the queue.
40600 rules inserted. The rule base contains 27720 rules. 23038 rules in the queue.
40800 rules inserted. The rule base contains 27920 rules. 22838 rules in the queue.
41000 rules inserted. The rule base contains 28120 rules. 22638 rules in the queue.
41200 rules inserted. The rule base contains 28276 rules. 23238 rules in the queue.
41400 rules inserted. The rule base contains 28357 rules. 23380 rules in the queue.
41600 rules inserted. The rule base contains 28557 rules. 23180 rules in the queue.
41800 rules inserted. The rule base contains 28757 rules. 22980 rules in the queue.
42000 rules inserted. The rule base contains 28957 rules. 22780 rules in the queue.
42200 rules inserted. The rule base contains 29157 rules. 22580 rules in the queue.
42400 rules inserted. The rule base contains 29357 rules. 22380 rules in the queue.
42600 rules inserted. The rule base contains 29557 rules. 22180 rules in the queue.
42800 rules inserted. The rule base contains 29744 rules. 23381 rules in the queue.
43000 rules inserted. The rule base contains 29893 rules. 23426 rules in the queue.
43200 rules inserted. The rule base contains 30093 rules. 23411 rules in the queue.
43400 rules inserted. The rule base contains 30286 rules. 23319 rules in the queue.
43600 rules inserted. The rule base contains 30457 rules. 23330 rules in the queue.
43800 rules inserted. The rule base contains 30606 rules. 23139 rules in the queue.
44000 rules inserted. The rule base contains 30749 rules. 23138 rules in the queue.
44200 rules inserted. The rule base contains 30926 rules. 22975 rules in the queue.
44400 rules inserted. The rule base contains 31113 rules. 23002 rules in the queue.
44600 rules inserted. The rule base contains 31251 rules. 22802 rules in the queue.
44800 rules inserted. The rule base contains 31378 rules. 23040 rules in the queue.
45000 rules inserted. The rule base contains 31493 rules. 23130 rules in the queue.
45200 rules inserted. The rule base contains 31673 rules. 23625 rules in the queue.
45400 rules inserted. The rule base contains 31848 rules. 23490 rules in the queue.
45600 rules inserted. The rule base contains 32042 rules. 23292 rules in the queue.
45800 rules inserted. The rule base contains 32180 rules. 23096 rules in the queue.
46000 rules inserted. The rule base contains 32380 rules. 22896 rules in the queue.
46200 rules inserted. The rule base contains 32580 rules. 22696 rules in the queue.
46400 rules inserted. The rule base contains 32780 rules. 22496 rules in the queue.
46600 rules inserted. The rule base contains 32980 rules. 22296 rules in the queue.
46800 rules inserted. The rule base contains 33180 rules. 22096 rules in the queue.
47000 rules inserted. The rule base contains 33380 rules. 21896 rules in the queue.
47200 rules inserted. The rule base contains 33580 rules. 21696 rules in the queue.
47400 rules inserted. The rule base contains 33752 rules. 21516 rules in the queue.
47600 rules inserted. The rule base contains 33779 rules. 21375 rules in the queue.
47800 rules inserted. The rule base contains 33806 rules. 21238 rules in the queue.
48000 rules inserted. The rule base contains 33853 rules. 21101 rules in the queue.
48200 rules inserted. The rule base contains 33910 rules. 20964 rules in the queue.
48400 rules inserted. The rule base contains 33910 rules. 20782 rules in the queue.
48600 rules inserted. The rule base contains 33910 rules. 20700 rules in the queue.
48800 rules inserted. The rule base contains 33610 rules. 20650 rules in the queue.
49000 rules inserted. The rule base contains 33320 rules. 20650 rules in the queue.
49200 rules inserted. The rule base contains 32930 rules. 20650 rules in the queue.
49400 rules inserted. The rule base contains 32796 rules. 20564 rules in the queue.
49600 rules inserted. The rule base contains 32996 rules. 20364 rules in the queue.
49800 rules inserted. The rule base contains 33196 rules. 20164 rules in the queue.
50000 rules inserted. The rule base contains 33396 rules. 19964 rules in the queue.
50200 rules inserted. The rule base contains 33596 rules. 19764 rules in the queue.
50400 rules inserted. The rule base contains 33796 rules. 19564 rules in the queue.
50600 rules inserted. The rule base contains 33798 rules. 19430 rules in the queue.
50800 rules inserted. The rule base contains 33398 rules. 19430 rules in the queue.
51000 rules inserted. The rule base contains 32998 rules. 19430 rules in the queue.
51200 rules inserted. The rule base contains 32610 rules. 19426 rules in the queue.
51400 rules inserted. The rule base contains 32210 rules. 19426 rules in the queue.
51600 rules inserted. The rule base contains 31930 rules. 19426 rules in the queue.
51800 rules inserted. The rule base contains 31530 rules. 19426 rules in the queue.
52000 rules inserted. The rule base contains 31414 rules. 19294 rules in the queue.
52200 rules inserted. The rule base contains 31414 rules. 19220 rules in the queue.
52400 rules inserted. The rule base contains 31130 rules. 19162 rules in the queue.
52600 rules inserted. The rule base contains 30832 rules. 19162 rules in the queue.
52800 rules inserted. The rule base contains 30450 rules. 19162 rules in the queue.
53000 rules inserted. The rule base contains 30292 rules. 19084 rules in the queue.
53200 rules inserted. The rule base contains 30492 rules. 18884 rules in the queue.
53400 rules inserted. The rule base contains 30692 rules. 18684 rules in the queue.
53600 rules inserted. The rule base contains 30892 rules. 18484 rules in the queue.
53800 rules inserted. The rule base contains 31092 rules. 18284 rules in the queue.
54000 rules inserted. The rule base contains 31292 rules. 18084 rules in the queue.
54200 rules inserted. The rule base contains 31318 rules. 17942 rules in the queue.
54400 rules inserted. The rule base contains 30918 rules. 17942 rules in the queue.
54600 rules inserted. The rule base contains 30518 rules. 17942 rules in the queue.
54800 rules inserted. The rule base contains 30118 rules. 17942 rules in the queue.
55000 rules inserted. The rule base contains 29730 rules. 17938 rules in the queue.
55200 rules inserted. The rule base contains 29450 rules. 17938 rules in the queue.
55400 rules inserted. The rule base contains 29050 rules. 17938 rules in the queue.
55600 rules inserted. The rule base contains 28938 rules. 17887 rules in the queue.
55800 rules inserted. The rule base contains 28980 rules. 17841 rules in the queue.
56000 rules inserted. The rule base contains 29011 rules. 17810 rules in the queue.
56200 rules inserted. The rule base contains 28673 rules. 17810 rules in the queue.
56400 rules inserted. The rule base contains 28393 rules. 17810 rules in the queue.
56600 rules inserted. The rule base contains 27993 rules. 17810 rules in the queue.
56800 rules inserted. The rule base contains 27916 rules. 17705 rules in the queue.
57000 rules inserted. The rule base contains 28116 rules. 17505 rules in the queue.
57200 rules inserted. The rule base contains 28316 rules. 17305 rules in the queue.
57400 rules inserted. The rule base contains 28516 rules. 17105 rules in the queue.
57600 rules inserted. The rule base contains 28716 rules. 16905 rules in the queue.
57800 rules inserted. The rule base contains 28916 rules. 16705 rules in the queue.
58000 rules inserted. The rule base contains 28861 rules. 16590 rules in the queue.
58200 rules inserted. The rule base contains 28461 rules. 16590 rules in the queue.
58400 rules inserted. The rule base contains 28061 rules. 16590 rules in the queue.
58600 rules inserted. The rule base contains 27661 rules. 16590 rules in the queue.
58800 rules inserted. The rule base contains 27261 rules. 16590 rules in the queue.
59000 rules inserted. The rule base contains 26981 rules. 16590 rules in the queue.
59200 rules inserted. The rule base contains 26581 rules. 16590 rules in the queue.
59400 rules inserted. The rule base contains 26453 rules. 16590 rules in the queue.
59600 rules inserted. The rule base contains 26053 rules. 16590 rules in the queue.
59800 rules inserted. The rule base contains 25773 rules. 16590 rules in the queue.
60000 rules inserted. The rule base contains 25373 rules. 16590 rules in the queue.
60200 rules inserted. The rule base contains 25476 rules. 16425 rules in the queue.
60400 rules inserted. The rule base contains 25676 rules. 16225 rules in the queue.
60600 rules inserted. The rule base contains 25876 rules. 16025 rules in the queue.
60800 rules inserted. The rule base contains 26076 rules. 15825 rules in the queue.
61000 rules inserted. The rule base contains 26276 rules. 15625 rules in the queue.
61200 rules inserted. The rule base contains 26476 rules. 15425 rules in the queue.
61400 rules inserted. The rule base contains 26241 rules. 15370 rules in the queue.
61600 rules inserted. The rule base contains 25841 rules. 15370 rules in the queue.
61800 rules inserted. The rule base contains 25441 rules. 15370 rules in the queue.
62000 rules inserted. The rule base contains 25041 rules. 15370 rules in the queue.
62200 rules inserted. The rule base contains 24686 rules. 15370 rules in the queue.
62400 rules inserted. The rule base contains 24361 rules. 15370 rules in the queue.
62600 rules inserted. The rule base contains 24029 rules. 15356 rules in the queue.
62800 rules inserted. The rule base contains 24205 rules. 15337 rules in the queue.
63000 rules inserted. The rule base contains 24377 rules. 15308 rules in the queue.
63200 rules inserted. The rule base contains 24533 rules. 15427 rules in the queue.
63400 rules inserted. The rule base contains 24658 rules. 15817 rules in the queue.
63600 rules inserted. The rule base contains 24792 rules. 16169 rules in the queue.
63800 rules inserted. The rule base contains 24985 rules. 16887 rules in the queue.
64000 rules inserted. The rule base contains 25170 rules. 17577 rules in the queue.
64200 rules inserted. The rule base contains 25333 rules. 18537 rules in the queue.
64400 rules inserted. The rule base contains 25491 rules. 18795 rules in the queue.
64600 rules inserted. The rule base contains 25520 rules. 18779 rules in the queue.
64800 rules inserted. The rule base contains 25520 rules. 18427 rules in the queue.
65000 rules inserted. The rule base contains 25532 rules. 18167 rules in the queue.
65200 rules inserted. The rule base contains 25532 rules. 17791 rules in the queue.
65400 rules inserted. The rule base contains 25553 rules. 17476 rules in the queue.
65600 rules inserted. The rule base contains 25753 rules. 17276 rules in the queue.
65800 rules inserted. The rule base contains 25953 rules. 17076 rules in the queue.
66000 rules inserted. The rule base contains 26153 rules. 16876 rules in the queue.
66200 rules inserted. The rule base contains 25523 rules. 16505 rules in the queue.
66400 rules inserted. The rule base contains 25722 rules. 16307 rules in the queue.
66600 rules inserted. The rule base contains 25919 rules. 16110 rules in the queue.
66800 rules inserted. The rule base contains 26118 rules. 15911 rules in the queue.
67000 rules inserted. The rule base contains 26317 rules. 15712 rules in the queue.
67200 rules inserted. The rule base contains 26449 rules. 15512 rules in the queue.
67400 rules inserted. The rule base contains 26449 rules. 15312 rules in the queue.
67600 rules inserted. The rule base contains 26449 rules. 15112 rules in the queue.
67800 rules inserted. The rule base contains 26449 rules. 14920 rules in the queue.
68000 rules inserted. The rule base contains 26449 rules. 14920 rules in the queue.
68200 rules inserted. The rule base contains 26449 rules. 14920 rules in the queue.
68400 rules inserted. The rule base contains 26449 rules. 14920 rules in the queue.
68600 rules inserted. The rule base contains 26449 rules. 14773 rules in the queue.
68800 rules inserted. The rule base contains 26449 rules. 14573 rules in the queue.
69000 rules inserted. The rule base contains 26449 rules. 14373 rules in the queue.
69200 rules inserted. The rule base contains 26536 rules. 14173 rules in the queue.
69400 rules inserted. The rule base contains 26735 rules. 13974 rules in the queue.
69600 rules inserted. The rule base contains 26845 rules. 13774 rules in the queue.
69800 rules inserted. The rule base contains 26845 rules. 13574 rules in the queue.
70000 rules inserted. The rule base contains 26845 rules. 13374 rules in the queue.
70200 rules inserted. The rule base contains 26845 rules. 13204 rules in the queue.
70400 rules inserted. The rule base contains 26845 rules. 13204 rules in the queue.
70600 rules inserted. The rule base contains 26845 rules. 13204 rules in the queue.
70800 rules inserted. The rule base contains 26845 rules. 13204 rules in the queue.
71000 rules inserted. The rule base contains 26845 rules. 13035 rules in the queue.
71200 rules inserted. The rule base contains 26845 rules. 12835 rules in the queue.
71400 rules inserted. The rule base contains 26845 rules. 12635 rules in the queue.
71600 rules inserted. The rule base contains 26380 rules. 12313 rules in the queue.
71800 rules inserted. The rule base contains 26580 rules. 12113 rules in the queue.
72000 rules inserted. The rule base contains 26649 rules. 12044 rules in the queue.
72200 rules inserted. The rule base contains 26649 rules. 12044 rules in the queue.
72400 rules inserted. The rule base contains 26649 rules. 12044 rules in the queue.
72600 rules inserted. The rule base contains 26720 rules. 11973 rules in the queue.
72800 rules inserted. The rule base contains 26781 rules. 11912 rules in the queue.
73000 rules inserted. The rule base contains 26781 rules. 11912 rules in the queue.
73200 rules inserted. The rule base contains 26781 rules. 11912 rules in the queue.
73400 rules inserted. The rule base contains 26773 rules. 11892 rules in the queue.
73600 rules inserted. The rule base contains 26777 rules. 11872 rules in the queue.
73800 rules inserted. The rule base contains 26883 rules. 11733 rules in the queue.
74000 rules inserted. The rule base contains 26829 rules. 11447 rules in the queue.
74200 rules inserted. The rule base contains 26829 rules. 11113 rules in the queue.
74400 rules inserted. The rule base contains 26829 rules. 10779 rules in the queue.
74600 rules inserted. The rule base contains 26829 rules. 10429 rules in the queue.
74800 rules inserted. The rule base contains 27022 rules. 10496 rules in the queue.
75000 rules inserted. The rule base contains 27183 rules. 10582 rules in the queue.
75200 rules inserted. The rule base contains 27272 rules. 10612 rules in the queue.
75400 rules inserted. The rule base contains 27433 rules. 10698 rules in the queue.
75600 rules inserted. The rule base contains 27530 rules. 10473 rules in the queue.
75800 rules inserted. The rule base contains 27685 rules. 10903 rules in the queue.
76000 rules inserted. The rule base contains 27810 rules. 10933 rules in the queue.
76200 rules inserted. The rule base contains 27990 rules. 11488 rules in the queue.
76400 rules inserted. The rule base contains 28115 rules. 11367 rules in the queue.
76600 rules inserted. The rule base contains 28245 rules. 11212 rules in the queue.
76800 rules inserted. The rule base contains 28341 rules. 11428 rules in the queue.
77000 rules inserted. The rule base contains 28396 rules. 11305 rules in the queue.
77200 rules inserted. The rule base contains 28466 rules. 11515 rules in the queue.
77400 rules inserted. The rule base contains 28502 rules. 11369 rules in the queue.
77600 rules inserted. The rule base contains 28598 rules. 11213 rules in the queue.
77800 rules inserted. The rule base contains 28594 rules. 11097 rules in the queue.
78000 rules inserted. The rule base contains 28794 rules. 10897 rules in the queue.
78200 rules inserted. The rule base contains 28994 rules. 10697 rules in the queue.
78400 rules inserted. The rule base contains 29193 rules. 10497 rules in the queue.
78600 rules inserted. The rule base contains 29393 rules. 10297 rules in the queue.
78800 rules inserted. The rule base contains 29593 rules. 10097 rules in the queue.
79000 rules inserted. The rule base contains 29793 rules. 9897 rules in the queue.
79200 rules inserted. The rule base contains 29992 rules. 9697 rules in the queue.
79400 rules inserted. The rule base contains 30192 rules. 9497 rules in the queue.
79600 rules inserted. The rule base contains 30392 rules. 9297 rules in the queue.
79800 rules inserted. The rule base contains 30591 rules. 9097 rules in the queue.
80000 rules inserted. The rule base contains 30791 rules. 8897 rules in the queue.
80200 rules inserted. The rule base contains 30991 rules. 8697 rules in the queue.
80400 rules inserted. The rule base contains 31190 rules. 8497 rules in the queue.
80600 rules inserted. The rule base contains 31390 rules. 8297 rules in the queue.
80800 rules inserted. The rule base contains 31590 rules. 8097 rules in the queue.
81000 rules inserted. The rule base contains 31790 rules. 7897 rules in the queue.
81200 rules inserted. The rule base contains 31989 rules. 7697 rules in the queue.
81400 rules inserted. The rule base contains 32189 rules. 7497 rules in the queue.
81600 rules inserted. The rule base contains 32389 rules. 7297 rules in the queue.
81800 rules inserted. The rule base contains 32514 rules. 7099 rules in the queue.
82000 rules inserted. The rule base contains 32714 rules. 6899 rules in the queue.
82200 rules inserted. The rule base contains 32914 rules. 6699 rules in the queue.
82400 rules inserted. The rule base contains 33113 rules. 6499 rules in the queue.
82600 rules inserted. The rule base contains 33313 rules. 6299 rules in the queue.
82800 rules inserted. The rule base contains 33513 rules. 6099 rules in the queue.
83000 rules inserted. The rule base contains 33713 rules. 5899 rules in the queue.
83200 rules inserted. The rule base contains 33774 rules. 5985 rules in the queue.
83400 rules inserted. The rule base contains 33798 rules. 5959 rules in the queue.
83600 rules inserted. The rule base contains 33831 rules. 5814 rules in the queue.
83800 rules inserted. The rule base contains 33864 rules. 5705 rules in the queue.
84000 rules inserted. The rule base contains 33886 rules. 5475 rules in the queue.
84200 rules inserted. The rule base contains 33886 rules. 5127 rules in the queue.
84400 rules inserted. The rule base contains 33892 rules. 4825 rules in the queue.
84600 rules inserted. The rule base contains 33898 rules. 4471 rules in the queue.
84800 rules inserted. The rule base contains 33898 rules. 4097 rules in the queue.
85000 rules inserted. The rule base contains 34026 rules. 3891 rules in the queue.
85200 rules inserted. The rule base contains 34226 rules. 3691 rules in the queue.
85400 rules inserted. The rule base contains 34426 rules. 3491 rules in the queue.
85600 rules inserted. The rule base contains 34586 rules. 3320 rules in the queue.
85800 rules inserted. The rule base contains 34710 rules. 3165 rules in the queue.
86000 rules inserted. The rule base contains 34650 rules. 3030 rules in the queue.
86200 rules inserted. The rule base contains 34590 rules. 2897 rules in the queue.
86400 rules inserted. The rule base contains 34530 rules. 2762 rules in the queue.
86600 rules inserted. The rule base contains 34470 rules. 2627 rules in the queue.
86800 rules inserted. The rule base contains 34670 rules. 2427 rules in the queue.
87000 rules inserted. The rule base contains 33843 rules. 2235 rules in the queue.
87200 rules inserted. The rule base contains 33847 rules. 2178 rules in the queue.
87400 rules inserted. The rule base contains 33960 rules. 2103 rules in the queue.
87600 rules inserted. The rule base contains 34160 rules. 1903 rules in the queue.
87800 rules inserted. The rule base contains 34357 rules. 1703 rules in the queue.
88000 rules inserted. The rule base contains 34365 rules. 1568 rules in the queue.
88200 rules inserted. The rule base contains 34396 rules. 1433 rules in the queue.
88400 rules inserted. The rule base contains 34505 rules. 1298 rules in the queue.
88600 rules inserted. The rule base contains 34550 rules. 1227 rules in the queue.
88800 rules inserted. The rule base contains 34585 rules. 1072 rules in the queue.
89000 rules inserted. The rule base contains 34621 rules. 1071 rules in the queue.
89200 rules inserted. The rule base contains 34740 rules. 967 rules in the queue.
89400 rules inserted. The rule base contains 34940 rules. 767 rules in the queue.
89600 rules inserted. The rule base contains 35140 rules. 567 rules in the queue.
89800 rules inserted. The rule base contains 35179 rules. 402 rules in the queue.
90000 rules inserted. The rule base contains 35184 rules. 404 rules in the queue.
90200 rules inserted. The rule base contains 35170 rules. 381 rules in the queue.
90400 rules inserted. The rule base contains 35183 rules. 374 rules in the queue.
90600 rules inserted. The rule base contains 35132 rules. 346 rules in the queue.
90800 rules inserted. The rule base contains 35160 rules. 334 rules in the queue.
91000 rules inserted. The rule base contains 35225 rules. 337 rules in the queue.
91200 rules inserted. The rule base contains 35204 rules. 324 rules in the queue.
91400 rules inserted. The rule base contains 35292 rules. 337 rules in the queue.
91600 rules inserted. The rule base contains 35371 rules. 297 rules in the queue.
91800 rules inserted. The rule base contains 35414 rules. 234 rules in the queue.
92000 rules inserted. The rule base contains 35369 rules. 172 rules in the queue.
92200 rules inserted. The rule base contains 35297 rules. 76 rules in the queue.
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(a_i[!1 = v_112501])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(a_i[!1 = v_112501])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(a_ni[!1 = v_112500])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(a_ni[!1 = v_112500])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(b_i[!1 = v_112499])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(b_i[!1 = v_112499])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(b_ni[!1 = v_112498])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(b_ni[!1 = v_112498])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(x_i[!1 = v_112497])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(x_ni[!1 = v_112496])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(y_i[!1 = v_112495])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(y_ni[!1 = v_112494])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(z_i[!1 = v_112493])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(z_ni[!1 = v_112492])
Starting query not attacker_bitstring_p1(idake_alice_correct[])
goal reachable: attacker_bitstring_p1(idake_alice_correct[])
Abbreviations:
x_197130106 = x_i[!1 = @sid_197129986]
y_197130107 = y_i[!1 = @sid_197129969]
b_197130108 = b_i[!1 = @sid_197129969]
a_197130109 = a_i[!1 = @sid_197129986]
z = z_i[!1 = @sid_197129969]
x_197130110 = x_i[!1 = @sid_197129885]
a_197130111 = a_i[!1 = @sid_197129885]
y_197130112 = y_i[!1 = @sid_197130011]
x_197130113 = x_i[!1 = @sid_197130006]
b_197130114 = b_i[!1 = @sid_197130011]
a_197130115 = a_i[!1 = @sid_197130006]
x_197130116 = x_i[!1 = @sid_197130101]
y_197130117 = y_i[!1 = @sid_197130083]
b_197130118 = b_i[!1 = @sid_197130083]
a_197130119 = a_i[!1 = @sid_197130101]
z_197130120 = z_i[!1 = @sid_197130083]
x_197130121 = x_i[!1 = @sid_197129819]
a_197130122 = a_i[!1 = @sid_197129819]

1. The attacker initially knows id1[].
attacker_identity(id1[]).

2. By 1, the attacker may know id1[].
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id1[],id1[]).
attacker_bitstring((id1[],id1[])).

3. The attacker has some term id_alice_197129783.
attacker_identity(id_alice_197129783).

4. By 3, the attacker may know id_alice_197129783.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197129783,id1[]).
attacker_bitstring((id_alice_197129783,id1[])).

5. The message (id_alice_197129783,id1[]) that the attacker may have by 4 may be received at input {168}.
So the message (ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)) may be sent to the attacker at output {177}.
attacker_bitstring((ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118))).

6. By 5, the attacker may know (ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197130118).
attacker_dh_group_element(dh(dh_generator,b_197130118)).

7. By 5, the attacker may know (ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197130117,ec_base).
attacker_ec_point(ec_mul(y_197130117,ec_base)).

8. The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))) may be sent to the attacker at output {21}.
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))))).

9. By 8, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 1-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))).

10. By 9, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 7, the attacker may know ec_mul(y_197130117,ec_base).
By 6, the attacker may know dh(dh_generator,b_197130118).
Using the function eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118))).

11. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)) that the attacker may have by 10 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[]))).

12. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])) that the attacker may have by 11 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base)))))).

13. By 12, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))).
Using the function 3-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))).

14. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)) that the attacker may have by 10 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[]))).

15. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130117,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[])) that the attacker may have by 14 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130121,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130121,ec_base)),dh(dh(dh_generator,a_197130122),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130121,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130121,ec_base)),dh(dh(dh_generator,a_197130122),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base)))))).

16. By 15, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130121,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130121,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130122),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130121,ec_base)),dh(dh(dh_generator,a_197130122),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))).
Using the function 2-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ec_mul(z_197130120,ec_base).
attacker_ec_point(ec_mul(z_197130120,ec_base)).

17. By 12, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))).
Using the function 1-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[]))).

18. By 17, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])).
By 16, the attacker may know ec_mul(z_197130120,ec_base).
By 13, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base)))).
Using the function ring_signature-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base)))))).

19. The attacker has some term id_alice_197129837.
attacker_identity(id_alice_197129837).

20. By 19, the attacker may know id_alice_197129837.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197129837,id1[]).
attacker_bitstring((id_alice_197129837,id1[])).

21. The message (id_alice_197129837,id1[]) that the attacker may have by 20 may be received at input {168}.
So the message (ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114)) may be sent to the attacker at output {177}.
attacker_bitstring((ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114))).

22. By 21, the attacker may know (ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197130114).
attacker_dh_group_element(dh(dh_generator,b_197130114)).

23. By 21, the attacker may know (ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197130112,ec_base).
attacker_ec_point(ec_mul(y_197130112,ec_base)).

24. By 9, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 23, the attacker may know ec_mul(y_197130112,ec_base).
By 22, the attacker may know dh(dh_generator,b_197130114).
Using the function eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114))).

25. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),dh(dh_generator,b_197130114)) that the attacker may have by 24 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130112,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),ec_mul(x_197130113,ec_base),dh(dh_generator,b_197130114),dh(dh_generator,a_197130115),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130112,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),ec_mul(x_197130113,ec_base),dh(dh_generator,b_197130114),dh(dh_generator,a_197130115),id1[],id1[]))).

26. The attacker has some term id_alice_197129849.
attacker_identity(id_alice_197129849).

27. By 26, the attacker may know id_alice_197129849.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197129849,id1[]).
attacker_bitstring((id_alice_197129849,id1[])).

28. The message (id_alice_197129849,id1[]) that the attacker may have by 27 may be received at input {168}.
So the message (ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)) may be sent to the attacker at output {177}.
attacker_bitstring((ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108))).

29. By 28, the attacker may know (ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197130108).
attacker_dh_group_element(dh(dh_generator,b_197130108)).

30. By 28, the attacker may know (ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197130107,ec_base).
attacker_ec_point(ec_mul(y_197130107,ec_base)).

31. By 9, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 30, the attacker may know ec_mul(y_197130107,ec_base).
By 29, the attacker may know dh(dh_generator,b_197130108).
Using the function eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108))).

32. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)) that the attacker may have by 31 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[]))).

33. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])) that the attacker may have by 32 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base)))))).

34. By 33, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))).
Using the function 3-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))).

35. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)) that the attacker may have by 31 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[]))).

36. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130107,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[])) that the attacker may have by 35 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130110,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130110,ec_base)),dh(dh(dh_generator,a_197130111),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130110,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130110,ec_base)),dh(dh(dh_generator,a_197130111),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base)))))).

37. By 36, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130110,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130110,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130111),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130110,ec_base)),dh(dh(dh_generator,a_197130111),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))).
Using the function 2-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ec_mul(z,ec_base).
attacker_ec_point(ec_mul(z,ec_base)).

38. By 33, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))).
Using the function 1-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[]))).

39. By 38, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])).
By 37, the attacker may know ec_mul(z,ec_base).
By 34, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base)))).
Using the function ring_signature-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base)))))).

40. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),dh(dh_generator,b_197130108)) that the attacker may have by 31 may be received at input {33}.
The message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130106,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130107,ec_base),ec_mul(x_197130106,ec_base),dh(dh_generator,b_197130108),dh(dh_generator,a_197130109),id1[],id1[])),ec_mul(z,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130107,ec_mul(x_197130106,ec_base)),dh(dh(dh_generator,a_197130109),b_197130108)))),ec_point_as_bits(ec_mul(z,ec_base))))) that the attacker may have by 39 may be received at input {45}.
So the message (fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {60}.
mess_bitstring(ac[],(fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

41. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197130112,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130112,ec_base),ec_mul(x_197130113,ec_base),dh(dh_generator,b_197130114),dh(dh_generator,a_197130115),id1[],id1[])) that the attacker may have by 25 may be received at input {178}.
The message (fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 40 may be received at input {205}.
So the message (fp_idake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {206}.
mess_bitstring(ac[],(fp_idake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

42. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),dh(dh_generator,b_197130118)) that the attacker may have by 10 may be received at input {33}.
The message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197130116,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197130117,ec_base),ec_mul(x_197130116,ec_base),dh(dh_generator,b_197130118),dh(dh_generator,a_197130119),id1[],id1[])),ec_mul(z_197130120,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197130117,ec_mul(x_197130116,ec_base)),dh(dh(dh_generator,a_197130119),b_197130118)))),ec_point_as_bits(ec_mul(z_197130120,ec_base))))) that the attacker may have by 18 may be received at input {45}.
The message (fp_idake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 41 may be received at input {61}.
So the message idake_alice_correct[] may be sent to the attacker at output {63}.
attacker_bitstring(idake_alice_correct[]).

43. By 42, the attacker may know idake_alice_correct[].
So the attacker may know idake_alice_correct[] in phase 1.
attacker_bitstring_p1(idake_alice_correct[]).


Unified id_alice_197129849 with id1[]
Unified id_alice_197129837 with id1[]
Unified id_alice_197129783 with id1[]
Trying unification dh(dh(dh_generator,a_i[!1 = @sid_197130101]),b_i[!1 = @sid_197130083]),ec_mul(y_i[!1 = @sid_197130083],ec_mul(x_i[!1 = @sid_197130101],ec_base)),dh(dh_generator,a_i[!1 = @sid_197130101]),ec_mul(x_i[!1 = @sid_197130101],ec_base),ec_mul(x_i[!1 = @sid_197130101],ec_base),dh(dh_generator,a_i[!1 = @sid_197130101]),ec_mul(x_i[!1 = @sid_197130101],ec_base),dh(dh(dh_generator,a_i[!1 = @sid_197129986]),b_i[!1 = @sid_197129969]),ec_mul(y_i[!1 = @sid_197129969],ec_mul(x_i[!1 = @sid_197129986],ec_base)),dh(dh_generator,a_i[!1 = @sid_197129986]),ec_mul(x_i[!1 = @sid_197129986],ec_base),ec_mul(x_i[!1 = @sid_197129986],ec_base),dh(dh_generator,a_i[!1 = @sid_197129986]),ec_mul(x_i[!1 = @sid_197129986],ec_base) with dh(dh(dh_generator,a_i[!1 = @sid_197129819]),b_i[!1 = @sid_197130083]),ec_mul(y_i[!1 = @sid_197130083],ec_mul(x_i[!1 = @sid_197129819],ec_base)),dh(dh_generator,a_i[!1 = @sid_197129819]),ec_mul(x_i[!1 = @sid_197129819],ec_base),ec_mul(x_i[!1 = @sid_197129819],ec_base),dh(dh_generator,a_i[!1 = @sid_197129819]),ec_mul(x_i[!1 = @sid_197129819],ec_base),dh(dh(dh_generator,a_i[!1 = @sid_197129885]),b_i[!1 = @sid_197129969]),ec_mul(y_i[!1 = @sid_197129969],ec_mul(x_i[!1 = @sid_197129885],ec_base)),dh(dh_generator,a_i[!1 = @sid_197129885]),ec_mul(x_i[!1 = @sid_197129885],ec_base),ec_mul(x_i[!1 = @sid_197129885],ec_base),dh(dh_generator,a_i[!1 = @sid_197129885]),ec_mul(x_i[!1 = @sid_197129885],ec_base) succeeded.
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker_bitstring_p1(idake_alice_correct[])
This clause still contradicts the query.
Could not find a trace corresponding to this derivation.
RESULT not attacker_bitstring_p1(idake_alice_correct[]) cannot be proved.
Starting query not attacker_bitstring_p1(idake_bob_correct[])
goal reachable: attacker_bitstring_p1(idake_bob_correct[])
Abbreviations:
x_197137621 = x_i[!1 = @sid_197137592]
y_197137622 = y_i[!1 = @sid_197137575]
b_197137623 = b_i[!1 = @sid_197137575]
a_197137624 = a_i[!1 = @sid_197137592]
z_197137625 = z_i[!1 = @sid_197137575]
x_197137626 = x_i[!1 = @sid_197137491]
a_197137627 = a_i[!1 = @sid_197137491]
y_197137628 = y_i[!1 = @sid_197137617]
x_197137629 = x_i[!1 = @sid_197137612]
b_197137630 = b_i[!1 = @sid_197137617]
a_197137631 = a_i[!1 = @sid_197137612]

1. The attacker initially knows id1[].
attacker_identity(id1[]).

2. By 1, the attacker may know id1[].
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id1[],id1[]).
attacker_bitstring((id1[],id1[])).

3. The attacker has some term id_alice_197137443.
attacker_identity(id_alice_197137443).

4. By 3, the attacker may know id_alice_197137443.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197137443,id1[]).
attacker_bitstring((id_alice_197137443,id1[])).

5. The message (id_alice_197137443,id1[]) that the attacker may have by 4 may be received at input {168}.
So the message (ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630)) may be sent to the attacker at output {177}.
attacker_bitstring((ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630))).

6. By 5, the attacker may know (ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197137630).
attacker_dh_group_element(dh(dh_generator,b_197137630)).

7. By 5, the attacker may know (ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197137628,ec_base).
attacker_ec_point(ec_mul(y_197137628,ec_base)).

8. The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))) may be sent to the attacker at output {21}.
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))))).

9. By 8, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 1-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))).

10. By 9, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 7, the attacker may know ec_mul(y_197137628,ec_base).
By 6, the attacker may know dh(dh_generator,b_197137630).
Using the function eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630))).

11. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),dh(dh_generator,b_197137630)) that the attacker may have by 10 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137628,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),ec_mul(x_197137629,ec_base),dh(dh_generator,b_197137630),dh(dh_generator,a_197137631),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137628,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),ec_mul(x_197137629,ec_base),dh(dh_generator,b_197137630),dh(dh_generator,a_197137631),id1[],id1[]))).

12. The attacker has some term id_alice_197137455.
attacker_identity(id_alice_197137455).

13. By 12, the attacker may know id_alice_197137455.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197137455,id1[]).
attacker_bitstring((id_alice_197137455,id1[])).

14. The message (id_alice_197137455,id1[]) that the attacker may have by 13 may be received at input {168}.
So the message (ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)) may be sent to the attacker at output {177}.
attacker_bitstring((ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623))).

15. By 14, the attacker may know (ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197137623).
attacker_dh_group_element(dh(dh_generator,b_197137623)).

16. By 14, the attacker may know (ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197137622,ec_base).
attacker_ec_point(ec_mul(y_197137622,ec_base)).

17. By 9, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 16, the attacker may know ec_mul(y_197137622,ec_base).
By 15, the attacker may know dh(dh_generator,b_197137623).
Using the function eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623))).

18. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)) that the attacker may have by 17 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[]))).

19. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])) that the attacker may have by 18 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base)))))).

20. By 19, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))).
Using the function 3-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))).

21. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)) that the attacker may have by 17 may be received at input {33}.
So the message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[])) may be sent to the attacker at output {44}.
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[]))).

22. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137622,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[])) that the attacker may have by 21 may be received at input {178}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137626,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137626,ec_base)),dh(dh(dh_generator,a_197137627),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))) may be sent to the attacker at output {204}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137626,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137626,ec_base)),dh(dh(dh_generator,a_197137627),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base)))))).

23. By 22, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137626,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137626,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137627),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137626,ec_base)),dh(dh(dh_generator,a_197137627),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))).
Using the function 2-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ec_mul(z_197137625,ec_base).
attacker_ec_point(ec_mul(z_197137625,ec_base)).

24. By 19, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))).
Using the function 1-proj-ring_signature-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[]))).

25. By 24, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])).
By 23, the attacker may know ec_mul(z_197137625,ec_base).
By 20, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base)))).
Using the function ring_signature-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base)))))).

26. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {26}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),dh(dh_generator,b_197137623)) that the attacker may have by 17 may be received at input {33}.
The message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(x_197137621,ec_base),(one,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137622,ec_base),ec_mul(x_197137621,ec_base),dh(dh_generator,b_197137623),dh(dh_generator,a_197137624),id1[],id1[])),ec_mul(z_197137625,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,(ec_mul(y_197137622,ec_mul(x_197137621,ec_base)),dh(dh(dh_generator,a_197137624),b_197137623)))),ec_point_as_bits(ec_mul(z_197137625,ec_base))))) that the attacker may have by 25 may be received at input {45}.
So the message (fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {60}.
mess_bitstring(ac[],(fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

27. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {168}.
The message ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197137628,ec_base),(zero,eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197137628,ec_base),ec_mul(x_197137629,ec_base),dh(dh_generator,b_197137630),dh(dh_generator,a_197137631),id1[],id1[])) that the attacker may have by 11 may be received at input {178}.
The message (fp_idake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 26 may be received at input {205}.
So the message idake_bob_correct[] may be sent to the attacker at output {208}.
attacker_bitstring(idake_bob_correct[]).

28. By 27, the attacker may know idake_bob_correct[].
So the attacker may know idake_bob_correct[] in phase 1.
attacker_bitstring_p1(idake_bob_correct[]).


Unified id_alice_197137455 with id1[]
Unified id_alice_197137443 with id1[]
Trying unification dh(dh(dh_generator,a_i[!1 = @sid_197137592]),b_i[!1 = @sid_197137575]),ec_mul(y_i[!1 = @sid_197137575],ec_mul(x_i[!1 = @sid_197137592],ec_base)),dh(dh_generator,a_i[!1 = @sid_197137592]),ec_mul(x_i[!1 = @sid_197137592],ec_base),ec_mul(x_i[!1 = @sid_197137592],ec_base),dh(dh_generator,a_i[!1 = @sid_197137592]),ec_mul(x_i[!1 = @sid_197137592],ec_base) with dh(dh(dh_generator,a_i[!1 = @sid_197137491]),b_i[!1 = @sid_197137575]),ec_mul(y_i[!1 = @sid_197137575],ec_mul(x_i[!1 = @sid_197137491],ec_base)),dh(dh_generator,a_i[!1 = @sid_197137491]),ec_mul(x_i[!1 = @sid_197137491],ec_base),ec_mul(x_i[!1 = @sid_197137491],ec_base),dh(dh_generator,a_i[!1 = @sid_197137491]),ec_mul(x_i[!1 = @sid_197137491],ec_base) succeeded.
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker_bitstring_p1(idake_bob_correct[])
This clause still contradicts the query.
Could not find a trace corresponding to this derivation.
RESULT not attacker_bitstring_p1(idake_bob_correct[]) cannot be proved.
Starting query not attacker_bitstring_p1(nidake_alice_correct[])
goal reachable: attacker_bitstring_p1(nidake_alice_correct[])
Abbreviations:
y_197144800 = y_ni[!1 = @sid_197144782]
x_197144801 = x_ni[!1 = @sid_197144769]
b_197144802 = b_ni[!1 = @sid_197144782]
a_197144803 = a_ni[!1 = @sid_197144769]
z_197144804 = z_ni[!1 = @sid_197144769]

1. The attacker initially knows id2[].
attacker_identity(id2[]).

2. By 1, the attacker may know id2[].
By 1, the attacker may know id2[].
Using the function identity-identity-tuple the attacker may obtain (id2[],id2[]).
attacker_bitstring((id2[],id2[])).

3. The attacker has some term B_197144797.
attacker_dh_group_element(B_197144797).

4. The attacker has some term Y_197144796.
attacker_ec_point(Y_197144796).

5. The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))) may be sent to the attacker at output {21}.
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))))).

6. By 5, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 3-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base)))).

7. By 5, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 1-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))).

8. By 7, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 6, the attacker may know eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))).
By 4, the attacker may know Y_197144796.
By 3, the attacker may know B_197144797.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),Y_197144796,B_197144797).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),Y_197144796,B_197144797)).

9. The attacker initially knows id1[].
attacker_identity(id1[]).

10. By 9, the attacker may know id1[].
By 9, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id1[],id1[]).
attacker_bitstring((id1[],id1[])).

11. The attacker has some term id_bob_197144718.
attacker_identity(id_bob_197144718).

12. By 9, the attacker may know id1[].
By 11, the attacker may know id_bob_197144718.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197144718).
attacker_bitstring((id1[],id_bob_197144718)).

13. The attacker has some term id_alice_197144643.
attacker_identity(id_alice_197144643).

14. By 13, the attacker may know id_alice_197144643.
By 9, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197144643,id1[]).
attacker_bitstring((id_alice_197144643,id1[])).

15. The message (id_alice_197144643,id1[]) that the attacker may have by 14 may be received at input {669}.
So the message (ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)) may be sent to the attacker at output {678}.
attacker_bitstring((ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802))).

16. By 15, the attacker may know (ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197144802).
attacker_dh_group_element(dh(dh_generator,b_197144802)).

17. By 15, the attacker may know (ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197144800,ec_base).
attacker_ec_point(ec_mul(y_197144800,ec_base)).

18. By 7, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 6, the attacker may know eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))).
By 17, the attacker may know ec_mul(y_197144800,ec_base).
By 16, the attacker may know dh(dh_generator,b_197144802).
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802))).

19. The message (id1[],id_bob_197144718) that the attacker may have by 12 may be received at input {322}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)) that the attacker may have by 18 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))))).

20. By 19, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id_bob_197144718,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).
Using the function 4-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).

21. The attacker has some term id_bob_197144672.
attacker_identity(id_bob_197144672).

22. By 9, the attacker may know id1[].
By 21, the attacker may know id_bob_197144672.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197144672).
attacker_bitstring((id1[],id_bob_197144672)).

23. The attacker has some term B_197144671.
attacker_dh_group_element(B_197144671).

24. The attacker has some term Y_197144670.
attacker_ec_point(Y_197144670).

25. By 5, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 4-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).

26. By 5, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 2-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))).

27. By 26, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 25, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 24, the attacker may know Y_197144670.
By 23, the attacker may know B_197144671.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144670,B_197144671).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144670,B_197144671)).

28. The message (id1[],id_bob_197144672) that the attacker may have by 22 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144670,B_197144671) that the attacker may have by 27 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197144670,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197144670,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))))).

29. By 28, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197144670,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197144670,ec_mul(x_197144801,ec_base),B_197144671,dh(dh_generator,a_197144803),ec_mul(d_134[],ec_base),id_bob_197144672,id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,Y_197144670),ec_mul(x_197144801,ec_mul(d_134[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197144671,a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).
Using the function 3-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ec_mul(z_197144804,ec_base).
attacker_ec_point(ec_mul(z_197144804,ec_base)).

30. The message (id1[],id1[]) that the attacker may have by 10 may be received at input {322}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197144800,ec_base),dh(dh_generator,b_197144802)) that the attacker may have by 18 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))))).

31. By 30, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).
Using the function 2-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))).
attacker_bitstring(kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])))).

32. By 30, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).
Using the function 1-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))).

33. By 32, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])).
By 31, the attacker may know kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))).
By 29, the attacker may know ec_mul(z_197144804,ec_base).
By 20, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))).
Using the function ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base)))))).

34. The attacker has some term id_bob_197144697.
attacker_identity(id_bob_197144697).

35. By 9, the attacker may know id1[].
By 34, the attacker may know id_bob_197144697.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197144697).
attacker_bitstring((id1[],id_bob_197144697)).

36. The attacker has some term B_197144696.
attacker_dh_group_element(B_197144696).

37. The attacker has some term Y_197144695.
attacker_ec_point(Y_197144695).

38. By 26, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 25, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 37, the attacker may know Y_197144695.
By 36, the attacker may know B_197144696.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144695,B_197144696).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144695,B_197144696)).

39. The message (id1[],id_bob_197144697) that the attacker may have by 35 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197144695,B_197144696) that the attacker may have by 38 may be received at input {328}.
So the message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {360}.
mess_bitstring(ac[],(fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

40. The message (id1[],id1[]) that the attacker may have by 10 may be received at input {669}.
The message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197144800,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197144800,ec_base),ec_mul(x_197144801,ec_base),dh(dh_generator,b_197144802),dh(dh_generator,a_197144803),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197144804,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197144801,ec_mul(y_197144800,ec_base)),ec_mul(x_197144801,ec_mul(d[],ec_base)),ec_mul(x_197144801,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197144802),a_197144803))))),ec_point_as_bits(ec_mul(z_197144804,ec_base))))) that the attacker may have by 33 may be received at input {679}.
The message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 39 may be received at input {706}.
So the message (fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {707}.
mess_bitstring(ac[],(fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

41. The message (id2[],id2[]) that the attacker may have by 2 may be received at input {322}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),Y_197144796,B_197144797) that the attacker may have by 8 may be received at input {441}.
The message (fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 40 may be received at input {474}.
So the message nidake_alice_correct[] may be sent to the attacker at output {476}.
attacker_bitstring(nidake_alice_correct[]).

42. By 41, the attacker may know nidake_alice_correct[].
So the attacker may know nidake_alice_correct[] in phase 1.
attacker_bitstring_p1(nidake_alice_correct[]).


Unified id_bob_197144672 with id1[]
Unified Y_197144670 with ec_mul(y_ni[!1 = @sid_197144782],ec_base)
Unified B_197144671 with dh(dh_generator,b_ni[!1 = @sid_197144782])
Unified id_bob_197144718 with id1[]
Unified id_alice_197144643 with id1[]
Trying unification ec_mul(x_ni[!1 = @sid_197144769],ec_mul(eddsa_scalar(h_129[]),ec_base)),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(d_134[],ec_base)),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(eddsa_scalar(h_129[]),ec_base)),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(d_134[],ec_base)),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base) with ec_mul(x_ni[!1 = @sid_197144769],ec_mul(eddsa_scalar(h[]),ec_base)),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(d[],ec_base)),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(eddsa_scalar(h[]),ec_base)),ec_mul(x_ni[!1 = @sid_197144769],ec_mul(d[],ec_base)),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base) failed.
The clause after unifyDerivation is
attacker_bitstring_p1(nidake_alice_correct[])
This clause still contradicts the query.
Could not find a trace corresponding to this derivation.
RESULT not attacker_bitstring_p1(nidake_alice_correct[]) cannot be proved.
Starting query not attacker_bitstring_p1(nidake_bob_correct[])
goal reachable: attacker_bitstring_p1(nidake_bob_correct[])
Abbreviations:
y_197152166 = y_ni[!1 = @sid_197152161]
x_197152167 = x_ni[!1 = @sid_197152148]
b_197152168 = b_ni[!1 = @sid_197152161]
a_197152169 = a_ni[!1 = @sid_197152148]
z_197152170 = z_ni[!1 = @sid_197152148]

1. The attacker initially knows id1[].
attacker_identity(id1[]).

2. By 1, the attacker may know id1[].
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id1[],id1[]).
attacker_bitstring((id1[],id1[])).

3. The attacker has some term id_bob_197152097.
attacker_identity(id_bob_197152097).

4. By 1, the attacker may know id1[].
By 3, the attacker may know id_bob_197152097.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197152097).
attacker_bitstring((id1[],id_bob_197152097)).

5. The attacker has some term id_alice_197152022.
attacker_identity(id_alice_197152022).

6. By 5, the attacker may know id_alice_197152022.
By 1, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_197152022,id1[]).
attacker_bitstring((id_alice_197152022,id1[])).

7. The message (id_alice_197152022,id1[]) that the attacker may have by 6 may be received at input {669}.
So the message (ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)) may be sent to the attacker at output {678}.
attacker_bitstring((ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168))).

8. By 7, the attacker may know (ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_197152168).
attacker_dh_group_element(dh(dh_generator,b_197152168)).

9. By 7, the attacker may know (ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_197152166,ec_base).
attacker_ec_point(ec_mul(y_197152166,ec_base)).

10. The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))) may be sent to the attacker at output {21}.
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))))).

11. By 10, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 3-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base)))).

12. By 10, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 1-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))).

13. By 12, the attacker may know eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))).
By 11, the attacker may know eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))).
By 9, the attacker may know ec_mul(y_197152166,ec_base).
By 8, the attacker may know dh(dh_generator,b_197152168).
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)).
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168))).

14. The message (id1[],id_bob_197152097) that the attacker may have by 4 may be received at input {322}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)) that the attacker may have by 13 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))))).

15. By 14, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id_bob_197152097,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).
Using the function 4-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).

16. The attacker has some term id_bob_197152051.
attacker_identity(id_bob_197152051).

17. By 1, the attacker may know id1[].
By 16, the attacker may know id_bob_197152051.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197152051).
attacker_bitstring((id1[],id_bob_197152051)).

18. The attacker has some term B_197152050.
attacker_dh_group_element(B_197152050).

19. The attacker has some term Y_197152049.
attacker_ec_point(Y_197152049).

20. By 10, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 4-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).

21. By 10, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 2-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))).

22. By 21, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 20, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 19, the attacker may know Y_197152049.
By 18, the attacker may know B_197152050.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152049,B_197152050).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152049,B_197152050)).

23. The message (id1[],id_bob_197152051) that the attacker may have by 17 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152049,B_197152050) that the attacker may have by 22 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197152049,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197152049,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))))).

24. By 23, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_197152049,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_197152049,ec_mul(x_197152167,ec_base),B_197152050,dh(dh_generator,a_197152169),ec_mul(d_134[],ec_base),id_bob_197152051,id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,Y_197152049),ec_mul(x_197152167,ec_mul(d_134[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_197152050,a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).
Using the function 3-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ec_mul(z_197152170,ec_base).
attacker_ec_point(ec_mul(z_197152170,ec_base)).

25. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {322}.
The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),ec_mul(y_197152166,ec_base),dh(dh_generator,b_197152168)) that the attacker may have by 13 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))))).

26. By 25, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).
Using the function 2-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))).
attacker_bitstring(kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])))).

27. By 25, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).
Using the function 1-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))).

28. By 27, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])).
By 26, the attacker may know kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))).
By 24, the attacker may know ec_mul(z_197152170,ec_base).
By 15, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))).
Using the function ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base)))))).

29. The attacker has some term id_bob_197152076.
attacker_identity(id_bob_197152076).

30. By 1, the attacker may know id1[].
By 29, the attacker may know id_bob_197152076.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_197152076).
attacker_bitstring((id1[],id_bob_197152076)).

31. The attacker has some term B_197152075.
attacker_dh_group_element(B_197152075).

32. The attacker has some term Y_197152074.
attacker_ec_point(Y_197152074).

33. By 21, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 20, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 32, the attacker may know Y_197152074.
By 31, the attacker may know B_197152075.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152074,B_197152075).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152074,B_197152075)).

34. The message (id1[],id_bob_197152076) that the attacker may have by 30 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_197152074,B_197152075) that the attacker may have by 33 may be received at input {328}.
So the message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) may be sent on channel ac[] at output {360}.
mess_bitstring(ac[],(fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))))).

35. The message (id1[],id1[]) that the attacker may have by 2 may be received at input {669}.
The message (ring_sign(eddsa_scalar(h[]),ec_mul(f[],ec_base),ec_mul(y_197152166,ec_base),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169)))),(eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_197152166,ec_base),ec_mul(x_197152167,ec_base),dh(dh_generator,b_197152168),dh(dh_generator,a_197152169),ec_mul(d[],ec_base),id1[],id1[]))),ec_mul(z_197152170,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_197152167,ec_mul(y_197152166,ec_base)),ec_mul(x_197152167,ec_mul(d[],ec_base)),ec_mul(x_197152167,ec_mul(eddsa_scalar(h[]),ec_base)),dh(dh(dh_generator,b_197152168),a_197152169))))),ec_point_as_bits(ec_mul(z_197152170,ec_base))))) that the attacker may have by 28 may be received at input {679}.
The message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base)))) that may be sent on channel ac[] by 34 may be received at input {706}.
So the message nidake_bob_correct[] may be sent to the attacker at output {709}.
attacker_bitstring(nidake_bob_correct[]).

36. By 35, the attacker may know nidake_bob_correct[].
So the attacker may know nidake_bob_correct[] in phase 1.
attacker_bitstring_p1(nidake_bob_correct[]).


Unified id_bob_197152051 with id1[]
Unified Y_197152049 with ec_mul(y_ni[!1 = @sid_197152161],ec_base)
Unified B_197152050 with dh(dh_generator,b_ni[!1 = @sid_197152161])
Unified id_bob_197152097 with id1[]
Unified id_alice_197152022 with id1[]
Trying unification ec_mul(x_ni[!1 = @sid_197152148],ec_mul(eddsa_scalar(h_129[]),ec_base)),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(d_134[],ec_base)),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(eddsa_scalar(h_129[]),ec_base)),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(d_134[],ec_base)),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base),ec_mul(d_134[],ec_base),ec_mul(f_130[],ec_base),ec_mul(eddsa_scalar(h_129[]),ec_base) with ec_mul(x_ni[!1 = @sid_197152148],ec_mul(eddsa_scalar(h[]),ec_base)),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(d[],ec_base)),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(eddsa_scalar(h[]),ec_base)),ec_mul(x_ni[!1 = @sid_197152148],ec_mul(d[],ec_base)),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base),ec_mul(d[],ec_base),ec_mul(f[],ec_base),ec_mul(eddsa_scalar(h[]),ec_base) failed.
The clause after unifyDerivation is
attacker_bitstring_p1(nidake_bob_correct[])
This clause still contradicts the query.
Could not find a trace corresponding to this derivation.
RESULT not attacker_bitstring_p1(nidake_bob_correct[]) cannot be proved.
-- Query secret k_ia_191,k_ia_190,k_ia_189,k_ia_166,k_ia_165,k_ia_164,k_ia_141,k_ia_140,k_ia; secret k_ib_270,k_ib_268,k_ib_266,k_ib_243,k_ib_241,k_ib_239,k_ib_216,k_ib_214,k_ib; secret k_nia_414,k_nia_412,k_nia_410,k_nia_404,k_nia_402,k_nia_400,k_nia_394,k_nia_392,k_nia_390,k_nia_364,k_nia_362,k_nia_360,k_nia_354,k_nia_352,k_nia_350,k_nia_344,k_nia_342,k_nia_340,k_nia_314,k_nia_312,k_nia_310,k_nia_304,k_nia_302,k_nia_300,k_nia_294,k_nia_292,k_nia; secret k_nib_545,k_nib_544,k_nib_543,k_nib_538,k_nib_537,k_nib_536,k_nib_531,k_nib_530,k_nib_529,k_nib_502,k_nib_501,k_nib_500,k_nib_495,k_nib_494,k_nib_493,k_nib_488,k_nib_487,k_nib_486,k_nib_459,k_nib_458,k_nib_457,k_nib_452,k_nib_451,k_nib_450,k_nib_445,k_nib_444,k_nib

Query secret k_ia_191,k_ia_190,k_ia_189,k_ia_166,k_ia_165,k_ia_164,k_ia_141,k_ia_140,k_ia encoded as not (event(k_ia_contains(v_660)) && attacker_bitstring_p1(v_660))
query secret k_ib_270,k_ib_268,k_ib_266,k_ib_243,k_ib_241,k_ib_239,k_ib_216,k_ib_214,k_ib encoded as not (event(k_ib_contains(v_661)) && attacker_bitstring_p1(v_661))
query secret k_nia_414,k_nia_412,k_nia_410,k_nia_404,k_nia_402,k_nia_400,k_nia_394,k_nia_392,k_nia_390,k_nia_364,k_nia_362,k_nia_360,k_nia_354,k_nia_352,k_nia_350,k_nia_344,k_nia_342,k_nia_340,k_nia_314,k_nia_312,k_nia_310,k_nia_304,k_nia_302,k_nia_300,k_nia_294,k_nia_292,k_nia encoded as not (event(k_nia_contains(v_662)) && attacker_bitstring_p1(v_662))
query secret k_nib_545,k_nib_544,k_nib_543,k_nib_538,k_nib_537,k_nib_536,k_nib_531,k_nib_530,k_nib_529,k_nib_502,k_nib_501,k_nib_500,k_nib_495,k_nib_494,k_nib_493,k_nib_488,k_nib_487,k_nib_486,k_nib_459,k_nib_458,k_nib_457,k_nib_452,k_nib_451,k_nib_450,k_nib_445,k_nib_444,k_nib encoded as not (event(k_nib_contains(v_663)) && attacker_bitstring_p1(v_663))
 in process 1.
Completing...
200 rules inserted. The rule base contains 200 rules. 1994 rules in the queue.
400 rules inserted. The rule base contains 399 rules. 1812 rules in the queue.
600 rules inserted. The rule base contains 592 rules. 1661 rules in the queue.
800 rules inserted. The rule base contains 790 rules. 1517 rules in the queue.
1000 rules inserted. The rule base contains 990 rules. 1618 rules in the queue.
1200 rules inserted. The rule base contains 1188 rules. 1650 rules in the queue.
1400 rules inserted. The rule base contains 1388 rules. 1650 rules in the queue.
1600 rules inserted. The rule base contains 1588 rules. 1650 rules in the queue.
1800 rules inserted. The rule base contains 1788 rules. 1650 rules in the queue.
2000 rules inserted. The rule base contains 1988 rules. 1650 rules in the queue.
2200 rules inserted. The rule base contains 2184 rules. 1654 rules in the queue.
2400 rules inserted. The rule base contains 2311 rules. 1734 rules in the queue.
2600 rules inserted. The rule base contains 2507 rules. 1890 rules in the queue.
2800 rules inserted. The rule base contains 2707 rules. 1839 rules in the queue.
3000 rules inserted. The rule base contains 2907 rules. 1678 rules in the queue.
3200 rules inserted. The rule base contains 3107 rules. 1542 rules in the queue.
3400 rules inserted. The rule base contains 3307 rules. 1383 rules in the queue.
3600 rules inserted. The rule base contains 3507 rules. 1206 rules in the queue.
3800 rules inserted. The rule base contains 3707 rules. 1070 rules in the queue.
4000 rules inserted. The rule base contains 3861 rules. 1134 rules in the queue.
4200 rules inserted. The rule base contains 4028 rules. 1681 rules in the queue.
4400 rules inserted. The rule base contains 4207 rules. 2331 rules in the queue.
4600 rules inserted. The rule base contains 4390 rules. 3195 rules in the queue.
4800 rules inserted. The rule base contains 4590 rules. 3195 rules in the queue.
5000 rules inserted. The rule base contains 4682 rules. 3479 rules in the queue.
5200 rules inserted. The rule base contains 4764 rules. 3870 rules in the queue.
5400 rules inserted. The rule base contains 4943 rules. 4146 rules in the queue.
5600 rules inserted. The rule base contains 5072 rules. 4346 rules in the queue.
5800 rules inserted. The rule base contains 5225 rules. 4708 rules in the queue.
6000 rules inserted. The rule base contains 5382 rules. 5325 rules in the queue.
6200 rules inserted. The rule base contains 5540 rules. 6431 rules in the queue.
6400 rules inserted. The rule base contains 5701 rules. 7636 rules in the queue.
6600 rules inserted. The rule base contains 5855 rules. 7886 rules in the queue.
6800 rules inserted. The rule base contains 6031 rules. 8164 rules in the queue.
7000 rules inserted. The rule base contains 6209 rules. 8578 rules in the queue.
7200 rules inserted. The rule base contains 6387 rules. 9386 rules in the queue.
7400 rules inserted. The rule base contains 6569 rules. 10768 rules in the queue.
7600 rules inserted. The rule base contains 6766 rules. 11527 rules in the queue.
7800 rules inserted. The rule base contains 6963 rules. 11622 rules in the queue.
8000 rules inserted. The rule base contains 7133 rules. 12230 rules in the queue.
8200 rules inserted. The rule base contains 7237 rules. 12169 rules in the queue.
8400 rules inserted. The rule base contains 7350 rules. 14096 rules in the queue.
8600 rules inserted. The rule base contains 7518 rules. 14901 rules in the queue.
8800 rules inserted. The rule base contains 7573 rules. 14894 rules in the queue.
9000 rules inserted. The rule base contains 7705 rules. 14826 rules in the queue.
9200 rules inserted. The rule base contains 7790 rules. 14889 rules in the queue.
9400 rules inserted. The rule base contains 7990 rules. 14944 rules in the queue.
9600 rules inserted. The rule base contains 8099 rules. 14898 rules in the queue.
9800 rules inserted. The rule base contains 8177 rules. 14796 rules in the queue.
10000 rules inserted. The rule base contains 8305 rules. 14907 rules in the queue.
10200 rules inserted. The rule base contains 8434 rules. 14812 rules in the queue.
10400 rules inserted. The rule base contains 8494 rules. 14670 rules in the queue.
10600 rules inserted. The rule base contains 8622 rules. 14822 rules in the queue.
10800 rules inserted. The rule base contains 8748 rules. 14715 rules in the queue.
11000 rules inserted. The rule base contains 8948 rules. 14665 rules in the queue.
11200 rules inserted. The rule base contains 9148 rules. 14651 rules in the queue.
11400 rules inserted. The rule base contains 9348 rules. 14673 rules in the queue.
11600 rules inserted. The rule base contains 9472 rules. 15117 rules in the queue.
11800 rules inserted. The rule base contains 9636 rules. 15850 rules in the queue.
12000 rules inserted. The rule base contains 9787 rules. 16658 rules in the queue.
12200 rules inserted. The rule base contains 9928 rules. 17163 rules in the queue.
12400 rules inserted. The rule base contains 10124 rules. 17277 rules in the queue.
12600 rules inserted. The rule base contains 10324 rules. 17245 rules in the queue.
12800 rules inserted. The rule base contains 10524 rules. 17426 rules in the queue.
13000 rules inserted. The rule base contains 10684 rules. 17629 rules in the queue.
13200 rules inserted. The rule base contains 10820 rules. 18214 rules in the queue.
13400 rules inserted. The rule base contains 10976 rules. 18838 rules in the queue.
13600 rules inserted. The rule base contains 11137 rules. 19660 rules in the queue.
13800 rules inserted. The rule base contains 11299 rules. 20151 rules in the queue.
14000 rules inserted. The rule base contains 11277 rules. 20087 rules in the queue.
14200 rules inserted. The rule base contains 11477 rules. 20133 rules in the queue.
14400 rules inserted. The rule base contains 11562 rules. 20066 rules in the queue.
14600 rules inserted. The rule base contains 11725 rules. 20130 rules in the queue.
14800 rules inserted. The rule base contains 11827 rules. 20076 rules in the queue.
15000 rules inserted. The rule base contains 11985 rules. 20193 rules in the queue.
15200 rules inserted. The rule base contains 12082 rules. 20123 rules in the queue.
15400 rules inserted. The rule base contains 12210 rules. 20150 rules in the queue.
15600 rules inserted. The rule base contains 12408 rules. 20183 rules in the queue.
15800 rules inserted. The rule base contains 12608 rules. 20133 rules in the queue.
16000 rules inserted. The rule base contains 12808 rules. 20323 rules in the queue.
16200 rules inserted. The rule base contains 13004 rules. 20527 rules in the queue.
16400 rules inserted. The rule base contains 13168 rules. 21260 rules in the queue.
16600 rules inserted. The rule base contains 13332 rules. 21916 rules in the queue.
16800 rules inserted. The rule base contains 13532 rules. 22933 rules in the queue.
17000 rules inserted. The rule base contains 13728 rules. 22927 rules in the queue.
17200 rules inserted. The rule base contains 13928 rules. 22895 rules in the queue.
17400 rules inserted. The rule base contains 14128 rules. 23067 rules in the queue.
17600 rules inserted. The rule base contains 14324 rules. 23741 rules in the queue.
17800 rules inserted. The rule base contains 14452 rules. 24330 rules in the queue.
18000 rules inserted. The rule base contains 14652 rules. 25347 rules in the queue.
18200 rules inserted. The rule base contains 14832 rules. 25935 rules in the queue.
18400 rules inserted. The rule base contains 14982 rules. 25959 rules in the queue.
18600 rules inserted. The rule base contains 15147 rules. 26235 rules in the queue.
18800 rules inserted. The rule base contains 15298 rules. 26217 rules in the queue.
19000 rules inserted. The rule base contains 15478 rules. 26359 rules in the queue.
19200 rules inserted. The rule base contains 15662 rules. 26505 rules in the queue.
19400 rules inserted. The rule base contains 15811 rules. 26408 rules in the queue.
19600 rules inserted. The rule base contains 15894 rules. 26436 rules in the queue.
19800 rules inserted. The rule base contains 16094 rules. 27001 rules in the queue.
20000 rules inserted. The rule base contains 16282 rules. 27359 rules in the queue.
20200 rules inserted. The rule base contains 16462 rules. 27951 rules in the queue.
20400 rules inserted. The rule base contains 16616 rules. 28525 rules in the queue.
20600 rules inserted. The rule base contains 16668 rules. 28380 rules in the queue.
20800 rules inserted. The rule base contains 16787 rules. 28207 rules in the queue.
21000 rules inserted. The rule base contains 16927 rules. 28055 rules in the queue.
21200 rules inserted. The rule base contains 17071 rules. 27882 rules in the queue.
21400 rules inserted. The rule base contains 17207 rules. 28079 rules in the queue.
21600 rules inserted. The rule base contains 17377 rules. 28249 rules in the queue.
21800 rules inserted. The rule base contains 17517 rules. 28069 rules in the queue.
22000 rules inserted. The rule base contains 17707 rules. 28299 rules in the queue.
22200 rules inserted. The rule base contains 17887 rules. 28419 rules in the queue.
22400 rules inserted. The rule base contains 18042 rules. 28293 rules in the queue.
22600 rules inserted. The rule base contains 18020 rules. 28248 rules in the queue.
22800 rules inserted. The rule base contains 17998 rules. 28136 rules in the queue.
23000 rules inserted. The rule base contains 17894 rules. 28130 rules in the queue.
23200 rules inserted. The rule base contains 17810 rules. 28042 rules in the queue.
23400 rules inserted. The rule base contains 17858 rules. 27958 rules in the queue.
23600 rules inserted. The rule base contains 17968 rules. 27824 rules in the queue.
23800 rules inserted. The rule base contains 18003 rules. 27689 rules in the queue.
24000 rules inserted. The rule base contains 17999 rules. 27613 rules in the queue.
24200 rules inserted. The rule base contains 18034 rules. 27504 rules in the queue.
24400 rules inserted. The rule base contains 18234 rules. 27304 rules in the queue.
24600 rules inserted. The rule base contains 18095 rules. 27251 rules in the queue.
24800 rules inserted. The rule base contains 17926 rules. 27186 rules in the queue.
25000 rules inserted. The rule base contains 18126 rules. 26986 rules in the queue.
25200 rules inserted. The rule base contains 17784 rules. 26981 rules in the queue.
25400 rules inserted. The rule base contains 17756 rules. 26898 rules in the queue.
25600 rules inserted. The rule base contains 17956 rules. 26698 rules in the queue.
25800 rules inserted. The rule base contains 18156 rules. 26498 rules in the queue.
26000 rules inserted. The rule base contains 18356 rules. 26298 rules in the queue.
26200 rules inserted. The rule base contains 18556 rules. 26098 rules in the queue.
26400 rules inserted. The rule base contains 18756 rules. 26576 rules in the queue.
26600 rules inserted. The rule base contains 18956 rules. 26376 rules in the queue.
26800 rules inserted. The rule base contains 19156 rules. 26176 rules in the queue.
27000 rules inserted. The rule base contains 19356 rules. 25994 rules in the queue.
27200 rules inserted. The rule base contains 19556 rules. 25794 rules in the queue.
27400 rules inserted. The rule base contains 19756 rules. 25594 rules in the queue.
27600 rules inserted. The rule base contains 19956 rules. 26224 rules in the queue.
27800 rules inserted. The rule base contains 20156 rules. 27024 rules in the queue.
28000 rules inserted. The rule base contains 20356 rules. 26864 rules in the queue.
28200 rules inserted. The rule base contains 20556 rules. 26664 rules in the queue.
28400 rules inserted. The rule base contains 20756 rules. 26474 rules in the queue.
28600 rules inserted. The rule base contains 20956 rules. 26274 rules in the queue.
28800 rules inserted. The rule base contains 21156 rules. 26284 rules in the queue.
29000 rules inserted. The rule base contains 21063 rules. 26673 rules in the queue.
29200 rules inserted. The rule base contains 21176 rules. 26506 rules in the queue.
29400 rules inserted. The rule base contains 21085 rules. 26403 rules in the queue.
29600 rules inserted. The rule base contains 20806 rules. 26418 rules in the queue.
29800 rules inserted. The rule base contains 21006 rules. 26218 rules in the queue.
30000 rules inserted. The rule base contains 21206 rules. 26018 rules in the queue.
30200 rules inserted. The rule base contains 21406 rules. 25818 rules in the queue.
30400 rules inserted. The rule base contains 21606 rules. 25618 rules in the queue.
30600 rules inserted. The rule base contains 21806 rules. 25728 rules in the queue.
30800 rules inserted. The rule base contains 22006 rules. 25896 rules in the queue.
31000 rules inserted. The rule base contains 22206 rules. 25696 rules in the queue.
31200 rules inserted. The rule base contains 22406 rules. 25514 rules in the queue.
31400 rules inserted. The rule base contains 22606 rules. 25314 rules in the queue.
31600 rules inserted. The rule base contains 22806 rules. 25114 rules in the queue.
31800 rules inserted. The rule base contains 23006 rules. 25254 rules in the queue.
32000 rules inserted. The rule base contains 23206 rules. 26054 rules in the queue.
32200 rules inserted. The rule base contains 23406 rules. 26384 rules in the queue.
32400 rules inserted. The rule base contains 23606 rules. 26184 rules in the queue.
32600 rules inserted. The rule base contains 23806 rules. 25994 rules in the queue.
32800 rules inserted. The rule base contains 24006 rules. 25794 rules in the queue.
33000 rules inserted. The rule base contains 24206 rules. 25594 rules in the queue.
33200 rules inserted. The rule base contains 24404 rules. 26095 rules in the queue.
33400 rules inserted. The rule base contains 24538 rules. 26010 rules in the queue.
33600 rules inserted. The rule base contains 24534 rules. 25958 rules in the queue.
33800 rules inserted. The rule base contains 24408 rules. 25905 rules in the queue.
34000 rules inserted. The rule base contains 24430 rules. 25814 rules in the queue.
34200 rules inserted. The rule base contains 24216 rules. 25814 rules in the queue.
34400 rules inserted. The rule base contains 24326 rules. 25680 rules in the queue.
34600 rules inserted. The rule base contains 24292 rules. 25558 rules in the queue.
34800 rules inserted. The rule base contains 24214 rules. 25526 rules in the queue.
35000 rules inserted. The rule base contains 24414 rules. 25326 rules in the queue.
35200 rules inserted. The rule base contains 24126 rules. 25305 rules in the queue.
35400 rules inserted. The rule base contains 24106 rules. 25188 rules in the queue.
35600 rules inserted. The rule base contains 24165 rules. 25035 rules in the queue.
35800 rules inserted. The rule base contains 23789 rules. 25035 rules in the queue.
36000 rules inserted. The rule base contains 23936 rules. 24886 rules in the queue.
36200 rules inserted. The rule base contains 24136 rules. 24686 rules in the queue.
36400 rules inserted. The rule base contains 24336 rules. 24486 rules in the queue.
36600 rules inserted. The rule base contains 24536 rules. 24286 rules in the queue.
36800 rules inserted. The rule base contains 24736 rules. 24576 rules in the queue.
37000 rules inserted. The rule base contains 24936 rules. 24564 rules in the queue.
37200 rules inserted. The rule base contains 25136 rules. 24364 rules in the queue.
37400 rules inserted. The rule base contains 25336 rules. 24182 rules in the queue.
37600 rules inserted. The rule base contains 25536 rules. 23982 rules in the queue.
37800 rules inserted. The rule base contains 25736 rules. 23782 rules in the queue.
38000 rules inserted. The rule base contains 25936 rules. 24102 rules in the queue.
38200 rules inserted. The rule base contains 26136 rules. 24902 rules in the queue.
38400 rules inserted. The rule base contains 26336 rules. 25042 rules in the queue.
38600 rules inserted. The rule base contains 26536 rules. 24842 rules in the queue.
38800 rules inserted. The rule base contains 26736 rules. 24642 rules in the queue.
39000 rules inserted. The rule base contains 26936 rules. 24442 rules in the queue.
39200 rules inserted. The rule base contains 27136 rules. 24502 rules in the queue.
39400 rules inserted. The rule base contains 27013 rules. 24851 rules in the queue.
39600 rules inserted. The rule base contains 27156 rules. 24674 rules in the queue.
39800 rules inserted. The rule base contains 27035 rules. 24581 rules in the queue.
40000 rules inserted. The rule base contains 26786 rules. 24572 rules in the queue.
40200 rules inserted. The rule base contains 26986 rules. 24372 rules in the queue.
40400 rules inserted. The rule base contains 27186 rules. 24172 rules in the queue.
40600 rules inserted. The rule base contains 27386 rules. 23972 rules in the queue.
40800 rules inserted. The rule base contains 27586 rules. 23772 rules in the queue.
41000 rules inserted. The rule base contains 27786 rules. 24250 rules in the queue.
41200 rules inserted. The rule base contains 27986 rules. 24050 rules in the queue.
41400 rules inserted. The rule base contains 28186 rules. 23850 rules in the queue.
41600 rules inserted. The rule base contains 28386 rules. 23668 rules in the queue.
41800 rules inserted. The rule base contains 28586 rules. 23468 rules in the queue.
42000 rules inserted. The rule base contains 28786 rules. 23268 rules in the queue.
42200 rules inserted. The rule base contains 28986 rules. 23888 rules in the queue.
42400 rules inserted. The rule base contains 29186 rules. 24688 rules in the queue.
42600 rules inserted. The rule base contains 29386 rules. 24528 rules in the queue.
42800 rules inserted. The rule base contains 29586 rules. 24328 rules in the queue.
43000 rules inserted. The rule base contains 29786 rules. 24128 rules in the queue.
43200 rules inserted. The rule base contains 29986 rules. 23928 rules in the queue.
43400 rules inserted. The rule base contains 30186 rules. 24288 rules in the queue.
43600 rules inserted. The rule base contains 30224 rules. 24575 rules in the queue.
43800 rules inserted. The rule base contains 30341 rules. 24536 rules in the queue.
44000 rules inserted. The rule base contains 30541 rules. 24336 rules in the queue.
44200 rules inserted. The rule base contains 30741 rules. 24136 rules in the queue.
44400 rules inserted. The rule base contains 30941 rules. 23936 rules in the queue.
44600 rules inserted. The rule base contains 31141 rules. 23736 rules in the queue.
44800 rules inserted. The rule base contains 31341 rules. 23536 rules in the queue.
45000 rules inserted. The rule base contains 31541 rules. 23336 rules in the queue.
45200 rules inserted. The rule base contains 31685 rules. 24661 rules in the queue.
45400 rules inserted. The rule base contains 31805 rules. 24702 rules in the queue.
45600 rules inserted. The rule base contains 32005 rules. 24607 rules in the queue.
45800 rules inserted. The rule base contains 32205 rules. 24602 rules in the queue.
46000 rules inserted. The rule base contains 32369 rules. 24606 rules in the queue.
46200 rules inserted. The rule base contains 32524 rules. 24421 rules in the queue.
46400 rules inserted. The rule base contains 32661 rules. 24359 rules in the queue.
46600 rules inserted. The rule base contains 32854 rules. 24267 rules in the queue.
46800 rules inserted. The rule base contains 33025 rules. 24278 rules in the queue.
47000 rules inserted. The rule base contains 33174 rules. 24087 rules in the queue.
47200 rules inserted. The rule base contains 33295 rules. 24261 rules in the queue.
47400 rules inserted. The rule base contains 33414 rules. 24406 rules in the queue.
47600 rules inserted. The rule base contains 33586 rules. 24825 rules in the queue.
47800 rules inserted. The rule base contains 33760 rules. 24766 rules in the queue.
48000 rules inserted. The rule base contains 33954 rules. 24568 rules in the queue.
48200 rules inserted. The rule base contains 34086 rules. 24387 rules in the queue.
48400 rules inserted. The rule base contains 34286 rules. 24187 rules in the queue.
48600 rules inserted. The rule base contains 34486 rules. 23987 rules in the queue.
48800 rules inserted. The rule base contains 34686 rules. 23787 rules in the queue.
49000 rules inserted. The rule base contains 34886 rules. 23587 rules in the queue.
49200 rules inserted. The rule base contains 35086 rules. 23387 rules in the queue.
49400 rules inserted. The rule base contains 35286 rules. 23187 rules in the queue.
49600 rules inserted. The rule base contains 35486 rules. 22987 rules in the queue.
49800 rules inserted. The rule base contains 35671 rules. 22820 rules in the queue.
50000 rules inserted. The rule base contains 35757 rules. 22673 rules in the queue.
50200 rules inserted. The rule base contains 35843 rules. 22701 rules in the queue.
50400 rules inserted. The rule base contains 35870 rules. 22622 rules in the queue.
50600 rules inserted. The rule base contains 35971 rules. 22636 rules in the queue.
50800 rules inserted. The rule base contains 36046 rules. 22635 rules in the queue.
51000 rules inserted. The rule base contains 36104 rules. 22612 rules in the queue.
51200 rules inserted. The rule base contains 36102 rules. 22488 rules in the queue.
51400 rules inserted. The rule base contains 36108 rules. 22428 rules in the queue.
51600 rules inserted. The rule base contains 35798 rules. 22788 rules in the queue.
51800 rules inserted. The rule base contains 35518 rules. 22788 rules in the queue.
52000 rules inserted. The rule base contains 35118 rules. 22788 rules in the queue.
52200 rules inserted. The rule base contains 35042 rules. 22684 rules in the queue.
52400 rules inserted. The rule base contains 35242 rules. 22484 rules in the queue.
52600 rules inserted. The rule base contains 35442 rules. 22284 rules in the queue.
52800 rules inserted. The rule base contains 35642 rules. 22084 rules in the queue.
53000 rules inserted. The rule base contains 35842 rules. 21884 rules in the queue.
53200 rules inserted. The rule base contains 36042 rules. 21684 rules in the queue.
53400 rules inserted. The rule base contains 36020 rules. 21558 rules in the queue.
53600 rules inserted. The rule base contains 35620 rules. 21558 rules in the queue.
53800 rules inserted. The rule base contains 35220 rules. 21558 rules in the queue.
54000 rules inserted. The rule base contains 34856 rules. 21550 rules in the queue.
54200 rules inserted. The rule base contains 34456 rules. 21550 rules in the queue.
54400 rules inserted. The rule base contains 34176 rules. 21550 rules in the queue.
54600 rules inserted. The rule base contains 33776 rules. 21550 rules in the queue.
54800 rules inserted. The rule base contains 33696 rules. 21876 rules in the queue.
55000 rules inserted. The rule base contains 33694 rules. 21814 rules in the queue.
55200 rules inserted. The rule base contains 33594 rules. 22150 rules in the queue.
55400 rules inserted. The rule base contains 33222 rules. 22150 rules in the queue.
55600 rules inserted. The rule base contains 32914 rules. 22150 rules in the queue.
55800 rules inserted. The rule base contains 32535 rules. 22145 rules in the queue.
56000 rules inserted. The rule base contains 32732 rules. 21948 rules in the queue.
56200 rules inserted. The rule base contains 32932 rules. 21748 rules in the queue.
56400 rules inserted. The rule base contains 33132 rules. 21548 rules in the queue.
56600 rules inserted. The rule base contains 33332 rules. 21348 rules in the queue.
56800 rules inserted. The rule base contains 33532 rules. 21148 rules in the queue.
57000 rules inserted. The rule base contains 33732 rules. 20948 rules in the queue.
57200 rules inserted. The rule base contains 33416 rules. 20920 rules in the queue.
57400 rules inserted. The rule base contains 33016 rules. 20920 rules in the queue.
57600 rules inserted. The rule base contains 32616 rules. 20920 rules in the queue.
57800 rules inserted. The rule base contains 32252 rules. 20912 rules in the queue.
58000 rules inserted. The rule base contains 31912 rules. 20912 rules in the queue.
58200 rules inserted. The rule base contains 31572 rules. 20912 rules in the queue.
58400 rules inserted. The rule base contains 31292 rules. 21344 rules in the queue.
58600 rules inserted. The rule base contains 31377 rules. 21283 rules in the queue.
58800 rules inserted. The rule base contains 31477 rules. 21344 rules in the queue.
59000 rules inserted. The rule base contains 31567 rules. 21495 rules in the queue.
59200 rules inserted. The rule base contains 31647 rules. 21670 rules in the queue.
59400 rules inserted. The rule base contains 31541 rules. 22102 rules in the queue.
59600 rules inserted. The rule base contains 31172 rules. 22102 rules in the queue.
59800 rules inserted. The rule base contains 30861 rules. 22102 rules in the queue.
60000 rules inserted. The rule base contains 30491 rules. 22094 rules in the queue.
60200 rules inserted. The rule base contains 30688 rules. 21897 rules in the queue.
60400 rules inserted. The rule base contains 30888 rules. 21697 rules in the queue.
60600 rules inserted. The rule base contains 31088 rules. 21497 rules in the queue.
60800 rules inserted. The rule base contains 31288 rules. 21297 rules in the queue.
61000 rules inserted. The rule base contains 31488 rules. 21097 rules in the queue.
61200 rules inserted. The rule base contains 31688 rules. 20897 rules in the queue.
61400 rules inserted. The rule base contains 31363 rules. 20872 rules in the queue.
61600 rules inserted. The rule base contains 30963 rules. 20872 rules in the queue.
61800 rules inserted. The rule base contains 30563 rules. 20872 rules in the queue.
62000 rules inserted. The rule base contains 30163 rules. 20872 rules in the queue.
62200 rules inserted. The rule base contains 29838 rules. 20872 rules in the queue.
62400 rules inserted. The rule base contains 29483 rules. 20872 rules in the queue.
62600 rules inserted. The rule base contains 29225 rules. 21304 rules in the queue.
62800 rules inserted. The rule base contains 29171 rules. 21736 rules in the queue.
63000 rules inserted. The rule base contains 28776 rules. 21736 rules in the queue.
63200 rules inserted. The rule base contains 28491 rules. 21736 rules in the queue.
63400 rules inserted. The rule base contains 28091 rules. 21736 rules in the queue.
63600 rules inserted. The rule base contains 28240 rules. 21557 rules in the queue.
63800 rules inserted. The rule base contains 28440 rules. 21357 rules in the queue.
64000 rules inserted. The rule base contains 28640 rules. 21157 rules in the queue.
64200 rules inserted. The rule base contains 28840 rules. 20957 rules in the queue.
64400 rules inserted. The rule base contains 29040 rules. 20757 rules in the queue.
64600 rules inserted. The rule base contains 29240 rules. 20557 rules in the queue.
64800 rules inserted. The rule base contains 28993 rules. 20506 rules in the queue.
65000 rules inserted. The rule base contains 28593 rules. 20506 rules in the queue.
65200 rules inserted. The rule base contains 28193 rules. 20506 rules in the queue.
65400 rules inserted. The rule base contains 27793 rules. 20506 rules in the queue.
65600 rules inserted. The rule base contains 27442 rules. 20506 rules in the queue.
65800 rules inserted. The rule base contains 27113 rules. 20506 rules in the queue.
66000 rules inserted. The rule base contains 26800 rules. 20854 rules in the queue.
66200 rules inserted. The rule base contains 26972 rules. 20913 rules in the queue.
66400 rules inserted. The rule base contains 27152 rules. 20887 rules in the queue.
66600 rules inserted. The rule base contains 27334 rules. 20860 rules in the queue.
66800 rules inserted. The rule base contains 27468 rules. 21421 rules in the queue.
67000 rules inserted. The rule base contains 27602 rules. 21833 rules in the queue.
67200 rules inserted. The rule base contains 27736 rules. 22173 rules in the queue.
67400 rules inserted. The rule base contains 27924 rules. 22889 rules in the queue.
67600 rules inserted. The rule base contains 28106 rules. 23657 rules in the queue.
67800 rules inserted. The rule base contains 28268 rules. 24457 rules in the queue.
68000 rules inserted. The rule base contains 28413 rules. 24727 rules in the queue.
68200 rules inserted. The rule base contains 28460 rules. 24807 rules in the queue.
68400 rules inserted. The rule base contains 28460 rules. 24455 rules in the queue.
68600 rules inserted. The rule base contains 28468 rules. 24171 rules in the queue.
68800 rules inserted. The rule base contains 28472 rules. 23797 rules in the queue.
69000 rules inserted. The rule base contains 28472 rules. 23437 rules in the queue.
69200 rules inserted. The rule base contains 28649 rules. 23260 rules in the queue.
69400 rules inserted. The rule base contains 28849 rules. 23060 rules in the queue.
69600 rules inserted. The rule base contains 29049 rules. 22860 rules in the queue.
69800 rules inserted. The rule base contains 28381 rules. 22502 rules in the queue.
70000 rules inserted. The rule base contains 28574 rules. 22306 rules in the queue.
70200 rules inserted. The rule base contains 28762 rules. 22111 rules in the queue.
70400 rules inserted. The rule base contains 28962 rules. 21911 rules in the queue.
70600 rules inserted. The rule base contains 29150 rules. 21720 rules in the queue.
70800 rules inserted. The rule base contains 29350 rules. 21782 rules in the queue.
71000 rules inserted. The rule base contains 29538 rules. 21593 rules in the queue.
71200 rules inserted. The rule base contains 29738 rules. 21653 rules in the queue.
71400 rules inserted. The rule base contains 29931 rules. 21457 rules in the queue.
71600 rules inserted. The rule base contains 30131 rules. 21257 rules in the queue.
71800 rules inserted. The rule base contains 30331 rules. 21057 rules in the queue.
72000 rules inserted. The rule base contains 30531 rules. 20857 rules in the queue.
72200 rules inserted. The rule base contains 30559 rules. 20657 rules in the queue.
72400 rules inserted. The rule base contains 30559 rules. 20457 rules in the queue.
72600 rules inserted. The rule base contains 30559 rules. 20257 rules in the queue.
72800 rules inserted. The rule base contains 30557 rules. 20171 rules in the queue.
73000 rules inserted. The rule base contains 30557 rules. 20171 rules in the queue.
73200 rules inserted. The rule base contains 30557 rules. 20171 rules in the queue.
73400 rules inserted. The rule base contains 30559 rules. 20124 rules in the queue.
73600 rules inserted. The rule base contains 30559 rules. 19924 rules in the queue.
73800 rules inserted. The rule base contains 30559 rules. 19724 rules in the queue.
74000 rules inserted. The rule base contains 30559 rules. 19524 rules in the queue.
74200 rules inserted. The rule base contains 30746 rules. 20259 rules in the queue.
74400 rules inserted. The rule base contains 30946 rules. 21059 rules in the queue.
74600 rules inserted. The rule base contains 31146 rules. 21264 rules in the queue.
74800 rules inserted. The rule base contains 31339 rules. 21068 rules in the queue.
75000 rules inserted. The rule base contains 31539 rules. 20868 rules in the queue.
75200 rules inserted. The rule base contains 31739 rules. 20668 rules in the queue.
75400 rules inserted. The rule base contains 31889 rules. 20468 rules in the queue.
75600 rules inserted. The rule base contains 31889 rules. 20268 rules in the queue.
75800 rules inserted. The rule base contains 31889 rules. 20068 rules in the queue.
76000 rules inserted. The rule base contains 31889 rules. 19868 rules in the queue.
76200 rules inserted. The rule base contains 31887 rules. 19860 rules in the queue.
76400 rules inserted. The rule base contains 31887 rules. 19860 rules in the queue.
76600 rules inserted. The rule base contains 31887 rules. 19860 rules in the queue.
76800 rules inserted. The rule base contains 31889 rules. 19735 rules in the queue.
77000 rules inserted. The rule base contains 31889 rules. 19535 rules in the queue.
77200 rules inserted. The rule base contains 31889 rules. 19335 rules in the queue.
77400 rules inserted. The rule base contains 31954 rules. 19460 rules in the queue.
77600 rules inserted. The rule base contains 32154 rules. 20260 rules in the queue.
77800 rules inserted. The rule base contains 32354 rules. 21060 rules in the queue.
78000 rules inserted. The rule base contains 31915 rules. 20780 rules in the queue.
78200 rules inserted. The rule base contains 32104 rules. 20581 rules in the queue.
78400 rules inserted. The rule base contains 32299 rules. 20383 rules in the queue.
78600 rules inserted. The rule base contains 32495 rules. 20445 rules in the queue.
78800 rules inserted. The rule base contains 32686 rules. 20509 rules in the queue.
79000 rules inserted. The rule base contains 32881 rules. 20311 rules in the queue.
79200 rules inserted. The rule base contains 33081 rules. 20111 rules in the queue.
79400 rules inserted. The rule base contains 33281 rules. 19911 rules in the queue.
79600 rules inserted. The rule base contains 33309 rules. 19881 rules in the queue.
79800 rules inserted. The rule base contains 33309 rules. 19881 rules in the queue.
80000 rules inserted. The rule base contains 33309 rules. 19881 rules in the queue.
80200 rules inserted. The rule base contains 33417 rules. 20313 rules in the queue.
80400 rules inserted. The rule base contains 33617 rules. 21113 rules in the queue.
80600 rules inserted. The rule base contains 33812 rules. 21715 rules in the queue.
80800 rules inserted. The rule base contains 34012 rules. 21515 rules in the queue.
81000 rules inserted. The rule base contains 34212 rules. 21315 rules in the queue.
81200 rules inserted. The rule base contains 34373 rules. 21152 rules in the queue.
81400 rules inserted. The rule base contains 34373 rules. 21152 rules in the queue.
81600 rules inserted. The rule base contains 34373 rules. 21152 rules in the queue.
81800 rules inserted. The rule base contains 34373 rules. 21152 rules in the queue.
82000 rules inserted. The rule base contains 34548 rules. 21852 rules in the queue.
82200 rules inserted. The rule base contains 34748 rules. 22652 rules in the queue.
82400 rules inserted. The rule base contains 34834 rules. 23004 rules in the queue.
82600 rules inserted. The rule base contains 34833 rules. 22984 rules in the queue.
82800 rules inserted. The rule base contains 34978 rules. 23246 rules in the queue.
83000 rules inserted. The rule base contains 35178 rules. 23456 rules in the queue.
83200 rules inserted. The rule base contains 35377 rules. 23256 rules in the queue.
83400 rules inserted. The rule base contains 35297 rules. 23037 rules in the queue.
83600 rules inserted. The rule base contains 35297 rules. 22701 rules in the queue.
83800 rules inserted. The rule base contains 35297 rules. 22365 rules in the queue.
84000 rules inserted. The rule base contains 35297 rules. 22007 rules in the queue.
84200 rules inserted. The rule base contains 35442 rules. 22044 rules in the queue.
84400 rules inserted. The rule base contains 35603 rules. 22130 rules in the queue.
84600 rules inserted. The rule base contains 35692 rules. 21925 rules in the queue.
84800 rules inserted. The rule base contains 35853 rules. 22091 rules in the queue.
85000 rules inserted. The rule base contains 35988 rules. 22048 rules in the queue.
85200 rules inserted. The rule base contains 36120 rules. 22281 rules in the queue.
85400 rules inserted. The rule base contains 36243 rules. 22433 rules in the queue.
85600 rules inserted. The rule base contains 36415 rules. 22841 rules in the queue.
85800 rules inserted. The rule base contains 36573 rules. 22876 rules in the queue.
86000 rules inserted. The rule base contains 36665 rules. 22820 rules in the queue.
86200 rules inserted. The rule base contains 36715 rules. 22663 rules in the queue.
86400 rules inserted. The rule base contains 36902 rules. 22863 rules in the queue.
86600 rules inserted. The rule base contains 36947 rules. 23025 rules in the queue.
86800 rules inserted. The rule base contains 36974 rules. 22975 rules in the queue.
87000 rules inserted. The rule base contains 37010 rules. 22835 rules in the queue.
87200 rules inserted. The rule base contains 37118 rules. 22701 rules in the queue.
87400 rules inserted. The rule base contains 37117 rules. 22591 rules in the queue.
87600 rules inserted. The rule base contains 37308 rules. 22397 rules in the queue.
87800 rules inserted. The rule base contains 37508 rules. 22197 rules in the queue.
88000 rules inserted. The rule base contains 37705 rules. 22000 rules in the queue.
88200 rules inserted. The rule base contains 37905 rules. 21800 rules in the queue.
88400 rules inserted. The rule base contains 38105 rules. 21600 rules in the queue.
88600 rules inserted. The rule base contains 38298 rules. 21403 rules in the queue.
88800 rules inserted. The rule base contains 38498 rules. 21203 rules in the queue.
89000 rules inserted. The rule base contains 38698 rules. 21003 rules in the queue.
89200 rules inserted. The rule base contains 38897 rules. 20803 rules in the queue.
89400 rules inserted. The rule base contains 39097 rules. 20603 rules in the queue.
89600 rules inserted. The rule base contains 39297 rules. 20403 rules in the queue.
89800 rules inserted. The rule base contains 39497 rules. 20203 rules in the queue.
90000 rules inserted. The rule base contains 39696 rules. 20003 rules in the queue.
90200 rules inserted. The rule base contains 39896 rules. 19803 rules in the queue.
90400 rules inserted. The rule base contains 40096 rules. 19603 rules in the queue.
90600 rules inserted. The rule base contains 40296 rules. 19403 rules in the queue.
90800 rules inserted. The rule base contains 40496 rules. 19203 rules in the queue.
91000 rules inserted. The rule base contains 40696 rules. 19003 rules in the queue.
91200 rules inserted. The rule base contains 40896 rules. 18803 rules in the queue.
91400 rules inserted. The rule base contains 41096 rules. 18603 rules in the queue.
91600 rules inserted. The rule base contains 41296 rules. 18403 rules in the queue.
91800 rules inserted. The rule base contains 41496 rules. 18203 rules in the queue.
92000 rules inserted. The rule base contains 41696 rules. 18003 rules in the queue.
92200 rules inserted. The rule base contains 41893 rules. 17806 rules in the queue.
92400 rules inserted. The rule base contains 42093 rules. 17606 rules in the queue.
92600 rules inserted. The rule base contains 42293 rules. 17406 rules in the queue.
92800 rules inserted. The rule base contains 42493 rules. 17206 rules in the queue.
93000 rules inserted. The rule base contains 42686 rules. 17009 rules in the queue.
93200 rules inserted. The rule base contains 42886 rules. 16809 rules in the queue.
93400 rules inserted. The rule base contains 43086 rules. 16609 rules in the queue.
93600 rules inserted. The rule base contains 43285 rules. 16409 rules in the queue.
93800 rules inserted. The rule base contains 43485 rules. 16209 rules in the queue.
94000 rules inserted. The rule base contains 43685 rules. 16009 rules in the queue.
94200 rules inserted. The rule base contains 43884 rules. 15809 rules in the queue.
94400 rules inserted. The rule base contains 44084 rules. 15609 rules in the queue.
94600 rules inserted. The rule base contains 44284 rules. 15409 rules in the queue.
94800 rules inserted. The rule base contains 44484 rules. 15209 rules in the queue.
95000 rules inserted. The rule base contains 44684 rules. 15009 rules in the queue.
95200 rules inserted. The rule base contains 44884 rules. 14809 rules in the queue.
95400 rules inserted. The rule base contains 45084 rules. 14609 rules in the queue.
95600 rules inserted. The rule base contains 45284 rules. 14409 rules in the queue.
95800 rules inserted. The rule base contains 45484 rules. 14209 rules in the queue.
96000 rules inserted. The rule base contains 45684 rules. 14009 rules in the queue.
96200 rules inserted. The rule base contains 45884 rules. 13809 rules in the queue.
96400 rules inserted. The rule base contains 46084 rules. 13609 rules in the queue.
96600 rules inserted. The rule base contains 46186 rules. 13456 rules in the queue.
96800 rules inserted. The rule base contains 46386 rules. 13256 rules in the queue.
97000 rules inserted. The rule base contains 46578 rules. 13061 rules in the queue.
97200 rules inserted. The rule base contains 46770 rules. 12866 rules in the queue.
97400 rules inserted. The rule base contains 46970 rules. 12666 rules in the queue.
97600 rules inserted. The rule base contains 47170 rules. 12466 rules in the queue.
97800 rules inserted. The rule base contains 47369 rules. 12266 rules in the queue.
98000 rules inserted. The rule base contains 47569 rules. 12066 rules in the queue.
98200 rules inserted. The rule base contains 47769 rules. 11866 rules in the queue.
98400 rules inserted. The rule base contains 47969 rules. 11666 rules in the queue.
98600 rules inserted. The rule base contains 48169 rules. 11466 rules in the queue.
98800 rules inserted. The rule base contains 48369 rules. 11266 rules in the queue.
99000 rules inserted. The rule base contains 48569 rules. 11066 rules in the queue.
99200 rules inserted. The rule base contains 48769 rules. 10866 rules in the queue.
99400 rules inserted. The rule base contains 48969 rules. 10666 rules in the queue.
99600 rules inserted. The rule base contains 49169 rules. 10466 rules in the queue.
99800 rules inserted. The rule base contains 49369 rules. 10266 rules in the queue.
100000 rules inserted. The rule base contains 49569 rules. 10066 rules in the queue.
100200 rules inserted. The rule base contains 49761 rules. 9871 rules in the queue.
100400 rules inserted. The rule base contains 49961 rules. 9671 rules in the queue.
100600 rules inserted. The rule base contains 50161 rules. 9471 rules in the queue.
100800 rules inserted. The rule base contains 50360 rules. 9271 rules in the queue.
101000 rules inserted. The rule base contains 50560 rules. 9071 rules in the queue.
101200 rules inserted. The rule base contains 50760 rules. 8871 rules in the queue.
101400 rules inserted. The rule base contains 50960 rules. 8671 rules in the queue.
101600 rules inserted. The rule base contains 51160 rules. 8471 rules in the queue.
101800 rules inserted. The rule base contains 51360 rules. 8271 rules in the queue.
102000 rules inserted. The rule base contains 51560 rules. 8071 rules in the queue.
102200 rules inserted. The rule base contains 51760 rules. 7871 rules in the queue.
102400 rules inserted. The rule base contains 51960 rules. 7671 rules in the queue.
102600 rules inserted. The rule base contains 52160 rules. 7471 rules in the queue.
102800 rules inserted. The rule base contains 52360 rules. 7271 rules in the queue.
103000 rules inserted. The rule base contains 52560 rules. 7071 rules in the queue.
103200 rules inserted. The rule base contains 52705 rules. 7066 rules in the queue.
103400 rules inserted. The rule base contains 52767 rules. 7210 rules in the queue.
103600 rules inserted. The rule base contains 52918 rules. 7119 rules in the queue.
103800 rules inserted. The rule base contains 53118 rules. 6919 rules in the queue.
104000 rules inserted. The rule base contains 53318 rules. 6719 rules in the queue.
104200 rules inserted. The rule base contains 53518 rules. 6519 rules in the queue.
104400 rules inserted. The rule base contains 53590 rules. 6372 rules in the queue.
104600 rules inserted. The rule base contains 53623 rules. 6229 rules in the queue.
104800 rules inserted. The rule base contains 53667 rules. 6130 rules in the queue.
105000 rules inserted. The rule base contains 53678 rules. 5799 rules in the queue.
105200 rules inserted. The rule base contains 53678 rules. 5451 rules in the queue.
105400 rules inserted. The rule base contains 53690 rules. 5195 rules in the queue.
105600 rules inserted. The rule base contains 53690 rules. 4821 rules in the queue.
105800 rules inserted. The rule base contains 53690 rules. 4455 rules in the queue.
106000 rules inserted. The rule base contains 53874 rules. 4271 rules in the queue.
106200 rules inserted. The rule base contains 54074 rules. 4071 rules in the queue.
106400 rules inserted. The rule base contains 54274 rules. 3871 rules in the queue.
106600 rules inserted. The rule base contains 54408 rules. 3741 rules in the queue.
106800 rules inserted. The rule base contains 54533 rules. 3660 rules in the queue.
107000 rules inserted. The rule base contains 54473 rules. 3525 rules in the queue.
107200 rules inserted. The rule base contains 54409 rules. 3462 rules in the queue.
107400 rules inserted. The rule base contains 54349 rules. 3327 rules in the queue.
107600 rules inserted. The rule base contains 54276 rules. 3219 rules in the queue.
107800 rules inserted. The rule base contains 54476 rules. 3019 rules in the queue.
108000 rules inserted. The rule base contains 54676 rules. 2819 rules in the queue.
108200 rules inserted. The rule base contains 53429 rules. 2693 rules in the queue.
108400 rules inserted. The rule base contains 53470 rules. 2677 rules in the queue.
108600 rules inserted. The rule base contains 53496 rules. 2644 rules in the queue.
108800 rules inserted. The rule base contains 53670 rules. 2543 rules in the queue.
109000 rules inserted. The rule base contains 53870 rules. 2343 rules in the queue.
109200 rules inserted. The rule base contains 54009 rules. 2143 rules in the queue.
109400 rules inserted. The rule base contains 54048 rules. 2008 rules in the queue.
109600 rules inserted. The rule base contains 54080 rules. 1873 rules in the queue.
109800 rules inserted. The rule base contains 54160 rules. 1793 rules in the queue.
110000 rules inserted. The rule base contains 54226 rules. 1724 rules in the queue.
110200 rules inserted. The rule base contains 54295 rules. 1595 rules in the queue.
110400 rules inserted. The rule base contains 54422 rules. 1827 rules in the queue.
110600 rules inserted. The rule base contains 54498 rules. 1974 rules in the queue.
110800 rules inserted. The rule base contains 54593 rules. 2185 rules in the queue.
111000 rules inserted. The rule base contains 54710 rules. 2127 rules in the queue.
111200 rules inserted. The rule base contains 54910 rules. 1927 rules in the queue.
111400 rules inserted. The rule base contains 55110 rules. 1727 rules in the queue.
111600 rules inserted. The rule base contains 55092 rules. 1606 rules in the queue.
111800 rules inserted. The rule base contains 55290 rules. 1497 rules in the queue.
112000 rules inserted. The rule base contains 55489 rules. 1433 rules in the queue.
112200 rules inserted. The rule base contains 55451 rules. 1377 rules in the queue.
112400 rules inserted. The rule base contains 55547 rules. 1337 rules in the queue.
112600 rules inserted. The rule base contains 55653 rules. 1286 rules in the queue.
112800 rules inserted. The rule base contains 55781 rules. 1228 rules in the queue.
113000 rules inserted. The rule base contains 55868 rules. 1190 rules in the queue.
113200 rules inserted. The rule base contains 55906 rules. 1134 rules in the queue.
113400 rules inserted. The rule base contains 55968 rules. 1071 rules in the queue.
113600 rules inserted. The rule base contains 56056 rules. 1014 rules in the queue.
113800 rules inserted. The rule base contains 56061 rules. 1037 rules in the queue.
114000 rules inserted. The rule base contains 56137 rules. 994 rules in the queue.
114200 rules inserted. The rule base contains 56065 rules. 1049 rules in the queue.
114400 rules inserted. The rule base contains 56154 rules. 959 rules in the queue.
114600 rules inserted. The rule base contains 56165 rules. 926 rules in the queue.
114800 rules inserted. The rule base contains 56195 rules. 877 rules in the queue.
115000 rules inserted. The rule base contains 56218 rules. 874 rules in the queue.
115200 rules inserted. The rule base contains 55792 rules. 1334 rules in the queue.
115400 rules inserted. The rule base contains 55275 rules. 1903 rules in the queue.
115600 rules inserted. The rule base contains 55345 rules. 1918 rules in the queue.
115800 rules inserted. The rule base contains 55408 rules. 1923 rules in the queue.
116000 rules inserted. The rule base contains 55285 rules. 1959 rules in the queue.
116200 rules inserted. The rule base contains 54467 rules. 2720 rules in the queue.
116400 rules inserted. The rule base contains 53603 rules. 3569 rules in the queue.
116600 rules inserted. The rule base contains 52758 rules. 4388 rules in the queue.
116800 rules inserted. The rule base contains 52318 rules. 4782 rules in the queue.
117000 rules inserted. The rule base contains 51668 rules. 5435 rules in the queue.
117200 rules inserted. The rule base contains 51717 rules. 5432 rules in the queue.
117400 rules inserted. The rule base contains 51770 rules. 5421 rules in the queue.
117600 rules inserted. The rule base contains 51824 rules. 5438 rules in the queue.
117800 rules inserted. The rule base contains 51780 rules. 5416 rules in the queue.
118000 rules inserted. The rule base contains 51315 rules. 5881 rules in the queue.
118200 rules inserted. The rule base contains 51285 rules. 5846 rules in the queue.
118400 rules inserted. The rule base contains 50870 rules. 6261 rules in the queue.
118600 rules inserted. The rule base contains 51005 rules. 6061 rules in the queue.
118800 rules inserted. The rule base contains 51140 rules. 5861 rules in the queue.
119000 rules inserted. The rule base contains 50930 rules. 6071 rules in the queue.
119200 rules inserted. The rule base contains 50760 rules. 6241 rules in the queue.
119400 rules inserted. The rule base contains 50180 rules. 6821 rules in the queue.
119600 rules inserted. The rule base contains 50380 rules. 6621 rules in the queue.
119800 rules inserted. The rule base contains 50572 rules. 6421 rules in the queue.
120000 rules inserted. The rule base contains 50000 rules. 6936 rules in the queue.
120200 rules inserted. The rule base contains 50117 rules. 6801 rules in the queue.
120400 rules inserted. The rule base contains 49505 rules. 7366 rules in the queue.
120600 rules inserted. The rule base contains 49662 rules. 7181 rules in the queue.
120800 rules inserted. The rule base contains 49760 rules. 6981 rules in the queue.
121000 rules inserted. The rule base contains 49950 rules. 6791 rules in the queue.
121200 rules inserted. The rule base contains 49380 rules. 7361 rules in the queue.
121400 rules inserted. The rule base contains 49130 rules. 7611 rules in the queue.
121600 rules inserted. The rule base contains 49000 rules. 7741 rules in the queue.
121800 rules inserted. The rule base contains 49200 rules. 7541 rules in the queue.
122000 rules inserted. The rule base contains 49311 rules. 7420 rules in the queue.
122200 rules inserted. The rule base contains 49321 rules. 7399 rules in the queue.
122400 rules inserted. The rule base contains 49357 rules. 7350 rules in the queue.
122600 rules inserted. The rule base contains 49378 rules. 7387 rules in the queue.
122800 rules inserted. The rule base contains 49578 rules. 7187 rules in the queue.
123000 rules inserted. The rule base contains 49778 rules. 6987 rules in the queue.
123200 rules inserted. The rule base contains 49978 rules. 6787 rules in the queue.
123400 rules inserted. The rule base contains 50178 rules. 6587 rules in the queue.
123600 rules inserted. The rule base contains 50378 rules. 6387 rules in the queue.
123800 rules inserted. The rule base contains 50578 rules. 6187 rules in the queue.
124000 rules inserted. The rule base contains 50778 rules. 5987 rules in the queue.
124200 rules inserted. The rule base contains 50978 rules. 5787 rules in the queue.
124400 rules inserted. The rule base contains 51178 rules. 5587 rules in the queue.
124600 rules inserted. The rule base contains 51378 rules. 5387 rules in the queue.
124800 rules inserted. The rule base contains 51578 rules. 5187 rules in the queue.
125000 rules inserted. The rule base contains 51778 rules. 4987 rules in the queue.
125200 rules inserted. The rule base contains 51978 rules. 4787 rules in the queue.
125400 rules inserted. The rule base contains 52178 rules. 4587 rules in the queue.
125600 rules inserted. The rule base contains 52378 rules. 4387 rules in the queue.
125800 rules inserted. The rule base contains 52578 rules. 4187 rules in the queue.
126000 rules inserted. The rule base contains 52778 rules. 3987 rules in the queue.
126200 rules inserted. The rule base contains 52978 rules. 3787 rules in the queue.
126400 rules inserted. The rule base contains 53178 rules. 3587 rules in the queue.
126600 rules inserted. The rule base contains 53378 rules. 3387 rules in the queue.
126800 rules inserted. The rule base contains 53578 rules. 3187 rules in the queue.
127000 rules inserted. The rule base contains 53778 rules. 2987 rules in the queue.
127200 rules inserted. The rule base contains 53978 rules. 2787 rules in the queue.
127400 rules inserted. The rule base contains 54178 rules. 2587 rules in the queue.
127600 rules inserted. The rule base contains 54378 rules. 2387 rules in the queue.
127800 rules inserted. The rule base contains 54578 rules. 2187 rules in the queue.
128000 rules inserted. The rule base contains 54778 rules. 1987 rules in the queue.
128200 rules inserted. The rule base contains 54978 rules. 1787 rules in the queue.
128400 rules inserted. The rule base contains 55178 rules. 1587 rules in the queue.
128600 rules inserted. The rule base contains 55378 rules. 1387 rules in the queue.
128800 rules inserted. The rule base contains 55578 rules. 1187 rules in the queue.
129000 rules inserted. The rule base contains 55778 rules. 987 rules in the queue.
129200 rules inserted. The rule base contains 55978 rules. 787 rules in the queue.
129400 rules inserted. The rule base contains 56103 rules. 650 rules in the queue.
129600 rules inserted. The rule base contains 56092 rules. 597 rules in the queue.
129800 rules inserted. The rule base contains 56075 rules. 536 rules in the queue.
130000 rules inserted. The rule base contains 56044 rules. 574 rules in the queue.
130200 rules inserted. The rule base contains 56071 rules. 551 rules in the queue.
130400 rules inserted. The rule base contains 55987 rules. 574 rules in the queue.
130600 rules inserted. The rule base contains 55913 rules. 666 rules in the queue.
130800 rules inserted. The rule base contains 55971 rules. 651 rules in the queue.
131000 rules inserted. The rule base contains 55977 rules. 650 rules in the queue.
131200 rules inserted. The rule base contains 56037 rules. 614 rules in the queue.
131400 rules inserted. The rule base contains 56136 rules. 549 rules in the queue.
131600 rules inserted. The rule base contains 56143 rules. 436 rules in the queue.
131800 rules inserted. The rule base contains 56248 rules. 239 rules in the queue.
132000 rules inserted. The rule base contains 56336 rules. 130 rules in the queue.
132200 rules inserted. The rule base contains 56420 rules. 32 rules in the queue.
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(a_i[!1 = v_197274371])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(a_i[!1 = v_197274371])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(a_ni[!1 = v_197274370])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(a_ni[!1 = v_197274370])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(b_i[!1 = v_197274369])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(b_i[!1 = v_197274369])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent_p1(b_ni[!1 = v_197274368])
ok, secrecy assumption verified: fact unreachable attacker_dh_exponent(b_ni[!1 = v_197274368])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(x_i[!1 = v_197274367])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(x_ni[!1 = v_197274366])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(y_i[!1 = v_197274365])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(y_ni[!1 = v_197274364])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(z_i[!1 = v_197274363])
ok, secrecy assumption verified: fact unreachable attacker_ec_scalar(z_ni[!1 = v_197274362])
Starting query secret k_ia_191,k_ia_190,k_ia_189,k_ia_166,k_ia_165,k_ia_164,k_ia_141,k_ia_140,k_ia
RESULT secret k_ia_191,k_ia_190,k_ia_189,k_ia_166,k_ia_165,k_ia_164,k_ia_141,k_ia_140,k_ia is true.
Starting query secret k_ib_270,k_ib_268,k_ib_266,k_ib_243,k_ib_241,k_ib_239,k_ib_216,k_ib_214,k_ib
RESULT secret k_ib_270,k_ib_268,k_ib_266,k_ib_243,k_ib_241,k_ib_239,k_ib_216,k_ib_214,k_ib is true.
Starting query secret k_nia_414,k_nia_412,k_nia_410,k_nia_404,k_nia_402,k_nia_400,k_nia_394,k_nia_392,k_nia_390,k_nia_364,k_nia_362,k_nia_360,k_nia_354,k_nia_352,k_nia_350,k_nia_344,k_nia_342,k_nia_340,k_nia_314,k_nia_312,k_nia_310,k_nia_304,k_nia_302,k_nia_300,k_nia_294,k_nia_292,k_nia
goal reachable: attacker_ec_scalar(y_412421196) -> combined_end_attacker_bitstring_p1(k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_412421196,ec_mul(x_ni[!1 = @sid_412421197],ec_base)),ec_mul(d_134[],ec_mul(x_ni[!1 = @sid_412421197],ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_ni[!1 = @sid_412421197],ec_base)),dh(dh_generator,a_ni[!1 = @sid_412421197]))))),kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_412421196,ec_mul(x_ni[!1 = @sid_412421197],ec_base)),ec_mul(d_134[],ec_mul(x_ni[!1 = @sid_412421197],ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_ni[!1 = @sid_412421197],ec_base)),dh(dh_generator,a_ni[!1 = @sid_412421197])))))
Abbreviations:
x_419992282 = x_ni[!1 = @sid_419992280]
a_419992283 = a_ni[!1 = @sid_419992280]
y_419992284 = y_ni[!1 = @sid_419992264]
x_419992285 = x_ni[!1 = @sid_419992251]
b_419992286 = b_ni[!1 = @sid_419992264]
a_419992287 = a_ni[!1 = @sid_419992251]
z_419992288 = z_ni[!1 = @sid_419992251]
z_419992289 = z_ni[!1 = @sid_419992280]

1. The attacker has some term id_bob_419992036.
attacker_identity(id_bob_419992036).

2. The attacker initially knows id1[].
attacker_identity(id1[]).

3. By 2, the attacker may know id1[].
By 1, the attacker may know id_bob_419992036.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_419992036).
attacker_bitstring((id1[],id_bob_419992036)).

4. The attacker has some term B_419992035.
attacker_dh_group_element(B_419992035).

5. The attacker has some term b_419992045.
attacker_ec_point(b_419992045).

6. The message (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))) may be sent to the attacker at output {21}.
attacker_bitstring((eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))))).

7. By 6, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 4-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).

8. By 6, the attacker may know (eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],ec_point_as_bits(ec_mul(d[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base)))).
Using the function 2-proj-eddsa_signature-eddsa_signature-eddsa_signature-eddsa_signature-tuple the attacker may obtain eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
attacker_eddsa_signature(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))).

9. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 5, the attacker may know b_419992045.
By 4, the attacker may know B_419992035.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992045,B_419992035).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992045,B_419992035)).

10. The message (id1[],id_bob_419992036) that the attacker may have by 3 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992045,B_419992035) that the attacker may have by 9 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base)))))).

11. By 10, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992045),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992035,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base))))).
Using the function 1-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]))).

12. By 11, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])).
So the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])) in phase 1.
attacker_ring_signature_p1(ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]))).

13. By 12, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992045,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])) in phase 1.
Using the function ring_get_msg the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]) in phase 1.
attacker_bitstring_p1((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[])).

14. By 13, the attacker may know (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992045,ec_mul(x_419992282,ec_base),B_419992035,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992036,id1[]) in phase 1.
Using the function 6-proj-eddsa_signature-eddsa_signature-ec_point-ec_point-dh_group_element-dh_group_element-ec_point-identity-identity-tuple the attacker may obtain dh(dh_generator,a_419992283) in phase 1.
attacker_dh_group_element_p1(dh(dh_generator,a_419992283)).

15. The attacker has some term id_bob_419992076.
attacker_identity(id_bob_419992076).

16. By 2, the attacker may know id1[].
By 15, the attacker may know id_bob_419992076.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_419992076).
attacker_bitstring((id1[],id_bob_419992076)).

17. The attacker has some term B_419992075.
attacker_dh_group_element(B_419992075).

18. The attacker has some term b_419992084.
attacker_ec_point(b_419992084).

19. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 18, the attacker may know b_419992084.
By 17, the attacker may know B_419992075.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992084,B_419992075).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992084,B_419992075)).

20. The message (id1[],id_bob_419992076) that the attacker may have by 16 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),b_419992084,B_419992075) that the attacker may have by 19 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base)))))).

21. By 20, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]))),ec_mul(z_419992289,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992282,b_419992084),ec_mul(x_419992282,ec_mul(d_134[],ec_base)),ec_mul(x_419992282,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992075,a_419992283))))),ec_point_as_bits(ec_mul(z_419992289,ec_base))))).
Using the function 1-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]))).

22. By 21, the attacker may know ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),b_419992084,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])).
Using the function ring_get_msg the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[])).

23. By 22, the attacker may know (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),b_419992084,ec_mul(x_419992282,ec_base),B_419992075,dh(dh_generator,a_419992283),ec_mul(d_134[],ec_base),id_bob_419992076,id1[]).
Using the function 4-proj-eddsa_signature-eddsa_signature-ec_point-ec_point-dh_group_element-dh_group_element-ec_point-identity-identity-tuple the attacker may obtain ec_mul(x_419992282,ec_base).
attacker_ec_point(ec_mul(x_419992282,ec_base)).

24. By 23, the attacker may know ec_mul(x_419992282,ec_base).
So the attacker may know ec_mul(x_419992282,ec_base) in phase 1.
attacker_ec_point_p1(ec_mul(x_419992282,ec_base)).

25. The message (h[],f[],d[],h_129[],f_130[],d_134[]) may be sent to the attacker in phase 1 at output {1004}.
attacker_bitstring_p1((h[],f[],d[],h_129[],f_130[],d_134[])).

26. By 25, the attacker may know (h[],f[],d[],h_129[],f_130[],d_134[]) in phase 1.
Using the function 4-proj-eddsa_private_key-ec_scalar-ec_scalar-eddsa_private_key-ec_scalar-ec_scalar-tuple the attacker may obtain h_129[] in phase 1.
attacker_eddsa_private_key_p1(h_129[]).

27. By 26, the attacker may know h_129[] in phase 1.
Using the function eddsa_scalar the attacker may obtain eddsa_scalar(h_129[]) in phase 1.
attacker_ec_scalar_p1(eddsa_scalar(h_129[])).

28. By 27, the attacker may know eddsa_scalar(h_129[]) in phase 1.
By 24, the attacker may know ec_mul(x_419992282,ec_base) in phase 1.
Using the function ec_mul the attacker may obtain ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)) in phase 1.
attacker_ec_point_p1(ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base))).

29. By 25, the attacker may know (h[],f[],d[],h_129[],f_130[],d_134[]) in phase 1.
Using the function 6-proj-eddsa_private_key-ec_scalar-ec_scalar-eddsa_private_key-ec_scalar-ec_scalar-tuple the attacker may obtain d_134[] in phase 1.
attacker_ec_scalar_p1(d_134[]).

30. By 29, the attacker may know d_134[] in phase 1.
By 24, the attacker may know ec_mul(x_419992282,ec_base) in phase 1.
Using the function ec_mul the attacker may obtain ec_mul(d_134[],ec_mul(x_419992282,ec_base)) in phase 1.
attacker_ec_point_p1(ec_mul(d_134[],ec_mul(x_419992282,ec_base))).

31. Using the function ec_base the attacker may obtain ec_base.
attacker_ec_point(ec_base).

32. We assume as hypothesis that
attacker_ec_scalar(y_419992278).

33. By 32, the attacker may know y_419992278.
By 31, the attacker may know ec_base.
Using the function ec_mul the attacker may obtain ec_mul(y_419992278,ec_base).
attacker_ec_point(ec_mul(y_419992278,ec_base)).

34. By 33, the attacker may know ec_mul(y_419992278,ec_base).
So the attacker may know ec_mul(y_419992278,ec_base) in phase 1.
attacker_ec_point_p1(ec_mul(y_419992278,ec_base)).

35. The message x_419992282 may be sent on channel ec_leak[] at output {319}.
mess_ec_scalar(ec_leak[],x_419992282).

36. The message x_419992282 that may be sent on channel ec_leak[] by 35 may be received at input {1006}.
So the message x_419992282 may be sent to the attacker in phase 1 at output {1008}.
attacker_ec_scalar_p1(x_419992282).

37. By 36, the attacker may know x_419992282 in phase 1.
By 34, the attacker may know ec_mul(y_419992278,ec_base) in phase 1.
Using the function ec_mul the attacker may obtain ec_mul(y_419992278,ec_mul(x_419992282,ec_base)) in phase 1.
attacker_ec_point_p1(ec_mul(y_419992278,ec_mul(x_419992282,ec_base))).

38. By 37, the attacker may know ec_mul(y_419992278,ec_mul(x_419992282,ec_base)) in phase 1.
By 30, the attacker may know ec_mul(d_134[],ec_mul(x_419992282,ec_base)) in phase 1.
By 28, the attacker may know ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)) in phase 1.
By 14, the attacker may know dh(dh_generator,a_419992283) in phase 1.
Using the function ec_point-ec_point-ec_point-dh_group_element-tuple the attacker may obtain (ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)) in phase 1.
attacker_bitstring_p1((ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))).

39. Using the function usageTmpKey the attacker may obtain usageTmpKey in phase 1.
attacker_tag_p1(usageTmpKey).

40. By 39, the attacker may know usageTmpKey in phase 1.
By 38, the attacker may know (ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)) in phase 1.
Using the function kdf the attacker may obtain kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))) in phase 1.
attacker_bitstring_p1(kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)))).

41. Using the function usageSharedSecret the attacker may obtain usageSharedSecret in phase 1.
attacker_tag_p1(usageSharedSecret).

42. By 41, the attacker may know usageSharedSecret in phase 1.
By 40, the attacker may know kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))) in phase 1.
Using the function kdf the attacker may obtain kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)))) in phase 1.
attacker_bitstring_p1(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))))).

43. The attacker initially knows id2[].
attacker_identity(id2[]).

44. By 43, the attacker may know id2[].
By 43, the attacker may know id2[].
Using the function identity-identity-tuple the attacker may obtain (id2[],id2[]).
attacker_bitstring((id2[],id2[])).

45. Using the function dh_generator the attacker may obtain dh_generator.
attacker_dh_group_element(dh_generator).

46. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 33, the attacker may know ec_mul(y_419992278,ec_base).
By 45, the attacker may know dh_generator.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992278,ec_base),dh_generator).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992278,ec_base),dh_generator)).

47. The attacker has some term id_bob_419992200.
attacker_identity(id_bob_419992200).

48. By 2, the attacker may know id1[].
By 47, the attacker may know id_bob_419992200.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_419992200).
attacker_bitstring((id1[],id_bob_419992200)).

49. The attacker has some term id_alice_419992125.
attacker_identity(id_alice_419992125).

50. By 49, the attacker may know id_alice_419992125.
By 2, the attacker may know id1[].
Using the function identity-identity-tuple the attacker may obtain (id_alice_419992125,id1[]).
attacker_bitstring((id_alice_419992125,id1[])).

51. The message (id_alice_419992125,id1[]) that the attacker may have by 50 may be received at input {669}.
So the message (ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)) may be sent to the attacker at output {678}.
attacker_bitstring((ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286))).

52. By 51, the attacker may know (ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)).
Using the function 2-proj-ec_point-dh_group_element-tuple the attacker may obtain dh(dh_generator,b_419992286).
attacker_dh_group_element(dh(dh_generator,b_419992286)).

53. By 51, the attacker may know (ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)).
Using the function 1-proj-ec_point-dh_group_element-tuple the attacker may obtain ec_mul(y_419992284,ec_base).
attacker_ec_point(ec_mul(y_419992284,ec_base)).

54. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 53, the attacker may know ec_mul(y_419992284,ec_base).
By 52, the attacker may know dh(dh_generator,b_419992286).
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286))).

55. The message (id1[],id_bob_419992200) that the attacker may have by 48 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)) that the attacker may have by 54 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))))).

56. By 55, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992200,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).
Using the function 4-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))).
attacker_bitstring(kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).

57. The attacker has some term id_bob_419992154.
attacker_identity(id_bob_419992154).

58. By 2, the attacker may know id1[].
By 57, the attacker may know id_bob_419992154.
Using the function identity-identity-tuple the attacker may obtain (id1[],id_bob_419992154).
attacker_bitstring((id1[],id_bob_419992154)).

59. The attacker has some term B_419992153.
attacker_dh_group_element(B_419992153).

60. The attacker has some term Y_419992152.
attacker_ec_point(Y_419992152).

61. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 60, the attacker may know Y_419992152.
By 59, the attacker may know B_419992153.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992152,B_419992153).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992152,B_419992153)).

62. The message (id1[],id_bob_419992154) that the attacker may have by 58 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992152,B_419992153) that the attacker may have by 61 may be received at input {328}.
So the message (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_419992152,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))) may be sent to the attacker at output {359}.
attacker_bitstring((ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_419992152,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))))).

63. By 62, the attacker may know (ring_sign(eddsa_scalar(h[]),ec_mul(f_130[],ec_base),Y_419992152,(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h[],(ec_mul(eddsa_scalar(h[]),ec_base),ec_mul(f[],ec_base))),Y_419992152,ec_mul(x_419992285,ec_base),B_419992153,dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id_bob_419992154,id1[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,Y_419992152),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(B_419992153,a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).
Using the function 3-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ec_mul(z_419992288,ec_base).
attacker_ec_point(ec_mul(z_419992288,ec_base)).

64. The message (id2[],id2[]) that the attacker may have by 44 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992284,ec_base),dh(dh_generator,b_419992286)) that the attacker may have by 54 may be received at input {441}.
So the message (ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))) may be sent to the attacker at output {472}.
attacker_bitstring((ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))))).

65. By 64, the attacker may know (ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).
Using the function 2-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))).
attacker_bitstring(kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])))).

66. By 64, the attacker may know (ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).
Using the function 1-proj-ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])).
attacker_ring_signature(ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))).

67. By 66, the attacker may know ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])).
By 65, the attacker may know kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))).
By 63, the attacker may know ec_mul(z_419992288,ec_base).
By 56, the attacker may know kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))).
Using the function ring_signature-bitstring-ec_point-bitstring-tuple the attacker may obtain (ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))).
attacker_bitstring((ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base)))))).

68. The attacker has some term id_bob_419992179.
attacker_identity(id_bob_419992179).

69. By 43, the attacker may know id2[].
By 68, the attacker may know id_bob_419992179.
Using the function identity-identity-tuple the attacker may obtain (id2[],id_bob_419992179).
attacker_bitstring((id2[],id_bob_419992179)).

70. The attacker has some term B_419992178.
attacker_dh_group_element(B_419992178).

71. The attacker has some term Y_419992177.
attacker_ec_point(Y_419992177).

72. By 8, the attacker may know eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))).
By 7, the attacker may know eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))).
By 71, the attacker may know Y_419992177.
By 70, the attacker may know B_419992178.
Using the function eddsa_signature-eddsa_signature-ec_point-dh_group_element-tuple the attacker may obtain (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992177,B_419992178).
attacker_bitstring((eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992177,B_419992178)).

73. The message (id2[],id_bob_419992179) that the attacker may have by 69 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),Y_419992177,B_419992178) that the attacker may have by 72 may be received at input {441}.
So the message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))) may be sent on channel ac[] at output {473}.
mess_bitstring(ac[],(fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))))).

74. The message (id2[],id2[]) that the attacker may have by 44 may be received at input {669}.
The message (ring_sign(eddsa_scalar(h_129[]),ec_mul(f_130[],ec_base),ec_mul(y_419992284,ec_base),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[])),kdf(usageAuthMAC,(kdf(usageAuthMACKey,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287)))),(eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),ec_mul(y_419992284,ec_base),ec_mul(x_419992285,ec_base),dh(dh_generator,b_419992286),dh(dh_generator,a_419992287),ec_mul(d_134[],ec_base),id2[],id2[]))),ec_mul(z_419992288,ec_base),kdf(usageAuthenticator,(kdf(usageMACKey,kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(x_419992285,ec_mul(y_419992284,ec_base)),ec_mul(x_419992285,ec_mul(d_134[],ec_base)),ec_mul(x_419992285,ec_mul(eddsa_scalar(h_129[]),ec_base)),dh(dh(dh_generator,b_419992286),a_419992287))))),ec_point_as_bits(ec_mul(z_419992288,ec_base))))) that the attacker may have by 67 may be received at input {788}.
The message (fp_nidake_alice,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))) that may be sent on channel ac[] by 73 may be received at input {815}.
So the message (fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))) may be sent on channel ac[] at output {816}.
mess_bitstring(ac[],(fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))))).

75. The message (id2[],id2[]) that the attacker may have by 44 may be received at input {322}.
The message (eddsa_sign(h_129[],(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base))),eddsa_sign(h_129[],ec_point_as_bits(ec_mul(d_134[],ec_base))),ec_mul(y_419992278,ec_base),dh_generator) that the attacker may have by 46 may be received at input {441}.
The message (fp_nidake_bob,kdf(usageFingerprint,(ec_mul(eddsa_scalar(h_129[]),ec_base),ec_mul(f_130[],ec_base)))) that may be sent on channel ac[] by 74 may be received at input {474}.
So event k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))))) may be executed at {478}.
end(k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)))))).

76. By 75, end(k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283)))))).
By 42, attacker_bitstring_p1(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))))).
The goals are reached, combined in the following fact:
combined_end_attacker_bitstring_p1(k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))))),kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992278,ec_mul(x_419992282,ec_base)),ec_mul(d_134[],ec_mul(x_419992282,ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_419992282,ec_base)),dh(dh_generator,a_419992283))))).


Unified id_bob_419992154 with id2[]
Unified id_bob_419992200 with id2[]
Unified Y_419992152 with ec_mul(y_ni[!1 = @sid_419992264],ec_base)
Unified B_419992153 with dh(dh_generator,b_ni[!1 = @sid_419992264])
Unified id_alice_419992125 with id2[]
Unified id_bob_419992076 with id2[]
Unified id_bob_419992036 with id2[]
Unified b_419992045 with b_419992084
Unified B_419992035 with B_419992075
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker_ec_scalar(y_419992378) -> combined_end_attacker_bitstring_p1(k_nia_contains(kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992378,ec_mul(x_ni[!1 = @sid_419992379],ec_base)),ec_mul(d_134[],ec_mul(x_ni[!1 = @sid_419992379],ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_ni[!1 = @sid_419992379],ec_base)),dh(dh_generator,a_ni[!1 = @sid_419992379]))))),kdf(usageSharedSecret,kdf(usageTmpKey,(ec_mul(y_419992378,ec_mul(x_ni[!1 = @sid_419992379],ec_base)),ec_mul(d_134[],ec_mul(x_ni[!1 = @sid_419992379],ec_base)),ec_mul(eddsa_scalar(h_129[]),ec_mul(x_ni[!1 = @sid_419992379],ec_base)),dh(dh_generator,a_ni[!1 = @sid_419992379])))))
This clause still contradicts the query.
Could not find a trace corresponding to this derivation.
RESULT secret k_nia_414,k_nia_412,k_nia_410,k_nia_404,k_nia_402,k_nia_400,k_nia_394,k_nia_392,k_nia_390,k_nia_364,k_nia_362,k_nia_360,k_nia_354,k_nia_352,k_nia_350,k_nia_344,k_nia_342,k_nia_340,k_nia_314,k_nia_312,k_nia_310,k_nia_304,k_nia_302,k_nia_300,k_nia_294,k_nia_292,k_nia cannot be proved.
Starting query secret k_nib_545,k_nib_544,k_nib_543,k_nib_538,k_nib_537,k_nib_536,k_nib_531,k_nib_530,k_nib_529,k_nib_502,k_nib_501,k_nib_500,k_nib_495,k_nib_494,k_nib_493,k_nib_488,k_nib_487,k_nib_486,k_nib_459,k_nib_458,k_nib_457,k_nib_452,k_nib_451,k_nib_450,k_nib_445,k_nib_444,k_nib
RESULT secret k_nib_545,k_nib_544,k_nib_543,k_nib_538,k_nib_537,k_nib_536,k_nib_531,k_nib_530,k_nib_529,k_nib_502,k_nib_501,k_nib_500,k_nib_495,k_nib_494,k_nib_493,k_nib_488,k_nib_487,k_nib_486,k_nib_459,k_nib_458,k_nib_457,k_nib_452,k_nib_451,k_nib_450,k_nib_445,k_nib_444,k_nib is true.
